{"version":3,"sources":["/home/stephej1/Projects/ps/inst/angular/src/$_gendir lazy","/home/stephej1/Projects/ps/inst/angular/src/app/app.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/app.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/app.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/app.module.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/abstract-plot.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/bottom-plot/bottom-plot.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/bottom-plot/bottom-plot.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/bottom-plot/bottom-plot.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/ceil.pipe.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/changeable.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/draggable-dialog/draggable-dialog.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/draggable-dialog/draggable-dialog.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/draggable-dialog/draggable-dialog.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/export-plots/export-plots.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/export-plots/export-plots.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/export-plots/export-plots.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/form/form.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/form/form.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/form/form.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/help/help.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/help/help.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/help/help.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/output-pane/output-pane.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/output-pane/output-pane.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/output-pane/output-pane.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/palette.service.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options.service.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options/plot-options.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options/plot-options.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options/plot-options.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot/plot.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot/plot.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot/plot.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/range-slider/range-slider.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/range-slider/range-slider.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/range-slider/range-slider.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/range.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/round.pipe.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/serialize-plot.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/start/start.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/start/start.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/start/start.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.component.css","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.component.html","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.component.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.module.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.service.ts","/home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.ts","/home/stephej1/Projects/ps/inst/angular/src/environments/environment.ts","/home/stephej1/Projects/ps/inst/angular/src/main.ts","util (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#app {\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div id=\\\"app\\\" class=\\\"container-fluid d-flex flex-column h-100\\\">\\n  <nav class=\\\"navbar d-flex flex-nowrap flex-row justify-content-between\\\" style=\\\"flex: 0 0 auto\\\">\\n    <div class=\\\"navbar-brand\\\">\\n      <img src=\\\"assets/ps.jpg\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\n      Power and Sample Size\\n    </div>\\n    <ul class=\\\"nav nav-pills\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" href=\\\"#\\\">t-test</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Survival</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Dichotomous</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Regression</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Mantel-Haenszel</a>\\n      </li>\\n    </ul>\\n  </nav>\\n\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  ngOnInit(): void {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TTestModule } from './t-test/t-test.module';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/t-test', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [ AppComponent ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    NgbModule.forRoot(),\n    TTestModule\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/app.module.ts","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport * as d3 from 'd3';\n\nexport abstract class AbstractPlotComponent {\n  @Input() name: string;\n  @ViewChild('plot') plotElement: ElementRef;\n  title: string;\n  xScale: any;\n  yScale: any;\n\n  constructor() {}\n\n  getDimension(key: string): number {\n    let dim = this.plotElement.nativeElement[key];\n    let result = 0;\n    if ('value' in dim) {\n      result = dim.value;\n    } else if ('baseVal' in dim) {\n      result = dim.baseVal.value;\n    } else {\n      throw new Error(`can't get ${key}`);\n    }\n    return result;\n  }\n\n  protected translate(x: number, y: number): string {\n    if (isNaN(x) || isNaN(y)) {\n      return null;\n    }\n    return `translate(${x}, ${y})`;\n  }\n\n  protected getPath(data: any[], xName = \"x\", yName = \"y\"): string {\n    let line = d3.line().\n      x((d, i) => this.xScale(d[xName])).\n      y((d, i) => this.yScale(d[yName]));\n\n    return line(data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/abstract-plot.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".target, .bar {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/bottom-plot/bottom-plot.component.css\n// module id = ../../../../../src/app/t-test/bottom-plot/bottom-plot.component.css\n// module chunks = main","module.exports = \"<svg #plot\\n  [style.fontFamily]=\\\"plotOptions.fontFamily\\\"\\n  [style.fontSize]=\\\"(plotOptions.fontSize * 110).toString() + '%'\\\"\\n  [attr.class]=\\\"name\\\" [attr.width]=\\\"fixedWidth\\\" [attr.height]=\\\"fixedHeight\\\">\\n\\n  <rect #unit x=\\\"0\\\" y=\\\"0\\\" width=\\\"1em\\\" height=\\\"1em\\\" stroke=\\\"none\\\" fill=\\\"none\\\" />\\n  <ng-template [ngIf]=\\\"groups && modelSet\\\">\\n    <defs>\\n      <clipPath id=\\\"{{name}}-plot-area\\\">\\n        <rect x=\\\"0\\\" y=\\\"0\\\" [attr.width]=\\\"innerWidth\\\" [attr.height]=\\\"innerHeight\\\" />\\n      </clipPath>\\n    </defs>\\n\\n    <text text-anchor=\\\"middle\\\"\\n      [attr.x]=\\\"innerWidth / 2 + margin\\\" [attr.y]=\\\"innerHeight + margin\\\" dy=\\\"2.5em\\\">\\n      Parameter Space\\n    </text>\\n    <text text-anchor=\\\"middle\\\" font-weight=\\\"bold\\\"\\n      [attr.x]=\\\"innerWidth / 2 + margin\\\" y=\\\"0\\\" dy=\\\"2em\\\">\\n      {{title}}\\n    </text>\\n\\n    <!-- alternate groups -->\\n    <g *ngFor=\\\"let group of groups; let i = index; trackBy: trackByIndex\\\"\\n      [attr.transform]=\\\"translate(margin, margin)\\\">\\n\\n      <path id=\\\"{{name}}-group-{{i}}-dist\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.fill]=\\\"getColor(groups.length - i)\\\"\\n        stroke=\\\"none\\\" opacity=\\\"0.5\\\" />\\n\\n      <path id=\\\"{{name}}-group-{{i}}-center\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.stroke]=\\\"getColor(groups.length - i)\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        fill=\\\"none\\\" />\\n\\n      <path id=\\\"{{name}}-group-{{i}}-left\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.stroke]=\\\"getColor(groups.length - i)\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        fill=\\\"none\\\" />\\n\\n      <path id=\\\"{{name}}-group-{{i}}-right\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.stroke]=\\\"getColor(groups.length - i)\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        fill=\\\"none\\\" />\\n\\n      <circle id=\\\"{{name}}-group-{{i}}-target\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        r=\\\"5\\\"\\n        [attr.fill]=\\\"getColor(groups.length - i)\\\" />\\n    </g>\\n\\n    <!-- main group -->\\n    <g [attr.transform]=\\\"translate(margin + targetTranslateOffset, margin)\\\">\\n      <path id=\\\"{{name}}-main-dist\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.fill]=\\\"getColor(0)\\\"\\n        stroke=\\\"none\\\" [attr.opacity]=\\\"targetDragging ? 0.1 : 0.5\\\" />\\n\\n      <path id=\\\"{{name}}-main-center\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.stroke]=\\\"getColor(0)\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        [attr.opacity]=\\\"targetDragging ? 0.1 : 0.9\\\"\\n        fill=\\\"none\\\" />\\n\\n      <path #leftBar id=\\\"{{name}}-main-left\\\" class=\\\"bar\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.stroke]=\\\"getColor(0)\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 4\\\"\\n        [attr.opacity]=\\\"targetDragging ? 0.1 : 0.9\\\"\\n        [attr.transform]=\\\"translate(barTranslateOffset, 0)\\\"\\n        fill=\\\"none\\\"\\n        (mouseover)=\\\"toggleLeftBarInfo(true)\\\"\\n        (mouseout)=\\\"toggleLeftBarInfo(false)\\\" />\\n\\n      <g *ngIf=\\\"showLeftBarInfo\\\"\\n        [attr.transform]=\\\"translate(xScale(mainGroup.left + barOffset) - (4 * unitLength), yScale(0.5))\\\">\\n        <rect x=\\\"0\\\" y=\\\"-3.5em\\\" width=\\\"8em\\\" height=\\\"1.5em\\\"\\n          stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.9\\\" />\\n        <text x=\\\"1em\\\" y=\\\"-2.5em\\\">95% CI: {{ciWidth() | round}}</text>\\n      </g>\\n\\n      <path #rightBar id=\\\"{{name}}-main-right\\\" class=\\\"bar\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.stroke]=\\\"getColor(0)\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 4\\\"\\n        [attr.opacity]=\\\"targetDragging ? 0.1 : 0.9\\\"\\n        [attr.transform]=\\\"translate(-barTranslateOffset, 0)\\\"\\n        fill=\\\"none\\\"\\n        (mouseover)=\\\"toggleRightBarInfo(true)\\\"\\n        (mouseout)=\\\"toggleRightBarInfo(false)\\\" />\\n\\n      <g *ngIf=\\\"showRightBarInfo\\\"\\n        [attr.transform]=\\\"translate(xScale(mainGroup.right - barOffset) - (4 * unitLength), yScale(0.5))\\\">\\n        <rect x=\\\"0\\\" y=\\\"-3.5em\\\" width=\\\"8em\\\" height=\\\"1.5em\\\"\\n          stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.9\\\" />\\n        <text x=\\\"1em\\\" y=\\\"-2.5em\\\">95% CI: {{ciWidth() | round}}</text>\\n      </g>\\n\\n      <g *ngIf=\\\"showTargetInfo\\\"\\n        [attr.transform]=\\\"translate(xScale(mainGroup.target), yScale(0.5))\\\">\\n        <rect x=\\\"0\\\" y=\\\"-3.5em\\\" width=\\\"6em\\\" height=\\\"1.5em\\\"\\n          stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.8\\\" />\\n        <text x=\\\"1em\\\" y=\\\"-3.5em\\\">\\n          <tspan dy=\\\"1em\\\" text-anchor=\\\"right\\\">&delta;:</tspan>\\n          <tspan x=\\\"2.5em\\\" text-anchor=\\\"left\\\">{{(mainGroup.target + targetOffset) | round}}</tspan>\\n        </text>\\n      </g>\\n\\n      <circle #target id=\\\"{{name}}-main-target\\\" class=\\\"target\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        r=\\\"5\\\"\\n        [attr.fill]=\\\"getColor(0)\\\"\\n        (mouseover)=\\\"toggleTargetInfo(true)\\\"\\n        (mouseout)=\\\"toggleTargetInfo(false)\\\" />\\n    </g>\\n\\n    <circle r=\\\"5\\\"\\n      [attr.cx]=\\\"xScale(0)\\\"\\n      [attr.cy]=\\\"yScale(0.5)\\\"\\n      attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n      [attr.transform]=\\\"translate(margin, margin)\\\"\\n      fill=\\\"darkseagreen\\\" />\\n\\n    <g id=\\\"{{name}}-bottom-axis\\\" [attr.transform]=\\\"translate(margin, innerHeight + margin)\\\"></g>\\n  </ng-template>\\n</svg>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/bottom-plot/bottom-plot.component.html\n// module id = ../../../../../src/app/t-test/bottom-plot/bottom-plot.component.html\n// module chunks = main","import {\n  Component, Input, OnInit, OnChanges, SimpleChanges, AfterViewChecked,\n  ViewChild, ElementRef, ViewEncapsulation\n} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/debounceTime';\n\nimport * as d3 from 'd3';\n\nimport { AbstractPlotComponent } from '../abstract-plot.component';\nimport { TTestSet } from '../t-test';\nimport { Range } from '../range';\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\n\ninterface Group {\n  leftPath: string,\n  centerPath: string,\n  rightPath: string,\n  distPath: string,\n  left: number,\n  target: number\n  right: number\n};\n\nenum CIBar {\n  Left,\n  Right\n};\n\n@Component({\n  selector: 't-test-bottom-plot',\n  templateUrl: './bottom-plot.component.html',\n  styleUrls: ['./bottom-plot.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BottomPlotComponent extends AbstractPlotComponent implements OnInit, OnChanges, AfterViewChecked {\n  @Input('model-set') modelSet: TTestSet;\n  @Input('fixed-width') fixedWidth: number;\n  @Input('fixed-height') fixedHeight: number;\n  @Input('disable-drag-target') disableDragTarget = false;\n  @Input('disable-drag-ci') disableDragCI = false;\n\n  @ViewChild('unit') unitElement: ElementRef;\n  @ViewChild('target') targetElement: ElementRef;\n  @ViewChild('leftBar') leftBarElement: ElementRef;\n  @ViewChild('rightBar') rightBarElement: ElementRef;\n\n  title = \"Precision vs. Effect Size\";\n  margin: number = 50;\n  width: number;\n  height: number;\n  innerWidth: number;\n  innerHeight: number;\n  unitLength: number;\n  xScale: any;\n  yScale: any;\n  yScaleSD: any;\n  mainGroup: Group;\n  groups: Group[];\n  needDraw: boolean;\n\n  // target dragging\n  targetOffset = 0;\n  targetTranslateOffset = 0;\n  targetDragging = false;\n  targetWasDragging = false;\n  showTargetInfo = false;\n\n  // bar dragging\n  barOffset = 0;\n  barTranslateOffset = 0;\n  barDragging = false;\n  barWasDragging = false;\n  showLeftBarInfo = false;\n  showRightBarInfo = false;\n\n  private subscription: Subscription;\n\n  constructor(public plotOptions: PlotOptionsService, public palette: PaletteService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.plotOptions.onChange.subscribe(this.compute.bind(this));\n    this.compute();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.modelSet) {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n      if (this.modelSet) {\n        let observable = Observable.merge(this.modelSet.onCompute, this.modelSet.onChange);\n        this.subscription = observable.debounceTime(10).subscribe(this.compute.bind(this));\n        this.compute();\n      }\n    } else if (changes.fixedWidth || changes.fixedHeight) {\n      this.compute();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    this.draw();\n  }\n\n  redraw(): void {\n    this.compute();\n  }\n\n  toggleTargetInfo(value: boolean): void {\n    if (!this.targetDragging && !this.barDragging) {\n      this.showTargetInfo = value;\n    }\n  }\n\n  toggleLeftBarInfo(value: boolean): void {\n    if (!this.targetDragging && !this.barDragging) {\n      this.showLeftBarInfo = value;\n    }\n  }\n\n  toggleRightBarInfo(value: boolean): void {\n    if (!this.targetDragging && !this.barDragging) {\n      this.showRightBarInfo = value;\n    }\n  }\n\n  getColor(index: number): string {\n    return this.palette.getColor(index, this.plotOptions.paletteTheme);\n  }\n\n  trackByIndex(index: number, thing: any): any {\n    return index;\n  }\n\n  private compute(): void {\n    if (!this.modelSet) {\n      return;\n    }\n\n    // margin\n    let unitBox = this.unitElement.nativeElement.getBBox();\n    if (unitBox && unitBox.width) {\n      this.margin = unitBox.width * 2 + (20 * this.plotOptions.axisFontSize);\n      this.unitLength = unitBox.width;\n    }\n\n    // dimensions\n    if (this.fixedWidth) {\n      this.width = this.fixedWidth;\n    } else {\n      this.width = this.getDimension('width');\n    }\n\n    if (this.fixedHeight) {\n      this.height = this.fixedHeight;\n    } else {\n      this.height = this.getDimension('height');\n    }\n    this.innerWidth  = this.width  - (this.margin * 2);\n    this.innerHeight = this.height - (this.margin * 2);\n\n    let ranges = this.modelSet.ranges;\n    let data = this.modelSet.models.map(m => m.data.tertiary);\n\n    // compute scales\n    this.xScale = d3.scaleLinear().\n      domain(ranges.pSpace.toArray()).\n      range([0, this.innerWidth]);\n\n    this.yScale = d3.scaleLinear().\n      domain([0, 0.8]).\n      range([0, this.innerHeight]);\n\n    let sampDistExtent = data.reduce((arr, subData) => {\n      let extent = d3.extent(subData.data, d => d.sampDist);\n      return d3.extent(arr.concat(extent));\n    }, []);\n    this.yScaleSD = d3.scaleLinear().\n      domain(sampDistExtent.reverse()).\n      range([0, this.yScale(0.5)]).\n      clamp(true);\n\n    this.groups = data.reverse().map(subData => {\n      // main lines\n      let leftLimit = subData.range[0];\n      let leftPath = this.getPath([\n        { x: leftLimit, y: 0.35 },\n        { x: leftLimit, y: 0.65 }\n      ]);\n\n      let rightLimit = subData.range[1];\n      let rightPath = this.getPath([\n        { x: rightLimit, y: 0.35 },\n        { x: rightLimit, y: 0.65 }\n      ]);\n\n      let centerPath = this.getPath([\n        { x: leftLimit, y: 0.5 },\n        { x: rightLimit, y: 0.5 }\n      ]);\n\n      // sample distribution\n      let distPath = this.getArea(subData.data, 'pSpace', 'sampDist');\n\n      let result = {\n        leftPath: leftPath,\n        centerPath: centerPath,\n        rightPath: rightPath,\n        distPath: distPath,\n        left: leftLimit,\n        target: subData.target,\n        right: rightLimit\n      }\n      return result;\n    });\n    this.mainGroup = this.groups.pop();\n\n    // reset dragging\n    this.targetTranslateOffset = this.targetOffset = 0;\n    this.targetWasDragging = this.targetDragging;\n    this.targetDragging = false;\n    this.barTranslateOffset = this.barOffset = 0;\n    this.barWasDragging = this.barDragging;\n    this.barDragging = false;\n\n    this.needDraw = true;\n  }\n\n  private draw(): void {\n    if (!this.needDraw) {\n      return;\n    }\n\n    let t = d3.select(this.plotElement.nativeElement).transition();\n\n    // axes (drawn by d3)\n    let xAxis = d3.axisBottom(this.xScale).ticks(6);\n    t.select(`#${this.name}-bottom-axis`).\n      call(xAxis).\n      attr(\"font-size\", 15 * this.plotOptions.axisFontSize).\n      attr(\"stroke-width\", this.plotOptions.axisLineWidth * 1.5);\n\n    // alternate groups\n    this.groups.forEach((group, index) => {\n      let prefix = `#${this.name}-group-${index}`;\n      t.select(`${prefix}-dist`).attr('d', group.distPath);\n      t.select(`${prefix}-center`).attr('d', group.centerPath);\n      t.select(`${prefix}-left`).attr('d', group.leftPath);\n      t.select(`${prefix}-right`).attr('d', group.rightPath);\n      t.select(`${prefix}-target`).\n        attr('cx', this.xScale(group.target)).\n        attr('cy', this.yScale(0.5));\n    });\n\n    // main group\n    if (this.targetWasDragging || this.barWasDragging) {\n      // don't use animations if user was dragging things\n      t = d3.select(this.plotElement.nativeElement);\n    }\n    let prefix = `#${this.name}-main`;\n    t.select(`${prefix}-dist`).attr('d', this.mainGroup.distPath);\n    t.select(`${prefix}-center`).attr('d', this.mainGroup.centerPath);\n    t.select(`${prefix}-left`).attr('d', this.mainGroup.leftPath);\n    t.select(`${prefix}-right`).attr('d', this.mainGroup.rightPath);\n    t.select(`${prefix}-target`).\n      attr('cx', this.xScale(this.mainGroup.target)).\n      attr('cy', this.yScale(0.5));\n\n    // make target point draggable\n    let targetElt = this.targetElement.nativeElement;\n    let target = d3.select(targetElt);\n    let targetDrag = d3.drag().\n      container(targetElt.parentNode.parentNode).\n      on(\"start\", this.dragTargetStart.bind(this)).\n      on(\"drag\", this.dragTarget.bind(this)).\n      on(\"end\", this.dragTargetEnd.bind(this));\n    target.call(targetDrag);\n\n    // make left bar draggable\n    let leftBarElt = this.leftBarElement.nativeElement;\n    let leftBar = d3.select(leftBarElt);\n    let leftBarDrag = d3.drag().\n      container(leftBarElt.parentNode.parentNode).\n      on(\"start\", this.dragBarStart.bind(this, CIBar.Left)).\n      on(\"drag\", this.dragBar.bind(this, CIBar.Left)).\n      on(\"end\", this.dragBarEnd.bind(this, CIBar.Left));\n    leftBar.call(leftBarDrag);\n\n    // make right bar draggable\n    let rightBarElt = this.rightBarElement.nativeElement;\n    let rightBar = d3.select(rightBarElt);\n    let rightBarDrag = d3.drag().\n      container(rightBarElt.parentNode.parentNode).\n      on(\"start\", this.dragBarStart.bind(this, CIBar.Right)).\n      on(\"drag\", this.dragBar.bind(this, CIBar.Right)).\n      on(\"end\", this.dragBarEnd.bind(this, CIBar.Right));\n    rightBar.call(rightBarDrag);\n\n    this.needDraw = false;\n  }\n\n  ciWidth(): number {\n    return Math.abs((this.mainGroup.right - this.barOffset) - (this.mainGroup.left + this.barOffset));\n  }\n\n  private getArea(points: any[], xName: string, yName: string): string {\n    let area = d3.area().\n      x((d, i) => this.xScale(d[xName])).\n      y0(this.yScaleSD(0)).\n      y1((d, i) => this.yScaleSD(d[yName]));\n\n    return area(points);\n  }\n\n  private dragTargetStart(): void {\n    if (this.disableDragTarget) return;\n\n    this.targetDragging = true;\n  }\n\n  private dragTarget(event: any): void {\n    if (this.disableDragTarget) return;\n\n    let mouseX = d3.event.x - this.margin;\n    let x = this.xScale.invert(mouseX);\n    if (x >= 0 && x < 1) {\n      x = 1;\n      mouseX = this.xScale(1);\n    } else if (x < 0 && x > -1) {\n      x = -1;\n      mouseX = this.xScale(-1);\n    }\n\n    let targetX = this.xScale(this.mainGroup.target);\n    this.targetTranslateOffset = mouseX - targetX;\n\n    this.targetOffset = x - this.mainGroup.target;\n  }\n\n  private dragTargetEnd(): void {\n    if (this.disableDragTarget) return;\n\n    if (this.modelSet) {\n      let modelChanges = {\n        delta: this.mainGroup.target + this.targetOffset\n      };\n      this.modelSet.getModel(0).update(modelChanges);\n    }\n    this.showTargetInfo = false;\n  }\n\n  private dragBarStart(which: CIBar): void {\n    if (this.disableDragCI) return;\n\n    this.barDragging = true;\n  }\n\n  private dragBar(which: CIBar, event: any): void {\n    if (this.disableDragCI) return;\n\n    let mouseX = d3.event.x - this.margin;\n    let x = this.xScale.invert(mouseX);\n\n    switch (which) {\n      case CIBar.Left:\n        let leftBarX = this.xScale(this.mainGroup.left);\n        this.barTranslateOffset = mouseX - leftBarX;\n        this.barOffset = x - this.mainGroup.left;\n        break;\n\n      case CIBar.Right:\n        let rightBarX = this.xScale(this.mainGroup.right);\n        this.barTranslateOffset = rightBarX - mouseX;\n        this.barOffset = this.mainGroup.right - x;\n        break;\n    }\n\n    let centerPath = this.getPath([\n      { x: this.mainGroup.left + this.barOffset, y: 0.5 },\n      { x: this.mainGroup.right - this.barOffset, y: 0.5 }\n    ]);\n    d3.select(`#${this.name}-main-center`).attr('d', centerPath);\n  }\n\n  private dragBarEnd(which: CIBar): void {\n    if (this.disableDragCI) return;\n\n    if (this.modelSet) {\n      let modelChanges = {\n        ci: this.ciWidth(),\n        ciMode: true\n      };\n      this.modelSet.getModel(0).update(modelChanges);\n    }\n    this.showLeftBarInfo = false;\n    this.showRightBarInfo = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/bottom-plot/bottom-plot.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ceil'\n})\nexport class CeilPipe implements PipeTransform {\n\n  transform(value: number, args?: any): number {\n    return Math.ceil(value);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/ceil.pipe.ts","import { EventEmitter } from '@angular/core';\n\nexport abstract class ChangeEmitter {\n  protected changes: any = {};\n  changeHistory: any[] = [];\n  prevChanges = {};\n  protected noEmit = false;\n  onChange = new EventEmitter();\n\n  protected emit(attribs: any = {}): void {\n    if (!this.noEmit && this.changes && Object.keys(this.changes).length > 0) {\n      let event = Object.assign({}, attribs);\n      event.changes = Object.assign({}, this.changes);\n\n      this.prevChanges = Object.assign({}, this.changes);\n      this.changeHistory.push(this.changes);\n      this.changes = {};\n      this.onChange.emit(event);\n    }\n  }\n}\n\nexport function Changeable(target: Object, name: string) {\n  Object.defineProperty(target, name, {\n    get: function() {\n      return this[`_${name}`];\n    },\n    set: function(value) {\n      if (value != this[`_${name}`]) {\n        this[`_${name}`] = value;\n        this.changes[name] = value;\n        this.emit();\n      }\n    },\n    enumerable: true\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/changeable.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dialog {\\n  display: block;\\n  position: absolute;\\n  z-index: 100;\\n  background-color: white;\\n  border: 1px solid #888;\\n  border-radius: 10px;\\n  box-shadow: 5px 5px 25px #888;\\n  top: 20px;\\n  left: 20px;\\n  width: 25vw;\\n  min-width: 300px;\\n}\\n\\n.dialog .header {\\n  font-size: larger;\\n  font-weight: bold;\\n  background-color: #e5e5e5;\\n  border-bottom: 1px solid #ccc;\\n  padding: 10px;\\n  border-radius: 10px 10px 0 0;\\n  cursor: move;\\n}\\n\\n.dialog .close {\\n  float: right;\\n  margin: 5px;\\n}\\n\\n.dialog .content {\\n  overflow: auto;\\n  height: 50vh;\\n  padding: 5px;\\n  margin: 0 5px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/draggable-dialog/draggable-dialog.component.css\n// module id = ../../../../../src/app/t-test/draggable-dialog/draggable-dialog.component.css\n// module chunks = main","module.exports = \"<div #main *ngIf=\\\"enabled\\\" class=\\\"dialog\\\"\\n  [style.top]=\\\"yOffset ? yOffset + 'px' : startYOffset\\\"\\n  [style.left]=\\\"xOffset ? xOffset + 'px' : startXOffset\\\">\\n  <div class=\\\"header\\\"\\n    (mousedown)=\\\"mousedown($event)\\\" (mouseup)=\\\"mouseup($event)\\\"\\n    (mousemove)=\\\"mousemove($event)\\\">\\n    {{title}}\\n    <button type=\\\"button\\\" class=\\\"close fa fa-times-circle\\\" (click)=\\\"close()\\\"></button>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/draggable-dialog/draggable-dialog.component.html\n// module id = ../../../../../src/app/t-test/draggable-dialog/draggable-dialog.component.html\n// module chunks = main","import { Component, Directive, Input, Output, EventEmitter, ViewChild, TemplateRef, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 't-test-draggable-dialog',\n  templateUrl: './draggable-dialog.component.html',\n  styleUrls: ['./draggable-dialog.component.css']\n})\nexport class DraggableDialogComponent implements OnInit {\n  @Input() title: string;\n  @Input() content: any;\n  @Input('start-enabled') startEnabled = false;\n  @Input('start-x-offset') startXOffset = \"20px\";\n  @Input('start-y-offset') startYOffset = \"20px\";\n  @Output('drag-start') onDragStart = new EventEmitter();\n  @Output('drag-end') onDragEnd = new EventEmitter();\n  private enabled = false;\n  private dragging = false;\n  private xOffset: number;\n  private yOffset: number;\n  private lastX: number;\n  private lastY: number;\n\n  @ViewChild('main') mainElement: ElementRef;\n\n  ngOnInit(): void {\n    this.enabled = this.startEnabled;\n  }\n\n  open(): void {\n    this.enabled = true;\n  }\n\n  toggle(): void {\n    this.enabled = !this.enabled;\n  }\n\n  close(): void {\n    this.enabled = false;\n  }\n\n  isOpen(): boolean {\n    return this.enabled;\n  }\n\n  mousedown(event: any): void {\n    this.startDragging();\n\n    let box = this.mainElement.nativeElement.getBoundingClientRect();\n    this.xOffset = box.left + window.pageXOffset;\n    this.yOffset = box.top + window.pageYOffset;\n    this.lastX = event.pageX;\n    this.lastY = event.pageY;\n  }\n\n  mouseup(event: any): void {\n    this.stopDragging();\n  }\n\n  mousemove(event: any): void {\n    if (this.dragging) {\n      if ((event.buttons & 1) == 0) {\n        this.stopDragging();\n        return;\n      }\n      this.xOffset += event.pageX - this.lastX;\n      this.yOffset += event.pageY - this.lastY;\n      this.lastX = event.pageX;\n      this.lastY = event.pageY;\n    }\n  }\n\n  startDragging(): void {\n    this.dragging = true;\n    this.onDragStart.emit();\n  }\n\n  stopDragging(): void {\n    this.dragging = false;\n    this.onDragEnd.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/draggable-dialog/draggable-dialog.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n\\n.modal-body {\\n}\\n\\n.modal-body /deep/ a.nav-link {\\n  border-color: #bbb #bbb #888;\\n  background-color: #eee;\\n}\\n\\n.modal-body /deep/ a.nav-link:hover {\\n  border-color: #888;\\n  background-color: #f5f5f5;\\n  color: #0275d8;\\n}\\n\\n.modal-body /deep/ a.nav-link.active {\\n  border-color: #888 #888 #fff;\\n  background-color: #fff;\\n}\\n\\n.modal-body /deep/ a.nav-link.active:hover {\\n  color: #464a4c;\\n}\\n\\n.modal-body /deep/ ngb-tabset {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n\\n.modal-body /deep/ ul.nav-tabs {\\n  /*display: flex;*/\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 auto;\\n          flex: 0 0 auto;\\n  border-bottom: 1px solid #888;\\n}\\n\\n.modal-body /deep/ .tab-content {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n\\n.modal-body /deep/ .tab-pane {\\n  border: 1px solid #888;\\n  border-top: 0;\\n  overflow: auto;\\n  max-height: 73vh;\\n}\\n\\n.modal-body /deep/ .tab-pane.active {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  background: white;\\n}\\n\\n.modal-body .left {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  width: 20%;\\n  border-right: 1px solid #888;\\n  padding: 10px;\\n}\\n\\n.modal-body .right {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  margin-left: 10px;\\n  overflow: auto;\\n  padding: 10px;\\n}\\n\\n.modal-footer {\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/export-plots/export-plots.component.css\n// module id = ../../../../../src/app/t-test/export-plots/export-plots.component.css\n// module chunks = main","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">Export graphs</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"cancel()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body grow-vert h-100\\\">\\n  <div class=\\\"d-flex flex-column h-100\\\">\\n    <ngb-tabset [destroyOnHide]=\\\"false\\\">\\n      <ngb-tab [title]=\\\"topLeftTitle\\\">\\n        <ng-template ngbTabContent>\\n          <div class=\\\"left\\\">\\n            <div class=\\\"form-check\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                  [(ngModel)]=\\\"includeTopLeft\\\">\\n                  Export this graph\\n              </label>\\n            </div>\\n            <ng-template [ngIf]=\\\"includeTopLeft\\\">\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topLeftDropLines\\\">\\n                    Show drop lines\\n                </label>\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topLeftTarget\\\">\\n                    Show target\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Width\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topLeftWidth\\\">\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Height\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topLeftHeight\\\">\\n                </label>\\n              </div>\\n            </ng-template>\\n          </div>\\n          <div class=\\\"right\\\">\\n            <t-test-plot #topLeftPlot name=\\\"top-left-export\\\"\\n              [model-set]=\\\"modelSet\\\" [hover-disabled]=\\\"true\\\"\\n              [disable-drag]=\\\"true\\\"\\n              [hide-drop-lines]=\\\"!topLeftDropLines\\\"\\n              [hide-target]=\\\"!topLeftTarget\\\"\\n              [fixed-width]=\\\"topLeftWidth\\\" [fixed-height]=\\\"topLeftHeight\\\">\\n            </t-test-plot>\\n          </div>\\n          <t-test-serialize-plot #topLeftSerializer\\n            [plot]=\\\"topLeftPlot\\\"\\n            [width]=\\\"topLeftWidth\\\" [height]=\\\"topLeftHeight\\\">\\n          </t-test-serialize-plot>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab [title]=\\\"topRightTitle\\\">\\n        <ng-template ngbTabContent>\\n          <div class=\\\"left\\\">\\n            <div class=\\\"form-check\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                  [(ngModel)]=\\\"includeTopRight\\\">\\n                  Export this graph\\n              </label>\\n            </div>\\n            <ng-template [ngIf]=\\\"includeTopRight\\\">\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topRightDropLines\\\">\\n                    Show drop lines\\n                </label>\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topRightTarget\\\">\\n                    Show target\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Width\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topRightWidth\\\">\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Height\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topRightHeight\\\">\\n                </label>\\n              </div>\\n            </ng-template>\\n          </div>\\n          <div class=\\\"right\\\">\\n            <t-test-plot #topRightPlot name=\\\"top-right-export\\\"\\n              [model-set]=\\\"modelSet\\\" [hover-disabled]=\\\"true\\\"\\n              [disable-drag]=\\\"true\\\"\\n              [hide-drop-lines]=\\\"!topRightDropLines\\\"\\n              [hide-target]=\\\"!topRightTarget\\\"\\n              [fixed-width]=\\\"topRightWidth\\\" [fixed-height]=\\\"topRightHeight\\\">\\n            </t-test-plot>\\n          </div>\\n          <t-test-serialize-plot #topRightSerializer\\n            [plot]=\\\"topRightPlot\\\"\\n            [width]=\\\"topRightWidth\\\" [height]=\\\"topRightHeight\\\">\\n          </t-test-serialize-plot>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab [title]=\\\"bottomTitle\\\">\\n        <ng-template ngbTabContent>\\n          <div class=\\\"left\\\">\\n            <div class=\\\"form-check\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                  [(ngModel)]=\\\"includeBottom\\\">\\n                  Export this graph\\n              </label>\\n            </div>\\n            <ng-template [ngIf]=\\\"includeBottom\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Width\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"bottomWidth\\\">\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Height\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"bottomHeight\\\">\\n                </label>\\n              </div>\\n            </ng-template>\\n          </div>\\n          <div class=\\\"right\\\">\\n            <t-test-bottom-plot #bottomPlot name=\\\"bottom-export\\\"\\n              [model-set]=\\\"modelSet\\\"\\n              [disable-drag-target]=\\\"true\\\" [disable-drag-ci]=\\\"true\\\"\\n              [fixed-width]=\\\"bottomWidth\\\" [fixed-height]=\\\"bottomHeight\\\">\\n            </t-test-bottom-plot>\\n          </div>\\n          <t-test-serialize-plot #bottomSerializer\\n            [plot]=\\\"bottomPlot\\\"\\n            [width]=\\\"bottomWidth\\\" [height]=\\\"bottomHeight\\\">\\n          </t-test-serialize-plot>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <div class=\\\"d-flex-inline flex-row\\\">\\n    <div class=\\\"form-inline\\\">\\n      <label for=\\\"export-image-format\\\" class=\\\"mr-sm-2\\\">Image format:</label>\\n      <select id=\\\"export-image-format\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"imageFormat\\\">\\n        <option value=\\\"svg\\\">SVG</option>\\n        <option value=\\\"png\\\">PNG</option>\\n      </select>\\n    </div>\\n  </div>\\n  <p>\\n    The graphs you have chosen will be packaged in a ZIP file.\\n    <a #downloadLink style=\\\"display: none\\\"></a>\\n  </p>\\n  <div class=\\\"d-flex flex-row align-items-center\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary m-1\\\" (click)=\\\"save()\\\"\\n      [disabled]=\\\"!includeTopLeft && !includeTopRight && !includeBottom\\\">\\n      <i class=\\\"fa fa-floppy-o\\\"></i> Save\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary m-1\\\" (click)=\\\"cancel()\\\">\\n      <i class=\\\"fa fa-circle-x\\\"></i> Close\\n    </button>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/export-plots/export-plots.component.html\n// module id = ../../../../../src/app/t-test/export-plots/export-plots.component.html\n// module chunks = main","import { Component, Input, ViewChild, ElementRef, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport * as JSZip from 'jszip';\n\nimport { TTestSet } from '../t-test';\nimport { PlotComponent } from '../plot/plot.component';\nimport { BottomPlotComponent } from '../bottom-plot/bottom-plot.component';\nimport { SerializePlotComponent } from '../serialize-plot.component';\n\n@Component({\n  selector: 't-test-export-plots',\n  templateUrl: './export-plots.component.html',\n  styleUrls: ['./export-plots.component.css']\n})\nexport class ExportPlotsComponent implements OnInit {\n  @Input('model-set') modelSet: TTestSet;\n\n  includeTopLeft = true;\n  topLeftTitle: string;\n  topLeftWidth = 640;\n  topLeftHeight = 480;\n  topLeftDropLines = true;\n  topLeftTarget = true;\n\n  includeTopRight = true;\n  topRightTitle: string;\n  topRightWidth = 640;\n  topRightHeight = 480;\n  topRightDropLines = true;\n  topRightTarget = true;\n\n  includeBottom = true;\n  bottomTitle = \"Precision vs. Effect Size\";\n  bottomWidth = 640;\n  bottomHeight = 200;\n\n  imageFormat = \"svg\";\n\n  @ViewChild('topLeftPlot') topLeftPlot: PlotComponent;\n  @ViewChild('topRightPlot') topRightPlot: PlotComponent;\n  @ViewChild('bottomPlot') bottomPlot: BottomPlotComponent;\n  @ViewChild('topLeftSerializer') topLeftSerializer: SerializePlotComponent;\n  @ViewChild('topRightSerializer') topRightSerializer: SerializePlotComponent;\n  @ViewChild('bottomSerializer') bottomSerializer: SerializePlotComponent;\n  @ViewChild('downloadLink') downloadLink: ElementRef;\n\n  constructor(private activeModal: NgbActiveModal) {}\n\n  ngOnInit(): void {\n    switch (this.modelSet.getModel(0).output) {\n      case \"n\":\n        this.topLeftTitle = \"Sample Size vs. Power\";\n        this.topRightTitle = \"Sample Size vs. Detectable Alternative\";\n        break;\n      case \"power\":\n        this.topLeftTitle = \"Power vs. Sample Size\";\n        this.topRightTitle = \"Power vs. Detectable Alternative\";\n        break;\n      case \"delta\":\n        this.topLeftTitle = \"Detectable Alternative vs. Sample Size\";\n        this.topRightTitle = \"Detectable Alternative vs. Power\";\n        break;\n    }\n  }\n\n  save(): void {\n    let serializers = [];\n    if (this.includeTopLeft)  serializers.push(this.topLeftSerializer);\n    if (this.includeTopRight) serializers.push(this.topRightSerializer);\n    if (this.includeBottom)   serializers.push(this.bottomSerializer);\n\n    let date = new Date();\n    let month = date.getMonth() + 1;\n    let monthStr = month < 10 ? `0${month}` : month.toString();\n    let day = date.getDate();\n    let dayStr = day < 10 ? `0${day}` : day.toString();\n    let dateStr = `${date.getFullYear()}-${monthStr}-${dayStr}`;\n\n    let zip = new JSZip();\n    let dir = zip.folder(`ps-plots-${dateStr}`);\n    let promise = Promise.resolve();\n    serializers.forEach((serializer, i) => {\n      promise = promise.then(() => {\n        let result;\n        if (this.imageFormat == 'svg') {\n          let xml = serializer.serializeAsXML();\n          var blob = new Blob([xml], { type: \"image/svg+xml\" });\n          result = Promise.resolve(blob);\n        } else {\n          result = serializer.serialize();\n        }\n        return result.then(\n          blob => {\n            dir.file(`${serializer.plotTitle()}.${this.imageFormat}`, blob);\n          },\n          err => console.error(err)\n        );\n      });\n    });\n\n    promise.then(() => {\n      zip.generateAsync({ type: 'blob' }).then(content => {\n        let url = URL.createObjectURL(content);\n        let elt = this.downloadLink.nativeElement;\n        elt.href = url;\n        elt.download = `ps-plots-${dateStr}.zip`;\n        elt.click();\n        URL.revokeObjectURL(url);\n        this.activeModal.close();\n      });\n    });\n  }\n\n  cancel(): void {\n    this.activeModal.close();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/export-plots/export-plots.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".overview {\\n  text-align: right;\\n}\\n\\n.btn-secondary {\\n  padding: 0.3rem 0.3rem;\\n}\\n\\n.add-remove {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important;\\n  -webkit-box-align: end !important;\\n      -ms-flex-align: end !important;\\n          align-items: flex-end !important;\\n  padding: 0 0.1rem 0.75rem 0.1rem;\\n  margin-left: 10px;\\n}\\n\\n.add-remove-center {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important;\\n  -webkit-box-align: center !important;\\n      -ms-flex-align: center !important;\\n          align-items: center !important;\\n  padding: 0 0 0 0.1rem;\\n  margin: 2rem 0 0 1rem;\\n  margin-left: 10px;\\n  border: 1px solid #333;\\n  border-left: 0;\\n}\\n\\n.output {\\n  -webkit-box-ordinal-group: 2;\\n      -ms-flex-order: 1;\\n          order: 1;\\n}\\n\\n.output .range-slider {\\n  background-color: #d8ecf3;\\n  border-radius: 0.5em;\\n}\\n\\n.order-2 {\\n  -webkit-box-ordinal-group: 3;\\n      -ms-flex-order: 2;\\n          order: 2;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/form/form.component.css\n// module id = ../../../../../src/app/t-test/form/form.component.css\n// module chunks = main","module.exports = \"<div class=\\\"grow-vert\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>\\n      Output\\n      <select class=\\\"form-control\\\" name=\\\"output\\\"\\n              [(ngModel)]=\\\"model.output\\\">\\n        <option value=\\\"n\\\">Sample size by Power</option>\\n        <option value=\\\"nByCI\\\">Sample size by 95% CI</option>\\n        <option value=\\\"power\\\">Power</option>\\n        <option value=\\\"delta\\\">Detectable alternative</option>\\n      </select>\\n    </label>\\n  </div>\\n\\n  <div class=\\\"grow-horiz\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"alpha\\\" label=\\\"Type I Error (&alpha;)\\\"\\n        [min]=\\\"min.alpha\\\" [max]=\\\"max.alpha\\\"\\n        [hard-min]=\\\"min.alpha\\\" [hard-max]=\\\"max.alpha\\\"\\n        [ngModel]=\\\"model.alpha | round\\\" (ngModelChange)=\\\"model.alpha = $event\\\">\\n        <ng-template rsHelp>\\n          The Type I error probability for a two sided test. This is the\\n          probability that we will falsely reject the null hypothesis.\\n        </ng-template>\\n      </t-test-range-slider>\\n    </div>\\n    <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(0)\\\">\\n      <i *ngIf=\\\"canAdd('alpha')\\\" class=\\\"fa fa-plus-circle\\\" (click)=\\\"addInput('alpha')\\\"\\n        ngbPopover=\\\"Click to add line to plot for alternate value of &quot;alpha&quot;\\\"\\n        triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n    </div>\\n  </div>\\n  <ng-template [ngIf]=\\\"extraName == 'alpha'\\\">\\n    <div class=\\\"grow-horiz\\\" *ngFor=\\\"let ex of extraModels; let i = index; trackBy: trackByExtra\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"alpha-{{i+2}}\\\" label=\\\"Type I Error (&alpha;) #{{i+2}}\\\"\\n          [min]=\\\"min.alpha\\\" [max]=\\\"max.alpha\\\"\\n          [hard-min]=\\\"min.alpha\\\" [hard-max]=\\\"max.alpha\\\"\\n          [ngModel]=\\\"ex.alpha | round\\\" (ngModelChange)=\\\"ex.alpha = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(i+1)\\\">\\n        <i class=\\\"fa fa-minus-circle\\\" (click)=\\\"removeInput(i+1)\\\"\\n          ngbPopover=\\\"Remove line from plot for &quot;alpha&quot;\\\"\\n          triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n  <div class=\\\"grow-horiz\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"sigma\\\" label=\\\"Std. deviation (&sigma;)\\\"\\n        [min]=\\\"min.sigma\\\" [max]=\\\"max.sigma\\\" step=\\\"0.1\\\"\\n        [hard-min]=\\\"1\\\"\\n        [ngModel]=\\\"model.sigma | round:1\\\" (ngModelChange)=\\\"model.sigma = $event\\\">\\n        <ng-template rsHelp>\\n          For independent tests σ is the within group standard deviation. For\\n          paired designs it is the standard deviation of difference in the\\n          response of matched pairs.\\n        </ng-template>\\n      </t-test-range-slider>\\n    </div>\\n    <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(0)\\\">\\n      <i *ngIf=\\\"canAdd('sigma')\\\" class=\\\"fa fa-plus-circle\\\" (click)=\\\"addInput('sigma')\\\"\\n        ngbPopover=\\\"Click to add line to plot for alternate value of &quot;sigma&quot;\\\"\\n        triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n    </div>\\n  </div>\\n  <ng-template [ngIf]=\\\"extraName == 'sigma'\\\">\\n    <div class=\\\"grow-horiz\\\" *ngFor=\\\"let ex of extraModels; let i = index; trackBy: trackByExtra\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"sigma-{{i+2}}\\\" label=\\\"Std. deviation #{{i+2}}\\\"\\n          [min]=\\\"min.sigma\\\" [max]=\\\"max.sigma\\\" step=\\\"0.1\\\"\\n          [hard-min]=\\\"1\\\"\\n          [ngModel]=\\\"ex.sigma | round:1\\\" (ngModelChange)=\\\"ex.sigma = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(i+1)\\\">\\n        <i class=\\\"fa fa-minus-circle\\\" (click)=\\\"removeInput(i+1)\\\"\\n          ngbPopover=\\\"Remove line from plot for &quot;sigma&quot;\\\"\\n          triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template [ngIf]=\\\"!isOutput('nByCI')\\\" [ngIfElse]=\\\"nByCI\\\">\\n    <div class=\\\"grow-horiz\\\" [class.output]=\\\"isOutput('delta')\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"delta\\\" label=\\\"Difference in population means (&delta;)\\\"\\n          [min]=\\\"min.delta\\\" [max]=\\\"max.delta\\\" step=\\\"0.1\\\"\\n          [is-output]=\\\"model.output == 'delta'\\\" [help-tpl]=\\\"deltaHelp\\\"\\n          [ngModel]=\\\"model.delta | round:1\\\" (ngModelChange)=\\\"model.delta = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(0)\\\">\\n        <i *ngIf=\\\"canAdd('delta')\\\" class=\\\"fa fa-plus-circle\\\" (click)=\\\"addInput('delta')\\\"\\n          ngbPopover=\\\"Click to add line to plot for alternate value of &quot;delta&quot;\\\"\\n          triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </div>\\n    </div>\\n    <ng-template [ngIf]=\\\"extraName == 'delta'\\\">\\n      <div class=\\\"grow-horiz\\\" *ngFor=\\\"let ex of extraModels; let i = index; trackBy: trackByExtra\\\">\\n        <div class=\\\"grow-vert range-slider\\\">\\n          <t-test-range-slider name=\\\"delta-{{i+2}}\\\" label=\\\"Difference in population means (&delta;) #{{i+2}}\\\"\\n            [min]=\\\"min.delta\\\" [max]=\\\"max.delta\\\" step=\\\"0.1\\\"\\n            [ngModel]=\\\"ex.delta | round:1\\\" (ngModelChange)=\\\"ex.delta = $event\\\">\\n          </t-test-range-slider>\\n        </div>\\n        <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(i+1)\\\">\\n          <i class=\\\"fa fa-minus-circle\\\" (click)=\\\"removeInput(i+1)\\\"\\n            ngbPopover=\\\"Remove line from plot for &quot;delta&quot;\\\"\\n            triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </div>\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"grow-horiz\\\" [class.output]=\\\"isOutput('power')\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"power\\\" label=\\\"Power\\\"\\n          [min]=\\\"min.power\\\" [max]=\\\"max.power\\\"\\n          [hard-min]=\\\"min.power\\\" [hard-max]=\\\"max.power\\\"\\n          [is-output]=\\\"model.output == 'power'\\\" [help-tpl]=\\\"powerHelp\\\"\\n          [ngModel]=\\\"model.power | round\\\" (ngModelChange)=\\\"model.power = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(0)\\\">\\n        <i *ngIf=\\\"canAdd('power')\\\" class=\\\"fa fa-plus-circle\\\" (click)=\\\"addInput('power')\\\"\\n          ngbPopover=\\\"Click to add line to plot for alternate value of &quot;power&quot;\\\"\\n          triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </div>\\n    </div>\\n    <ng-template [ngIf]=\\\"extraName == 'power'\\\">\\n      <div class=\\\"grow-horiz\\\" *ngFor=\\\"let ex of extraModels; let i = index; trackBy: trackByExtra\\\">\\n        <div class=\\\"grow-vert range-slider\\\">\\n          <t-test-range-slider name=\\\"power-{{i+2}}\\\" label=\\\"Power #{{i+2}}\\\"\\n            [min]=\\\"min.power\\\" [max]=\\\"max.power\\\"\\n            [hard-min]=\\\"min.power\\\" [hard-max]=\\\"max.power\\\"\\n            [ngModel]=\\\"ex.power | round\\\" (ngModelChange)=\\\"ex.power = $event\\\">\\n          </t-test-range-slider>\\n        </div>\\n        <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(i+1)\\\">\\n          <i class=\\\"fa fa-minus-circle\\\" (click)=\\\"removeInput(i+1)\\\"\\n            ngbPopover=\\\"Remove line from plot for &quot;power&quot;\\\"\\n            triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </div>\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"grow-horiz\\\" [class.output]=\\\"isOutput('n')\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"n\\\" label=\\\"Sample size\\\"\\n          [min]=\\\"min.n\\\" [max]=\\\"max.n\\\" step=\\\"1\\\"\\n          [hard-min]=\\\"1\\\"\\n          [is-output]=\\\"model.output == 'n'\\\" [help-tpl]=\\\"nHelp\\\"\\n          [ngModel]=\\\"model.n | ceil\\\" (ngModelChange)=\\\"model.n = $event\\\">\\n        </t-test-range-slider>\\n        <t-test-range-slider name=\\\"ci\\\" label=\\\"95% confidence interval width\\\"\\n          [min]=\\\"min.ci\\\" [max]=\\\"max.ci\\\" step=\\\"0.1\\\"\\n          [hard-min]=\\\"1\\\"\\n          [is-output]=\\\"model.output == 'n'\\\" [help-tpl]=\\\"ciHelp\\\"\\n          [ngModel]=\\\"model.ci | round:1\\\" (ngModelChange)=\\\"model.ci = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove-center fa-fw\\\" [style.color]=\\\"getColor(0)\\\">\\n        <i *ngIf=\\\"canAdd('n')\\\" class=\\\"fa fa-plus-circle\\\" (click)=\\\"addInput('n')\\\"\\n          ngbPopover=\\\"Click to add line to plot for alternate value of &quot;n&quot; or 95% confidence interval width\\\"\\n          triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </div>\\n    </div>\\n    <ng-template [ngIf]=\\\"extraName == 'n'\\\">\\n      <div class=\\\"grow-horiz\\\" *ngFor=\\\"let ex of extraModels; let i = index; trackBy: trackByExtra\\\">\\n        <div class=\\\"grow-vert range-slider\\\">\\n          <t-test-range-slider name=\\\"n-{{i+2}}\\\" label=\\\"Sample size #{{i+2}}\\\"\\n            [min]=\\\"min.n\\\" [max]=\\\"max.n\\\" step=\\\"1\\\"\\n            [hard-min]=\\\"1\\\"\\n            [ngModel]=\\\"ex.n | ceil\\\" (ngModelChange)=\\\"ex.n = $event\\\">\\n          </t-test-range-slider>\\n          <t-test-range-slider name=\\\"ci-{{i+2}}\\\" label=\\\"95% confidence interval width #{{i+2}}\\\"\\n            [min]=\\\"min.ci\\\" [max]=\\\"max.ci\\\" step=\\\"0.1\\\"\\n            [hard-min]=\\\"1\\\"\\n            [ngModel]=\\\"ex.ci | round:1\\\" (ngModelChange)=\\\"ex.ci = $event\\\">\\n          </t-test-range-slider>\\n        </div>\\n        <div class=\\\"add-remove-center fa-fw\\\" [style.color]=\\\"getColor(i+1)\\\">\\n          <i class=\\\"fa fa-minus-circle\\\" (click)=\\\"removeInput(i+1)\\\"\\n            ngbPopover=\\\"Remove line from plot for &quot;n&quot; and 95% confidence interval width\\\"\\n            triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </ng-template>\\n  <ng-template #nByCI>\\n    <div class=\\\"grow-horiz\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"ci\\\" label=\\\"95% confidence interval width\\\"\\n          [min]=\\\"min.ci\\\" [max]=\\\"max.ci\\\" step=\\\"0.1\\\" [help-tpl]=\\\"ciHelp\\\"\\n          [ngModel]=\\\"model.ci | round:1\\\" (ngModelChange)=\\\"model.ci = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(0)\\\">\\n        <i *ngIf=\\\"canAdd('ci')\\\" class=\\\"fa fa-plus-circle\\\" (click)=\\\"addInput('ci')\\\"\\n          ngbPopover=\\\"Click to add line to plot for alternate value of &quot;ci&quot;\\\"\\n          triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </div>\\n    </div>\\n    <ng-template [ngIf]=\\\"extraName == 'ci'\\\">\\n      <div class=\\\"grow-horiz\\\" *ngFor=\\\"let ex of extraModels; let i = index; trackBy: trackByExtra\\\">\\n        <div class=\\\"grow-vert range-slider\\\">\\n          <t-test-range-slider name=\\\"ci-{{i+2}}\\\" label=\\\"95% confidence interval width #{{i+2}}\\\"\\n            [min]=\\\"min.ci\\\" [max]=\\\"max.ci\\\" step=\\\"0.1\\\"\\n            [hard-min]=\\\"1\\\"\\n            [ngModel]=\\\"ex.ci | round:1\\\" (ngModelChange)=\\\"ex.ci = $event\\\">\\n          </t-test-range-slider>\\n        </div>\\n        <div class=\\\"add-remove fa-fw\\\" [style.color]=\\\"getColor(i+1)\\\">\\n          <i class=\\\"fa fa-minus-circle\\\" (click)=\\\"removeInput(i+1)\\\"\\n            ngbPopover=\\\"Remove line from plot for &quot;ci&quot;\\\"\\n            triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </div>\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"grow-horiz output\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"n\\\" label=\\\"Sample size\\\"\\n          [min]=\\\"min.n\\\" [max]=\\\"max.n\\\" step=\\\"1\\\"\\n          [hard-min]=\\\"1\\\"\\n          [is-output]=\\\"true\\\" [help-tpl]=\\\"nHelp\\\"\\n          [ngModel]=\\\"model.n | ceil\\\" (ngModelChange)=\\\"model.n = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove fa-fw\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"grow-horiz order-2\\\">\\n      <div class=\\\"grow-vert range-slider\\\">\\n        <t-test-range-slider name=\\\"delta\\\" label=\\\"Difference in population means (&delta;)\\\"\\n          [min]=\\\"min.delta\\\" [max]=\\\"max.delta\\\" step=\\\"0.1\\\" [help-tpl]=\\\"deltaHelp\\\"\\n          [ngModel]=\\\"model.delta | round:1\\\" (ngModelChange)=\\\"model.delta = $event\\\">\\n        </t-test-range-slider>\\n\\n        <t-test-range-slider name=\\\"power\\\" label=\\\"Power\\\"\\n          [min]=\\\"min.power\\\" [max]=\\\"max.power\\\"\\n          [hard-min]=\\\"min.power\\\" [hard-max]=\\\"max.power\\\"\\n          [is-output]=\\\"model.output == 'power'\\\" [help-tpl]=\\\"powerHelp\\\"\\n          [ngModel]=\\\"model.power | round\\\" (ngModelChange)=\\\"model.power = $event\\\">\\n        </t-test-range-slider>\\n      </div>\\n      <div class=\\\"add-remove-center fa-fw\\\" [style.color]=\\\"getColor(0)\\\">\\n        <i *ngIf=\\\"canAdd('n')\\\" class=\\\"fa fa-plus-circle\\\" (click)=\\\"addInput('power')\\\"\\n          ngbPopover=\\\"Click to add line to plot for alternate value of &quot;n&quot; or 95% confidence interval width\\\"\\n          triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </div>\\n    </div>\\n    <ng-template [ngIf]=\\\"extraName == 'power'\\\">\\n      <div class=\\\"grow-horiz order-2\\\" *ngFor=\\\"let ex of extraModels; let i = index; trackBy: trackByExtra\\\">\\n        <div class=\\\"grow-vert\\\">\\n          <t-test-range-slider name=\\\"delta-{{i+2}}\\\" label=\\\"Difference in population means #{{i+2}}\\\"\\n            [min]=\\\"min.delta\\\" [max]=\\\"max.delta\\\" step=\\\"0.1\\\"\\n            [ngModel]=\\\"ex.delta | round:1\\\" (ngModelChange)=\\\"ex.delta = $event\\\">\\n          </t-test-range-slider>\\n\\n          <t-test-range-slider name=\\\"power-{{i+2}}\\\" label=\\\"Power #{{i+2}}\\\"\\n            [min]=\\\"min.power\\\" [max]=\\\"max.power\\\"\\n            [hard-min]=\\\"min.power\\\" [hard-max]=\\\"max.power\\\"\\n            [ngModel]=\\\"ex.power | round\\\" (ngModelChange)=\\\"ex.power = $event\\\">\\n          </t-test-range-slider>\\n        </div>\\n        <div class=\\\"add-remove-center fa-fw\\\" [style.color]=\\\"getColor(i+1)\\\">\\n          <i class=\\\"fa fa-minus-circle\\\" (click)=\\\"removeInput(i+1)\\\"\\n            ngbPopover=\\\"Remove line from plot for &quot;delta&quot; and &quot;power&quot;\\\"\\n            triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </ng-template>\\n</div>\\n<ng-template #deltaHelp>\\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam enim nunc,\\n  rutrum at ligula id, tempor tincidunt nunc.\\n</ng-template>\\n<ng-template #powerHelp>\\n  For independent tests power is probability of correctly rejecting the\\n  null hypothesis of equal population means given n experimental\\n  patients, m control patients per experimental patient, a Type I error\\n  probability α and a true difference in population means of δ. For\\n  paired tests it is the probability of correctly rejecting the null\\n  hypothesis of equal population means given n pairs of patients, a Type\\n  I error probability α and a true difference in population means of δ.\\n</ng-template>\\n<ng-template #nHelp>\\n  For independent t-tests n is the number of experimental subjects. For\\n  pair test n is the number of pairs.\\n</ng-template>\\n<ng-template #ciHelp>\\n  Specifying the 95% confidence interval width will automatically calculate\\n  the sample size parameter.\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/form/form.component.html\n// module id = ../../../../../src/app/t-test/form/form.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport 'rxjs/add/operator/debounceTime';\n\nimport { TTest, TTestRanges, TTestSet } from '../t-test';\nimport { TTestService } from '../t-test.service';\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\n\n@Component({\n  selector: 't-test-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  @Input('model-set') modelSet: TTestSet;\n\n  model: TTest;\n  min: TTest;\n  max: TTest;\n  extraName: string;\n  extraModels: TTest[];\n\n  constructor(\n    private plotOptions: PlotOptionsService,\n    private ttestService: TTestService,\n    public palette: PaletteService\n  ) { }\n\n  ngOnInit(): void {\n    this.model = this.modelSet.getModel(0);\n    this.extraModels = this.modelSet.extraModels();\n    this.model.onChange.\n      debounceTime(100).\n      subscribe(event => {\n        this.modelChanged(0, event);\n      });\n\n    this.min = new TTest(this.model);\n    this.max = new TTest(this.model);\n\n    this.min.alpha = 0.01;\n    this.max.alpha = 0.99;\n\n    this.min.power = 0.01;\n    this.max.power = 0.99;\n\n    this.calculateSliderRange('n');\n    this.calculateSliderRange('ci');\n    this.calculateSliderRange('delta');\n    this.calculateSliderRange('sigma');\n  }\n\n  isOutput(name: string): boolean {\n    return this.model.output === name;\n  }\n\n  canAdd(name: string): boolean {\n    return this.model.output !== name &&\n      (this.extraName === undefined || this.extraName === name);\n  }\n\n  getColor(index: number): string {\n    return this.palette.getColor(index);\n  }\n\n  addInput(name: any): void {\n    if (this.extraName && this.extraName != name) {\n      throw new Error(\"extra attributes must be mutually exclusive\");\n    }\n    this.extraName = name;\n\n    let model = this.model.clone();\n    let index = this.modelSet.add(model, this.modelSet.getData(0));\n    model.onChange.\n      debounceTime(100).\n      subscribe(event => {\n        this.modelChanged(index, event);\n      });\n    this.extraModels = this.modelSet.extraModels();\n  }\n\n  removeInput(index: number): void {\n    this.modelSet.remove(index);\n    if (this.modelSet.models.length == 1) {\n      this.extraName = undefined;\n    }\n  }\n\n  trackByExtra(index: number, item: number): number {\n    return index;\n  }\n\n  private calculateSliderRange(name: string): void {\n    let value = this.model[name];\n    let range = [value * 0.5, value * 1.5].sort((a, b) => a - b);\n    this.min[name] = range[0];\n    this.max[name] = range[1];\n  }\n\n  private modelChanged(index: number, event: any): void {\n    if (event.recalculation) {\n      // Don't do anything, since this change came from a backend\n      // recalculation.\n      return;\n    }\n\n    let changes = event.changes;\n    let model = this.modelSet.getModel(index);\n    if (index == 0 && 'output' in changes) {\n      // Output was changed, which means each model needs to be updated before\n      // firing the compute event, or the plots will get confused.\n      // Additionally, extra models need to be removed if they no longer make\n      // sense.\n      let removeExtra = (\n        ((changes.output == \"n\" || changes.output == \"nByCI\") && this.extraName == \"n\") ||\n        (changes.output == \"power\" && this.extraName == \"power\") ||\n        (changes.output == \"delta\" && this.extraName == \"delta\")\n      );\n\n      let promise = this.modelSet.reduceModels(Promise.resolve(), (promise, model, index) => {\n        if (index == 0 || !removeExtra) {\n          model.update({ output: changes.output }, false);\n\n          return promise.\n            then(() => this.ttestService.update(model)).\n            then(result => {\n              this.modelSet.update(index, result.model, result.data, {}, false);\n            });\n        } else {\n          return promise.then(() => this.removeInput(1));\n        }\n      });\n      promise.then(() => this.modelSet.triggerCompute());\n    } else {\n      if (this.isOutput('nByCI')) {\n        if ('delta' in changes) {\n          // delta was changed, so turn on \"deltaMode\"\n          model.deltaMode = true;\n\n        } else if ('power' in changes) {\n          // power was changed, so turn off \"deltaMode\"\n          model.deltaMode = false;\n        }\n      } else if (!this.isOutput('n')) {\n        if ('ci' in changes) {\n          // 95% confidence interval width was changed, so turn on \"ciMode\"\n          model.ciMode = true;\n\n        } else if ('n' in changes) {\n          // Sample size was changed, so turn off \"ciMode\"\n          model.ciMode = false;\n        }\n      }\n      this.updateModelSet(index);\n    }\n  }\n\n  private updateModelSet(index: number): void {\n    let model = this.modelSet.getModel(index);\n    this.ttestService.update(model).\n      then(result => {\n        this.modelSet.update(index, result.model, result.data, { recalculation: true });\n        this.adjustMinMax(index);\n      }, error => { });\n  }\n\n  private adjustMinMax(index: number): void {\n    let model = this.modelSet.getModel(index);\n    if (model.sigma < this.min.sigma) {\n      this.min.sigma = Math.floor(model.sigma);\n    } else if (model.sigma > this.max.sigma) {\n      this.max.sigma = Math.ceil(model.sigma);\n    }\n\n    if (model.delta < this.min.delta) {\n      this.min.delta = Math.floor(model.delta);\n    } else if (model.delta > this.max.delta) {\n      this.max.delta = Math.ceil(model.delta);\n    }\n\n    if (model.n < this.min.n) {\n      this.min.n = Math.floor(model.n);\n    } else if (model.n > this.max.n) {\n      this.max.n = Math.ceil(model.n);\n    }\n\n    if (model.ci < this.min.ci) {\n      this.min.ci = Math.floor(model.ci);\n    } else if (model.ci > this.max.ci) {\n      this.max.ci = Math.ceil(model.ci);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/form/form.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h5 {\\n  font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/help/help.component.css\n// module id = ../../../../../src/app/t-test/help/help.component.css\n// module chunks = main","module.exports = \"<ng-template [ngIf]=\\\"topic == 'overview'\\\">\\n  <h5>Introduction</h5>\\n  <p>\\n    PS is a program for performing power and sample size calculations. You are\\n    using a web-enabled beta-test version of the program, where we are actively\\n    working on the interactive user interface. Currently, it can only be used\\n    for paired t-tests but it will be expanded for use in studies with\\n    dichotomous, continuous, survival response and other data.\\n  </p>\\n  <h5>Program Output</h5>\\n  <p>\\n    The program can determine the sample size needed to detect a specified\\n    alternative hypothesis with the required power, the power with which a\\n    specific alternative hypothesis can be detected with a given sample size,\\n    or the specific alternative hypotheses that can be detected with a given\\n    power and sample size. It also gives the 95% confidence interval for the\\n    test statistic under the specified alternative hypothesis as a measure of\\n    the precision of the test statistic.\\n  </p>\\n  <h5>Interactive Help</h5>\\n  <p>\\n    Click on any question-mark icon for help or pull-down menu to determine\\n    the needed information. In the Start tab, choose one of sample size,\\n    power, or detectable difference  and then complete the other fields that\\n    appear. Hover over the i icon for information on what is needed in each\\n    field. Then click the calculate button. A new tab will appear with\\n    sliders for altering the input variables, the desired output variable and\\n    various graphs.\\n  </p>\\n  <h5>Graphical Output</h5>\\n  <p>\\n    The graphs that can be generated are sample size vs. power, sample size\\n    vs. the detectable alternative hypothesis, power vs. sample size, and\\n    power vs. the detectable alternative hypothesis.  The y-axes of these\\n    graphs are always show the output variable. In addition, a graph of\\n    precision vs effect size is always given.  The red dot on the top two\\n    graphs can be dragged to enhance the users intuition on how the input and\\n    output variables interact.\\n  </p>\\n  <h5>Interpretation</h5>\\n  <p>\\n    The output also includes text that describes the power or sample size\\n    calculation in English, which may be a useful starting point for a\\n    description in a grant application.\\n  </p>\\n  <h5>Options gear wheel</h5>\\n  <p>\\n    Click on this icon to change the point size, line width and other graph\\n    options.\\n  </p>\\n  <p>\\n    <img src=\\\"assets/cc.png\\\"> &copy; William D. Dupont, Jeffrey D. Blume, W.\\n    Dale Plummer, Jeremy Stephens 2017\\n  </p>\\n  <p>\\n    Use of this program is restricted by a Creative Commons Attribution\\n    Non-Commercial Share Alike license. See\\n    <a href=\\\"https://creativecommons.org/licenses\\\">https://creativecommons.org/licenses</a>\\n    for details. We are grateful for support from Dr. Gordon R. Bernard and\\n    the Vanderbilt Institute for Clinical and Translational Research.\\n  </p>\\n</ng-template>\\n<ng-template [ngIf]=\\\"topic == 'start'\\\">\\n  <p>Select one of the following:</p>\\n  <h5>Sample size</h5>\\n  <p>\\n    For independent t-tests this is the number of experimental patients that\\n    must be studied to detect a true difference in population means &delta;\\n    with Type I error probability &alpha; given a standard deviation &sigma;\\n    and <em>m</em> controls per experimental patient. For paired t-tests it\\n    is the number of pairs of patients needed to detect a true difference in\\n    population means &delta; with Type I error probability &alpha; given a\\n    standard deviation &sigma;.\\n  </p>\\n  <h5>Power</h5>\\n  <p>\\n    For independent studies it is the probability of rejecting the null\\n    hypothesis with Type I error probability &alpha; given the specified\\n    sample size, a standard deviation &sigma; and a control/experimental\\n    patient ratio <em>m</em> when the true difference in population means is\\n    &delta;. For paired studies it is the probability of rejecting the null\\n    hypothesis with Type I error probability &alpha; given the specified\\n    sample size, a standard deviation &sigma; when the true difference in\\n    population means is &delta;.\\n  </p>\\n  <h5>Detectable alternative</h5>\\n  <p>\\n    A difference in population means that can be detected with the specified\\n    power and Type I error probability &alpha; given a standard deviation\\n    &sigma;, and the specified sample size.\\n  </p>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/help/help.component.html\n// module id = ../../../../../src/app/t-test/help/help.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 't-test-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent {\n  @Input() topic: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/help/help.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".plot {\\n  height: 80%;\\n  /*min-height: 500px;*/\\n  position: relative;\\n}\\n.without-footer {\\n  height: 100%;\\n}\\n\\ndiv.show-footer {\\n  position: absolute;\\n  right: 5px;\\n  bottom: 5px;\\n}\\n\\n.plot /deep/ svg.top-left {\\n  position: absolute;\\n  left: 0;\\n  width: 50%;\\n  height: 70%;\\n}\\n.plot.without-footer /deep/ svg.top-left {\\n  height: 68%;\\n}\\n.plot /deep/ svg.top-right {\\n  position: absolute;\\n  right: 0;\\n  width: 50%;\\n  height: 70%;\\n}\\n.plot.without-footer /deep/ svg.top-right {\\n  height: 68%;\\n}\\n.plot /deep/ svg.bottom {\\n  position: absolute;\\n  top: 70%;\\n  height: 30%;\\n  width: 100%;\\n}\\n.plot.without-footer /deep/ svg.bottom {\\n  top: 68%;\\n  height: 28%;\\n}\\n\\n.output-footer {\\n  position: relative;\\n  background-color: #e5e5e5;\\n  border: 1px solid #aaa;\\n  border-radius: 5px;\\n  /*padding: 10px 20px;*/\\n  /*text-align: justify;*/\\n  /*overflow: auto;*/\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n\\n.output-footer /deep/ a.nav-link {\\n  /*border-color: #bbb #bbb #888;*/\\n  /*background-color: #eee;*/\\n  border-color: #868e96;\\n  background-color: #868e96;\\n  color: white;\\n}\\n\\n.output-footer /deep/ a.nav-link:hover {\\n  /*border-color: #888;*/\\n  /*background-color: #f5f5f5;*/\\n  /*color: #0275d8;*/\\n}\\n\\n.output-footer /deep/ a.nav-link.active {\\n  /*border-color: #888 #888 #fff;*/\\n  /*background-color: #fff;*/\\n  background-color: #007bff;\\n  border-color: #007bff;\\n}\\n\\n.output-footer /deep/ a.nav-link.active:hover {\\n  /*color: #464a4c;*/\\n}\\n\\n.output-footer /deep/ ngb-tabset {\\n  /*display: flex;*/\\n  /*flex-direction: column;*/\\n  /*flex: auto;*/\\n  /*width: 100%;*/\\n}\\n\\n.output-footer /deep/ ul.nav-pills {\\n  /*display: flex;*/\\n  /*flex: 0 0 auto;*/\\n  /*border-bottom: 1px solid #888;*/\\n  padding: 5px;\\n}\\n\\n.output-footer /deep/ li.nav-item {\\n  margin-right: 5px;\\n}\\n\\n.output-footer /deep/ .tab-content {\\n  /*display: flex;*/\\n  /*flex-direction: column;*/\\n  /*flex: 1 0 auto;*/\\n}\\n\\n.output-footer /deep/ .tab-pane {\\n  /*display: flex;*/\\n  /*flex-direction: column;*/\\n  /*flex: 1 0 auto;*/\\n  padding: 10px;\\n  text-align: justify;\\n  /*border: 1px solid #888;*/\\n  /*border-top: 0;*/\\n  overflow: auto;\\n  height: 10vh;\\n}\\n\\n.output-footer /deep/ .tab-pane.active {\\n  /*background: white;*/\\n}\\n\\n.output-footer /deep/ span.code {\\n  display: inline-block;\\n  font-family: monospace;\\n  border: 1px solid #e0e0e0;\\n  padding: 2px;\\n  background-color: #d5d5d5;\\n}\\n\\n.hide-footer {\\n  position: absolute;\\n  top: 0;\\n  right: 5px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/output-pane/output-pane.component.css\n// module id = ../../../../../src/app/t-test/output-pane/output-pane.component.css\n// module chunks = main","module.exports = \"<div class=\\\"plot\\\" [class.without-footer]=\\\"!showFooter\\\">\\n  <t-test-plot #topLeft name=\\\"top-left\\\"\\n    [model-set]=\\\"modelSet\\\"\\n    [hover-disabled]=\\\"hoverDisabled\\\">\\n  </t-test-plot>\\n  <t-test-plot #topRight name=\\\"top-right\\\"\\n    [model-set]=\\\"modelSet\\\"\\n    [hover-disabled]=\\\"hoverDisabled\\\">\\n  </t-test-plot>\\n  <t-test-bottom-plot #bottom name=\\\"bottom\\\"\\n    [model-set]=\\\"modelSet\\\"\\n    [disable-drag-target]=\\\"model?.output == 'delta'\\\"\\n    [disable-drag-ci]=\\\"model?.output == 'n'\\\">\\n  </t-test-bottom-plot>\\n  <div class=\\\"show-footer\\\" *ngIf=\\\"modelSet && !showFooter\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"toggleFooter(true)\\\">\\n      <i class=\\\"fa fa-envelope-open-o\\\" aria-hidden=\\\"true\\\"></i>\\n      Interpretation / Log\\n    </button>\\n  </div>\\n</div>\\n<div class=\\\"output-footer\\\" *ngIf=\\\"modelSet && showFooter\\\">\\n  <div class=\\\"hide-footer\\\">\\n    <i class=\\\"fa fa-times-circle\\\" (click)=\\\"toggleFooter(false)\\\"></i>\\n  </div>\\n  <ngb-tabset type=\\\"pills\\\">\\n    <ngb-tab title=\\\"Interpretation\\\">\\n      <ng-template ngbTabContent>\\n        <ng-template [ngIf]=\\\"model.output == 'n' || model.output == 'nByCI'\\\">\\n          We are planning a study of a continuous response variable from matched\\n          pairs of study subjects. Prior data indicate that the difference in the\\n          response of matched pairs is normally distributed with standard deviation\\n          {{round(model.sigma)}}. If the true difference in the mean response of\\n          matched pairs is {{round(model.delta)}}, we will need to study\\n          {{ceil(model.n)}} pairs of subjects to be able to reject the null\\n          hypothesis that this response difference is zero with probability (power)\\n          {{round(model.power)}}. The Type I error probability associated with this\\n          test of this null hypothesis is {{round(model.alpha)}}.\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n          We are planning a study with {{ceil(model.n)}} pairs of subjects. Prior\\n          data indicate that the difference in the response of matched pairs is\\n          normally distributed with standard deviation {{round(model.sigma)}}. If\\n          the true difference in the mean response of matched pairs is\\n          {{round(model.delta)}}, we will be able to reject the null hypothesis\\n          that this response difference is zero with probability (power)\\n          {{round(model.power)}}. The Type I error probability associated with this\\n          test of this null hypothesis is {{round(model.alpha)}}.\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n          We are planning a study with {{ceil(model.n)}} pairs of subjects. Prior\\n          data indicate that the difference in the response of matched pairs is\\n          normally distributed with standard deviation {{round(model.sigma)}}. We\\n          will be able to detect a true difference in the mean response of matched\\n          pairs of -{{round(model.delta)}} or {{round(model.delta)}} with\\n          probability (power) {{round(model.power)}}. The Type I error probability\\n          associated with this test of the null hypothesis that this response\\n          difference is zero is {{round(model.alpha)}}.\\n        </ng-template>\\n      </ng-template>\\n    </ngb-tab>\\n    <ngb-tab title=\\\"Log\\\">\\n      <ng-template ngbTabContent>\\n        <ng-template [ngIf]=\\\"model.changeHistory.length == 0\\\" [ngIfElse]=\\\"changeHistory\\\">\\n          There have been no changes yet.\\n        </ng-template>\\n        <ng-template #changeHistory>\\n          <ul class=\\\"log\\\">\\n            <li *ngFor=\\\"let changes of model.changeHistory\\\"\\n              [innerHTML]=\\\"describeChanges(changes)\\\">\\n            </li>\\n          </ul>\\n        </ng-template>\\n      </ng-template>\\n    </ngb-tab>\\n  </ngb-tabset>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/output-pane/output-pane.component.html\n// module id = ../../../../../src/app/t-test/output-pane/output-pane.component.html\n// module chunks = main","import { Component, ViewChild, TemplateRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TTest, TTestRanges, TTestSet } from '../t-test';\nimport { PlotComponent } from '../plot/plot.component';\nimport { BottomPlotComponent } from '../bottom-plot/bottom-plot.component';\nimport { ExportPlotsComponent } from '../export-plots/export-plots.component';\n\n@Component({\n  selector: 't-test-output-pane',\n  templateUrl: './output-pane.component.html',\n  styleUrls: ['./output-pane.component.css']\n})\nexport class OutputPaneComponent implements OnChanges {\n  @Input('model-set') modelSet: TTestSet;\n  @Input('hover-disabled') hoverDisabled = false;\n  model: TTest;\n  showFooter = true;\n\n  @ViewChild('topLeft') topLeftPlot: PlotComponent;\n  @ViewChild('topRight') topRightPlot: PlotComponent;\n  @ViewChild('bottom') bottomPlot: BottomPlotComponent;\n  @ViewChild('saveDialog') saveDialog: TemplateRef<any>;\n\n  constructor(private modalService: NgbModal) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!('modelSet' in changes)) return;\n\n    if (this.modelSet) {\n      this.model = this.modelSet.getModel(0);\n    } else {\n      this.model = undefined;\n    }\n  }\n\n  toggleFooter(value: boolean): void {\n    this.showFooter = value;\n    setTimeout(this.resize.bind(this), 1);\n  }\n\n  openSaveDialog(): void {\n    const modalRef = this.modalService.open(ExportPlotsComponent, { windowClass: 'export-plots' });\n    modalRef.componentInstance.modelSet = this.modelSet;\n  }\n\n  round(n: number): number {\n    return Math.round(n * 100) / 100;\n  }\n\n  ceil(n: number): number {\n    return Math.ceil(n);\n  }\n\n  resize(): void {\n    this.topLeftPlot.redraw();\n    this.topRightPlot.redraw();\n    this.bottomPlot.redraw();\n  }\n\n  describeChanges(changes: any): string {\n    let result = [];\n    for (var key in changes) {\n      result.push(`<span class=\"code\">${key}</span> was changed to <span class=\"code\">${changes[key]}</span>`);\n    }\n    return result.join(\"; \");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/output-pane/output-pane.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PaletteService {\n  private colors = {\n    plasma:  [\"#0D0887\", \"#7E03A8\", \"#CC4678\", \"#F89441\", \"#F0F921\"],\n    viridis: [\"#440154\", \"#3B528B\", \"#21908C\", \"#5DC863\", \"#FDE725\"],\n    magma:   [\"#000004\", \"#51127C\", \"#B63679\", \"#FB8861\", \"#FCFDBF\"],\n  };\n\n  getColor(index: number, name = \"plasma\"): string {\n    if (!(name in this.colors)) {\n      throw new Error(`invalid palette: ${name}`);\n    }\n    if (index == -1) {\n      return \"\";\n    }\n\n    let colors = this.colors[name];\n    return colors[index % colors.length];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/palette.service.ts","import { Injectable } from '@angular/core';\nimport { ChangeEmitter, Changeable } from './changeable';\n\n@Injectable()\nexport class PlotOptionsService extends ChangeEmitter {\n  @Changeable height: number;\n  @Changeable width: number;\n  @Changeable fontFamily: string;\n  @Changeable fontSize: number;\n  @Changeable axisFontSize: number;\n  @Changeable lineWidth: number;\n  @Changeable axisLineWidth: number;\n  @Changeable paletteTheme: string;\n  @Changeable lineStyle: string;\n\n  constructor() {\n    super();\n    this.setDefaults(false);\n  }\n\n  setDefaults(emit = true): void {\n    this.update({\n      fontFamily: \"\",\n      fontSize: 1,\n      axisFontSize: 1,\n      lineWidth: 1,\n      axisLineWidth: 1,\n      paletteTheme: \"plasma\",\n      lineStyle: \"solid\"\n    }, emit);\n  }\n\n  attributes(): any {\n    return({\n      height: this.height,\n      width: this.width,\n      fontFamily: this.fontFamily,\n      axisFontSize: this.axisFontSize,\n      fontSize: this.fontSize,\n      lineWidth: this.lineWidth,\n      axisLineWidth: this.axisLineWidth,\n      paletteTheme: this.paletteTheme,\n      lineStyle: this.lineStyle\n    });\n  }\n\n  update(attribs: any, emit = true): void {\n    this.noEmit = true;\n    // don't update height and width\n    if ('fontFamily' in attribs) {\n      this.fontFamily = attribs.fontFamily;\n    }\n    if ('fontSize' in attribs) {\n      this.fontSize = attribs.fontSize;\n    }\n    if ('axisFontSize' in attribs) {\n      this.axisFontSize = attribs.axisFontSize;\n    }\n    if ('lineWidth' in attribs) {\n      this.lineWidth = attribs.lineWidth;\n    }\n    if ('axisLineWidth' in attribs) {\n      this.axisLineWidth = attribs.axisLineWidth;\n    }\n    if ('paletteTheme' in attribs) {\n      this.paletteTheme = attribs.paletteTheme;\n    }\n    if ('lineStyle' in attribs) {\n      this.lineStyle = attribs.lineStyle;\n    }\n    this.noEmit = false;\n    if (emit) {\n      this.emit();\n    } else {\n      this.changes = {};\n    }\n  }\n\n  dashArray(): string {\n    switch (this.lineStyle) {\n      case \"solid\":\n        return \"\";\n      case \"dashed\":\n        return \"5,5\";\n      case \"dotted\":\n        return \"1,5\";\n    }\n  }\n\n  lineCap(): string {\n    if (this.lineStyle == \"dotted\") {\n      return \"round\";\n    }\n    return \"\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"fieldset {\\n  border: 1px solid #bbb;\\n  border-radius: 5px;\\n  padding: 10px;\\n  margin: 10px;\\n}\\n\\nfieldset legend {\\n  font-size: inherit;\\n  font-weight: bold;\\n  display: table;\\n  width: auto;\\n}\\n\\n.form-group {\\n  padding: 0 5px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options/plot-options.component.css\n// module id = ../../../../../src/app/t-test/plot-options/plot-options.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"plotOptions && modelSet\\\" class=\\\"content\\\">\\n  <fieldset>\\n    <legend>Global</legend>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"plot-font-family\\\">Font family</label>\\n      <select id=\\\"plot-font-family\\\" class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"plotOptions.fontFamily\\\">\\n        <option value=\\\"\\\">Default</option>\\n        <option value=\\\"serif\\\">Serif</option>\\n        <option value=\\\"sans\\\">Sans-serif</option>\\n        <option value=\\\"monospace\\\">Monospace</option>\\n        <option>Bungee Shade</option>\\n        <option>Sancreek</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"plot-palette-theme\\\">Palette</label>\\n      <select id=\\\"plot-palette-theme\\\" class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"plotOptions.paletteTheme\\\">\\n        <option value=\\\"plasma\\\">Plasma</option>\\n        <option value=\\\"viridis\\\">Viridis</option>\\n        <option value=\\\"magma\\\">Magma</option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-font-size\\\">Font size: {{plotOptions.fontSize}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-font-size\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [(ngModel)]=\\\"plotOptions.fontSize\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-axis-font-size\\\">Axis font size: {{plotOptions.axisFontSize}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-axis-font-size\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [(ngModel)]=\\\"plotOptions.axisFontSize\\\" />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-line-width\\\">Line width: {{plotOptions.lineWidth}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-line-width\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [(ngModel)]=\\\"plotOptions.lineWidth\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-axis-line-width\\\">Axis line width: {{plotOptions.axisLineWidth}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-axis-line-width\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [(ngModel)]=\\\"plotOptions.axisLineWidth\\\" />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"plot-line-style\\\">Line style</label>\\n      <select id=\\\"plot-line-style\\\" class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"plotOptions.lineStyle\\\">\\n        <option value=\\\"solid\\\">Solid</option>\\n        <option value=\\\"dashed\\\">Dashed</option>\\n        <option value=\\\"dotted\\\">Dotted</option>\\n      </select>\\n    </div>\\n  </fieldset>\\n  <fieldset>\\n    <legend *ngIf=\\\"model.output == 'n'\\\">Sample Size</legend>\\n    <legend *ngIf=\\\"model.output == 'power'\\\">Power</legend>\\n    <legend *ngIf=\\\"model.output == 'delta'\\\">Detectable Alternative</legend>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-top-y-min\\\">Minimum</label>\\n        <div class=\\\"input-group\\\">\\n          <ng-template [ngIf]=\\\"model.output == 'n'\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.n.max - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.n.min\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.power.max - 0.01)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.power.min\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.delta.max - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.delta.min\\\" />\\n          </ng-template>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-top-y-max\\\">Maximum</label>\\n        <div class=\\\"input-group\\\">\\n          <ng-template [ngIf]=\\\"model.output == 'n'\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.n.min + 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.n.max\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.power.min + 0.01)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.power.max\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.delta.min + 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.delta.max\\\" />\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n  <fieldset>\\n    <ng-template [ngIf]=\\\"model.output == 'n'\\\">\\n      <legend>Sample Size vs. Power</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.power.max - 0.01)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.power.min\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.power.min + 0.01)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.power.max\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n      <legend>Power vs. Sample Size</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.n.max - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.n.min\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.n.min + 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.n.max\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n      <legend>Detectable Alternative vs. Sample Size</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.n.max - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.n.min\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.n.min + 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.n.max\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </fieldset>\\n  <fieldset>\\n    <ng-template [ngIf]=\\\"model.output == 'n'\\\">\\n      <legend>Sample Size vs. Detectable Alternative</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.delta.max - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.delta.min\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.delta.min - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.delta.max\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n      <legend>Power vs. Detectable Alternative</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.delta.max - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.delta.min\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.delta.min - 1)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.delta.max\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n      <legend>Detectable Alternative vs. Power</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.power.max - 0.01)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.power.min\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.power.min + 0.01)\\\"\\n              [(ngModel)]=\\\"modelSet.ranges.power.max\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </fieldset>\\n  <fieldset>\\n    <legend>Precision vs. Parameter Space</legend>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-bottom-x-min\\\">X minimum</label>\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\"\\n            type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"roundFloor(modelSet.ranges.pSpace.max - 1)\\\"\\n            [(ngModel)]=\\\"modelSet.ranges.pSpace.min\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-bottom-x-max\\\">X maximum</label>\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\"\\n            type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"roundCeil(modelSet.ranges.pSpace.min + 1)\\\"\\n            [(ngModel)]=\\\"modelSet.ranges.pSpace.max\\\" />\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"reset()\\\">\\n    Reset all settings\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options/plot-options.component.html\n// module id = ../../../../../src/app/t-test/plot-options/plot-options.component.html\n// module chunks = main","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TTest, TTestRanges, TTestSet } from '../t-test';\nimport { PlotOptionsService } from '../plot-options.service';\n\n@Component({\n  selector: 't-test-plot-options',\n  templateUrl: './plot-options.component.html',\n  styleUrls: ['./plot-options.component.css']\n})\nexport class PlotOptionsComponent implements OnChanges {\n  @Input('model-set') modelSet: TTestSet;\n  model: TTest;\n  defaultRanges: TTestRanges;\n  private subscription: Subscription;\n\n  constructor(private plotOptions: PlotOptionsService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!('modelSet' in changes)) return;\n\n    if (this.modelSet) {\n      this.model = this.modelSet.getModel(0);\n      this.subscription = this.modelSet.onCompute.subscribe(this.setDefaultRanges.bind(this));\n      this.setDefaultRanges();\n    } else {\n      this.model = undefined;\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n        this.subscription = undefined;\n      }\n      this.defaultRanges = undefined;\n    }\n  }\n\n  reset(): void {\n    this.plotOptions.setDefaults();\n    this.modelSet.ranges.updateFromArrays(this.defaultRanges.attributes());\n  }\n\n  roundFloor(n: number): number {\n    return Math.floor(n * 100) / 100;\n  }\n\n  roundCeil(n: number): number {\n    return Math.ceil(n * 100) / 100;\n  }\n\n  private setDefaultRanges(): void {\n    this.defaultRanges = TTestRanges.fromArrays(this.modelSet.ranges.attributes());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot-options/plot-options.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".target {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot/plot.component.css\n// module id = ../../../../../src/app/t-test/plot/plot.component.css\n// module chunks = main","module.exports = \"<svg #plot\\n  [style.fontFamily]=\\\"plotOptions.fontFamily == '' ? null : plotOptions.fontFamily\\\"\\n  [style.fontSize]=\\\"(plotOptions.fontSize * 110).toString() + '%'\\\"\\n  [attr.class]=\\\"name\\\" [attr.width]=\\\"fixedWidth\\\" [attr.height]=\\\"fixedHeight\\\">\\n\\n  <rect #unit x=\\\"0\\\" y=\\\"0\\\" width=\\\"1em\\\" height=\\\"1em\\\" stroke=\\\"none\\\" fill=\\\"none\\\" />\\n  <ng-template [ngIf]=\\\"x && y && modelSet\\\">\\n    <defs>\\n      <clipPath id=\\\"{{name}}-plot-area\\\">\\n        <rect x=\\\"0\\\" [attr.y]=\\\"-plotOptions.lineWidth * 3\\\"\\n          [attr.width]=\\\"innerWidth\\\"\\n          [attr.height]=\\\"innerHeight + plotOptions.lineWidth * 3\\\" />\\n      </clipPath>\\n      <clipPath id=\\\"{{name}}-target-area\\\">\\n        <rect x=\\\"-5\\\" [attr.y]=\\\"-5\\\"\\n          [attr.width]=\\\"innerWidth + 10\\\"\\n          [attr.height]=\\\"innerHeight + 10\\\" />\\n      </clipPath>\\n    </defs>\\n\\n    <text text-anchor=\\\"middle\\\"\\n      [attr.x]=\\\"innerWidth / 2 + margin\\\" [attr.y]=\\\"innerHeight + margin\\\" dy=\\\"2.5em\\\">\\n      {{x.title}}\\n    </text>\\n    <text text-anchor=\\\"middle\\\"\\n      [attr.dx]=\\\"-(innerHeight / 2 + margin)\\\" dy=\\\"1em\\\"\\n      transform=\\\"rotate(-90)\\\">\\n      {{y.title}}\\n    </text>\\n    <text text-anchor=\\\"middle\\\" font-weight=\\\"bold\\\"\\n      [attr.x]=\\\"innerWidth / 2 + margin\\\" y=\\\"0\\\" dy=\\\"2em\\\">\\n      {{title}}\\n    </text>\\n\\n    <g *ngFor=\\\"let path of paths; index as i; trackBy: trackPathBy\\\"\\n      [attr.transform]=\\\"translate(margin, margin)\\\">\\n      <path\\n        id=\\\"{{name}}-path-{{i}}\\\"\\n        attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n        [attr.stroke]=\\\"palette.getColor(paths.length - 1 - i, plotOptions.paletteTheme)\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        [attr.stroke-dasharray]=\\\"plotOptions.dashArray()\\\"\\n        [attr.stroke-linecap]=\\\"plotOptions.lineCap()\\\"\\n        [attr.opacity]=\\\"(paths.length - 1) == i ? 1 : 0.7\\\"\\n        fill=\\\"none\\\" />\\n    </g>\\n\\n    <ng-template [ngIf]=\\\"!hideDropLines\\\">\\n      <g *ngFor=\\\"let path of dropPaths; index as i; trackBy: trackPathBy\\\"\\n        [attr.transform]=\\\"translate(margin, margin)\\\">\\n        <path id=\\\"{{name}}-drop-{{i}}\\\"\\n          attr.clip-path=\\\"url(#{{name}}-plot-area)\\\"\\n          stroke=\\\"red\\\"\\n          [attr.stroke-width]=\\\"plotOptions.lineWidth * 3 / 2\\\"\\n          stroke-dasharray=\\\"5, 5\\\"\\n          fill=\\\"none\\\" />\\n      </g>\\n    </ng-template>\\n\\n    <g id=\\\"{{name}}-x-axis\\\" [attr.transform]=\\\"translate(margin, innerHeight + margin)\\\"></g>\\n    <g id=\\\"{{name}}-y-axis\\\" [attr.transform]=\\\"translate(margin, margin)\\\"></g>\\n\\n    <g *ngIf=\\\"showHoverInfo\\\"\\n      [attr.transform]=\\\"translate(margin + hoverX, margin + hoverY)\\\">\\n      <circle r=\\\"4\\\" fill=\\\"none\\\" stroke=\\\"blue\\\" />\\n      <rect x=\\\"-3.5em\\\" [attr.y]=\\\"hoverInfoY()\\\" width=\\\"8em\\\" height=\\\"2.5em\\\"\\n        stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.8\\\" />\\n      <text x=\\\"-2.5em\\\" [attr.y]=\\\"hoverInfoY()\\\">\\n        <tspan dy=\\\"1em\\\" text-anchor=\\\"right\\\">{{x.sym}}:</tspan>\\n        <tspan x=\\\"0em\\\" text-anchor=\\\"left\\\">{{hoverPoint.x}}</tspan>\\n        <tspan x=\\\"-2.5em\\\" dy=\\\"1em\\\" text-anchor=\\\"right\\\">{{y.sym}}:</tspan>\\n        <tspan x=\\\"0em\\\" text-anchor=\\\"left\\\">{{hoverPoint.y}}</tspan>\\n      </text>\\n    </g>\\n\\n    <ng-template [ngIf]=\\\"!hideTarget\\\">\\n      <rect [attr.transform]=\\\"translate(margin, margin)\\\"\\n        [attr.width]=\\\"innerWidth\\\" [attr.height]=\\\"innerHeight\\\"\\n        fill=\\\"none\\\" pointer-events=\\\"all\\\"\\n        (mouseout)=\\\"toggleHoverInfo(false)\\\"\\n        (mousemove)=\\\"hover($event)\\\" />\\n\\n      <g *ngIf=\\\"showTargetInfo\\\"\\n        [attr.transform]=\\\"translate(margin + xScale(targetPoint.x), margin + yScale(targetPoint.y))\\\">\\n        <rect x=\\\"0\\\" y=\\\"-3.5em\\\" width=\\\"8em\\\" height=\\\"2.5em\\\"\\n          stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.8\\\" />\\n        <text x=\\\"1em\\\" y=\\\"-3.5em\\\">\\n          <tspan dy=\\\"1em\\\" text-anchor=\\\"right\\\">{{x.sym}}:</tspan>\\n          <tspan x=\\\"3.5em\\\" text-anchor=\\\"left\\\">{{targetPoint.x}}</tspan>\\n          <tspan x=\\\"1em\\\" dy=\\\"1em\\\" text-anchor=\\\"right\\\">{{y.sym}}:</tspan>\\n          <tspan x=\\\"3.5em\\\" text-anchor=\\\"left\\\">{{targetPoint.y}}</tspan>\\n        </text>\\n      </g>\\n\\n      <circle #target class=\\\"target\\\" r=\\\"5\\\"\\n        [attr.transform]=\\\"translate(margin, margin)\\\"\\n        attr.clip-path=\\\"url(#{{name}}-target-area)\\\"\\n        fill=\\\"red\\\"\\n        (mouseover)=\\\"toggleTargetInfo(true)\\\"\\n        (mouseout)=\\\"toggleTargetInfo(false)\\\" />\\n    </ng-template>\\n  </ng-template>\\n</svg>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot/plot.component.html\n// module id = ../../../../../src/app/t-test/plot/plot.component.html\n// module chunks = main","import {\n  Component, Input, OnInit, OnChanges, SimpleChanges, AfterViewChecked,\n  ViewChild, ElementRef, ViewEncapsulation\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as d3 from 'd3';\n\nimport { AbstractPlotComponent } from '../abstract-plot.component';\nimport { Range } from '../range';\nimport { TTestSet } from '../t-test';\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\nimport { SerializePlotComponent } from '../serialize-plot.component';\n\ninterface Param {\n  name: string;\n  target?: number;\n  range: Range;\n  title: string;\n  sym: string;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\n@Component({\n  selector: 't-test-plot',\n  templateUrl: './plot.component.html',\n  styleUrls: ['./plot.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PlotComponent extends AbstractPlotComponent implements OnInit, OnChanges, AfterViewChecked {\n  @Input('model-set') modelSet: TTestSet;\n  @Input('hover-disabled') hoverDisabled = false;\n  @Input('draw-on-init') drawOnInit = true;\n  @Input('hide-drop-lines') hideDropLines = false;\n  @Input('hide-target') hideTarget = false;\n  @Input('fixed-width') fixedWidth: number;\n  @Input('fixed-height') fixedHeight: number;\n  @Input('disable-drag') disableDrag = false;\n\n  @ViewChild('plot') plotElement: ElementRef;\n  @ViewChild('unit') unitElement: ElementRef;\n  @ViewChild('target') targetElement: ElementRef;\n  @ViewChild('drop1') drop1Element: ElementRef;\n  @ViewChild('drop2') drop2Element: ElementRef;\n\n  constructor(public plotOptions: PlotOptionsService, public palette: PaletteService) { super(); }\n\n  lastX: Param;\n  lastY: Param;\n  x: Param;\n  y: Param;\n\n  width: number;\n  height: number;\n  innerWidth: number;\n  innerHeight: number;\n  margin: number = 50;\n  xScale: any;\n  yScale: any;\n  paths: string[];\n  dropPaths: string[] = [];\n  newDropPaths: string[];\n  mainData: any[];\n  targetPoint: Point;\n  newTargetPoint: Point;\n  hoverX: number;\n  hoverY: number;\n  hoverPoint: Point;\n  xTargetRange: number[];\n  yTargetRange: number[];\n  xBisector: any;\n\n  targetDragging = false;\n  showTargetInfo = false;\n  showHoverInfo = false;\n  needDraw = false;\n  initialized = false;\n\n  private subscription: Subscription;\n\n  ngOnInit(): void {\n    this.plotOptions.onChange.subscribe(() => { this.compute(); });\n    if (this.drawOnInit) {\n      this.compute();\n    }\n    this.initialized = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.modelSet) {\n      // model set changed\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n      if (this.modelSet) {\n        let callback = () => { this.compute(); };\n        this.subscription = this.modelSet.onCompute.subscribe(callback);\n        this.subscription.add(this.modelSet.onChange.subscribe(callback));\n\n        if (this.initialized) {\n          this.compute();\n        }\n      }\n    } else if (changes.fixedWidth || changes.fixedHeight) {\n      if (this.initialized) {\n        this.compute();\n      }\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    this.draw();\n  }\n\n  redraw(): void {\n    this.compute();\n  }\n\n  toggleTargetInfo(value: boolean): void {\n    if (!this.targetDragging) {\n      this.showTargetInfo = value;\n    }\n  }\n\n  toggleHoverInfo(value: boolean): void {\n    this.showHoverInfo = value;\n  }\n\n  hover(event: any): void {\n    if (this.hoverDisabled) {\n      return;\n    }\n\n    var dim = event.target.getBoundingClientRect();\n    var x = event.clientX - dim.left;\n    var y = event.clientY - dim.top;\n\n    if (x > this.xTargetRange[0] && x < this.xTargetRange[1] &&\n        y > this.yTargetRange[0] && y < this.yTargetRange[1]) {\n      // hide hover info if too close to the target point\n      this.showHoverInfo = false;\n      return;\n    }\n\n    let index = this.xBisector(this.mainData, this.xScale.invert(x));\n    let data = this.mainData[index];\n    if (data) {\n      this.hoverPoint = {\n        x: data[this.x.name],\n        y: data[this.y.name]\n      }\n      this.hoverX = this.xScale(this.hoverPoint.x);\n      this.hoverY = this.yScale(this.hoverPoint.y);\n      this.showHoverInfo = true;\n    } else {\n      this.showHoverInfo = false;\n    }\n  }\n\n  hoverInfoY(): string {\n    if (this.hoverY < this.yTargetRange[0]) {\n      return \"-3.5em\";\n    }\n    return \"1em\";\n  }\n\n  trackPathBy(index: number, path: string): any {\n    return index;\n  }\n\n  private dragTargetStart(): void {\n    this.targetDragging = true;\n  }\n\n  private dragTarget(event: any): void {\n    let x = this.xScale.invert(d3.event.x - this.margin);\n    if (x < this.x.range.min) {\n      x = this.x.range.min;\n    } else if (x > this.x.range.max) {\n      x = this.x.range.max;\n    }\n    let index = this.xBisector(this.mainData, x);\n    let data = this.mainData[index];\n    if (!data) return;\n\n    let svg = d3.select(this.plotElement.nativeElement);\n    this.newTargetPoint = { x: data[this.x.name], y: data[this.y.name] }\n    svg.select(`circle.target`).\n      attr(\"cx\", this.xScale(this.newTargetPoint.x)).\n      attr(\"cy\", this.yScale(this.newTargetPoint.y));\n\n    this.newDropPaths = this.getDropPaths();\n    svg.select(`#${this.name}-drop-0`).attr(\"d\", this.newDropPaths[0]);\n    svg.select(`#${this.name}-drop-1`).attr(\"d\", this.newDropPaths[1]);\n  }\n\n  private dragTargetEnd(): void {\n    this.targetDragging = false;\n    this.showTargetInfo = false;\n\n    if (this.modelSet && this.x.name) {\n      let model = this.modelSet.getModel(0);\n      model.update({\n        [this.x.name]: this.newTargetPoint.x\n      });\n    }\n  }\n\n  private compute(): void {\n    if (!this.modelSet) {\n      return;\n    }\n\n    // dimensions\n    if (this.fixedWidth) {\n      this.width = this.fixedWidth;\n    } else {\n      this.width = this.getDimension('width');\n    }\n    if (this.fixedHeight) {\n      this.height = this.fixedHeight;\n    } else {\n      this.height = this.getDimension('height');\n    }\n    this.innerWidth  = this.width  - (this.margin * 2);\n    this.innerHeight = this.height - (this.margin * 2);\n\n    // setup\n    this.lastX = this.x;\n    this.lastY = this.y;\n    let model = this.modelSet.getModel(0);\n    let ranges = this.modelSet.ranges;\n    let plotData;\n    switch (model.output) {\n      case \"n\":\n      case \"nByCI\":\n        if (this.name == \"top-left\" || this.name == \"top-left-export\") {\n          this.x = {\n            name: \"power\", range: ranges.power, target: model.power,\n            title: \"Power\", sym: \"1-β\"\n          };\n        } else if (this.name == \"top-right\" || this.name == \"top-right-export\") {\n          this.x = {\n            name: \"delta\", range: ranges.delta, target: model.delta,\n            title: \"Detectable Alternative\", sym: \"δ\"\n          };\n        }\n        this.y = {\n          name: \"n\", range: ranges.n, target: model.n,\n          title: \"Sample Size\", sym: \"n\"\n        };\n        plotData = this.modelSet.models.map(m => m.data.primary.data);\n        break;\n      case \"power\":\n        if (this.name == \"top-left\" || this.name == \"top-left-export\") {\n          this.x = {\n            name: \"n\", range: ranges.n, target: model.n,\n            title: \"Sample Size\", sym: \"n\"\n          };\n          this.y = {\n            name: \"power\", range: ranges.power, target: model.power,\n            title: \"Power\", sym: \"1-β\"\n          };\n          plotData = this.modelSet.models.map(m => m.data.primary.data);\n        } else if (this.name == \"top-right\" || this.name == \"top-right-export\") {\n          this.x = {\n            name: \"delta\", range: ranges.delta, target: model.delta,\n            title: \"Detectable Alternative\", sym: \"δ\"\n          };\n          this.y = {\n            name: \"power\", range: ranges.power, target: model.power,\n            title: \"Power\", sym: \"1-β\"\n          };\n          plotData = [];\n          this.modelSet.models.forEach(m => {\n            if (m.data.secondary) {\n              plotData.push(m.data.secondary.data);\n            }\n          });\n        }\n        break;\n      case \"delta\":\n        if (this.name == \"top-left\" || this.name == \"top-left-export\") {\n          this.x = {\n            name: \"n\", range: ranges.n, target: model.n,\n            title: \"Sample Size\", sym: \"n\"\n          };\n        } else if (this.name == \"top-right\" || this.name == \"top-right-export\") {\n          this.x = {\n            name: \"power\", range: ranges.power, target: model.power,\n            title: \"Power\", sym: \"1-β\"\n          };\n        }\n        this.y = {\n          name: \"delta\", range: ranges.delta, target: model.delta,\n          title: \"Detectable Alternative\", sym: \"δ\"\n        };\n        plotData = this.modelSet.models.map(m => m.data.primary.data);\n        break;\n    }\n    if (!this.x || !this.y || plotData.length == 0) {\n      return;\n    }\n\n    this.title = `${this.y.title} vs. ${this.x.title}`;\n    this.targetPoint = { x: this.x.target, y: this.y.target };\n    this.newTargetPoint = undefined;\n\n    this.mainData = plotData[0].slice();\n    this.mainData.sort((a, b) => a[this.x.name] - b[this.x.name]);\n\n    // margin\n    let unitBox = this.unitElement.nativeElement.getBBox();\n    if (unitBox && unitBox.width) {\n      this.margin = unitBox.width * 2 + (20 * this.plotOptions.axisFontSize);\n    }\n\n    // scales\n    this.xScale = d3.scaleLinear().\n      domain(this.x.range.toArray()).\n      range([0, this.innerWidth]);\n\n    this.yScale = d3.scaleLinear().\n      domain(this.y.range.toArray().reverse()).\n      range([0, this.innerHeight]);\n\n    // paths\n    plotData.reverse(); // plot lines in reverse for proper z-index\n    this.paths = plotData.map(d => this.getPath(d, this.x.name, this.y.name))\n\n    // drop paths\n    this.dropPaths = this.getDropPaths();\n\n    // target hover ranges\n    let xTargetPos = this.xScale(this.targetPoint.x);\n    this.xTargetRange = [xTargetPos - 5, xTargetPos + 5];\n    let yTargetPos = this.yScale(this.targetPoint.y);\n    this.yTargetRange = [yTargetPos - 5, yTargetPos + 5];\n    this.xBisector = d3.bisector(point => point[this.x.name]).left;\n\n    this.needDraw = true;\n  }\n\n  private getDropPaths(): string[] {\n    let point = this.newTargetPoint || this.targetPoint;\n    let data = [\n      [\n        { x: this.xScale.domain()[0], y: point.y },\n        { x: point.x, y: point.y }\n      ],\n      [\n        { x: point.x, y: this.yScale.domain()[1] },\n        { x: point.x, y: point.y }\n      ],\n    ];\n    return data.map(subData => this.getPath(subData, 'x', 'y'));\n  }\n\n  private draw(): void {\n    if (!this.needDraw) {\n      return;\n    }\n\n    let svg = d3.select(this.plotElement.nativeElement);\n    let t = svg.transition();\n\n    // axes (drawn by d3)\n    let xAxis = d3.axisBottom(this.xScale).ticks(6);\n    t.select(`#${this.name}-x-axis`).\n      call(xAxis).\n      attr(\"font-size\", 15 * this.plotOptions.axisFontSize).\n      attr(\"stroke-width\", this.plotOptions.axisLineWidth * 1.5);\n\n    let yAxis = d3.axisLeft(this.yScale).ticks(6);\n    t.select(`#${this.name}-y-axis`).\n      call(yAxis).\n      attr(\"font-size\", 15 * this.plotOptions.axisFontSize).\n      attr(\"stroke-width\", this.plotOptions.axisLineWidth * 1.5);\n\n    // paths\n    for (let i = 0, ilen = this.paths.length; i < ilen; i++) {\n      let path = t.select(`#${this.name}-path-${i}`);\n      if (!path.attr(\"d\")) {\n        path.attr(\"d\", this.paths[i]);\n      } else {\n        path.attrTween(\"d\", this.pathTween(this.paths[i], 4))\n      }\n    }\n    for (let i = 0, ilen = this.dropPaths.length; i < ilen; i++) {\n      t.select(`#${this.name}-drop-${i}`).attr(\"d\", this.dropPaths[i]);\n    }\n\n    // target\n    t.select('circle.target').\n      attr(\"cx\", this.xScale(this.targetPoint.x)).\n      attr(\"cy\", this.yScale(this.targetPoint.y));\n\n    // make target point draggable\n    if (!this.disableDrag) {\n      let target = d3.select(this.targetElement.nativeElement);\n      let drag = d3.drag().\n        on(\"start\", this.dragTargetStart.bind(this)).\n        on(\"drag\", this.dragTarget.bind(this)).\n        on(\"end\", this.dragTargetEnd.bind(this));\n      target.call(drag);\n    }\n\n    this.needDraw = false;\n  }\n\n  // from https://bl.ocks.org/mbostock/3916621\n  private pathTween(d1, precision): Function {\n    return function() {\n      var path0 = this,\n          path1 = path0.cloneNode(),\n          n0 = path0.getTotalLength(),\n          n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength();\n\n      // Uniform sampling of distance based on specified precision.\n      var distances = [0], i = 0, dt = precision / Math.max(n0, n1);\n      while ((i += dt) < 1) distances.push(i);\n      distances.push(1);\n\n      // Compute point-interpolators at each distance.\n      var points = distances.map(function(t) {\n        var p0 = path0.getPointAtLength(t * n0),\n            p1 = path1.getPointAtLength(t * n1);\n        return d3.interpolate([p0.x, p0.y], [p1.x, p1.y]);\n      });\n\n      return function(t) {\n        return t < 1 ? \"M\" + points.map(function(p) { return p(t); }).join(\"L\") : d1;\n      };\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/plot/plot.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n}\\n\\ndiv.slider-group {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  padding: 5px;\\n  border-radius: 5px;\\n}\\n\\ndiv.slider-group .label span {\\n  font-weight: bold;\\n}\\n\\ndiv.slider-group .slider,\\ndiv.slider-group .number {\\n  padding-top: 2ex;\\n}\\ndiv.slider-group .add-remove {\\n  padding-top: 2.3ex;\\n}\\n\\ndiv.slider-group div.inputs input {\\n  width: 100%;\\n}\\n\\ndiv.slider-group div.slider {\\n  position: relative;\\n  padding-left: 0;\\n  padding-right: 0;\\n}\\n\\ndiv.slider-group div.slider input {\\n  display: block;\\n}\\n\\ndiv.slider-group div.slider div.min,\\ndiv.slider-group div.slider div.max {\\n  position: absolute;\\n  font-size: x-small;\\n  top: 0;\\n  background-color: #ddd;\\n  border-radius: 1ex;\\n  padding: 0.5ex;\\n}\\n\\ndiv.slider-group.output div.slider div.min,\\ndiv.slider-group.output div.slider div.max {\\n  background-color: #ccc;\\n}\\n\\ndiv.slider-group div.slider div.min {\\n  left: 0;\\n}\\n\\ndiv.slider-group div.slider div.max {\\n  right: 0;\\n}\\n\\n.fa {\\n  opacity: 0.7;\\n}\\n.fa:hover {\\n  opacity: 1;\\n}\\n\\n.palette-color .fa {\\n  opacity: 1;\\n}\\n\\nspan.error {\\n  color: red;\\n}\\n\\ninput.error {\\n  border: 2px solid red;\\n  color: red;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/range-slider/range-slider.component.css\n// module id = ../../../../../src/app/t-test/range-slider/range-slider.component.css\n// module chunks = main","module.exports = \"<div class=\\\"slider-group\\\">\\n  <ng-template [ngIf]=\\\"labelTpl\\\" [ngIfElse]=\\\"standardLabel\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"labelTpl\\\"></ng-template>\\n  </ng-template>\\n  <ng-template #standardLabel>\\n    <div class=\\\"label\\\" *ngIf=\\\"label\\\">\\n      {{label}}\\n      <span *ngIf=\\\"isOutput\\\">(Computed value)</span>\\n      <ng-template [ngIf]=\\\"helpTpl\\\">\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"rsHelp\\\" popoverTitle=\\\"{{label}}\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        <ng-template #rsHelp>\\n          <ng-template [ngTemplateOutlet]=\\\"helpTpl\\\"></ng-template>\\n        </ng-template>\\n      </ng-template>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"inputs row\\\">\\n    <div class=\\\"col-sm-9\\\">\\n      <div class=\\\"slider\\\">\\n        <div class=\\\"min\\\">{{floor(min)}}</div>\\n        <input #range name=\\\"{{name}}\\\" type=\\\"range\\\" step=\\\"{{step}}\\\"\\n               min=\\\"{{min}}\\\" max=\\\"{{max}}\\\"\\n               [value]=\\\"value\\\"\\n               [disabled]=\\\"isOutput\\\"\\n               (change)=\\\"rangeChanged(range.value)\\\"\\n               (input)=\\\"rangeInput(range.value)\\\" />\\n        <div class=\\\"max\\\">{{ceil(max)}}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"number\\\">\\n        <input #number [class.error]=\\\"hasError\\\" name=\\\"{{name}}\\\" type=\\\"number\\\"\\n               step=\\\"{{step}}\\\" [min]=\\\"hardMin\\\" [max]=\\\"hardMax\\\" [value]=\\\"value\\\"\\n               [disabled]=\\\"isOutput\\\"\\n               (change)=\\\"numberChanged(number.value)\\\"\\n               (input)=\\\"numberInput(number.value)\\\"\\n               (blur)=\\\"blurred()\\\"\\n               [ngbPopover]=\\\"errorMsg\\\" triggers=\\\"manual\\\"\\n               container=\\\"body\\\" #errorPopover=\\\"ngbPopover\\\" />\\n        <ng-template #errorMsg>\\n          <span class=\\\"error\\\">Value is out of range ({{hardMin}}, {{hardMax}}).</span><br/>\\n          Current value: {{value}}\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/range-slider/range-slider.component.html\n// module id = ../../../../../src/app/t-test/range-slider/range-slider.component.html\n// module chunks = main","import { Component, Directive, Input, Output, ContentChild, ViewChild, TemplateRef, ElementRef, EventEmitter, OnInit, OnChanges, SimpleChanges, AfterContentInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\n\n@Directive({selector: 'ng-template[rsLabel]'})\nexport class RangeSliderLabel {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({selector: 'ng-template[rsHelp]'})\nexport class RangeSliderHelp {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Component({\n  selector: 't-test-range-slider',\n  templateUrl: './range-slider.component.html',\n  styleUrls: ['./range-slider.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RangeSliderComponent),\n      multi: true\n    }\n  ]\n})\nexport class RangeSliderComponent implements OnInit, OnChanges, AfterContentInit, ControlValueAccessor {\n  @Input() label: string;\n  @Input() name: string;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step = 0.01;\n  @Input('hard-min') hardMin: number;\n  @Input('hard-max') hardMax: number;\n  @Input('is-output') isOutput = false;\n  @Input('help-tpl') helpTpl: TemplateRef<any>;\n  @Input('label-tpl') labelTpl: TemplateRef<any>;\n  value: number;\n  hasError = false;\n  private changeCallback: any;\n  private inputSubject: Subject<string> = new Subject();\n  private dirty = false;\n\n  @ContentChild(RangeSliderLabel) rsLabelTpl: RangeSliderLabel;\n  @ContentChild(RangeSliderHelp) rsHelpTpl: RangeSliderHelp;\n  @ViewChild(\"errorPopover\") errorPopover: NgbPopover;\n  @ViewChild(\"number\") numberElement: ElementRef;\n  @ViewChild(\"range\") rangeElement: ElementRef;\n\n  ngOnInit(): void {\n    this.inputSubject.\n      debounceTime(400).\n      filter(value => {\n        // skip values when not dirty\n        return this.dirty;\n      }).\n      subscribe(value => {\n        this.trySetValue(value);\n      });\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.helpTpl && this.rsHelpTpl) {\n      this.helpTpl = this.rsHelpTpl.templateRef;\n    }\n    if (!this.labelTpl && this.rsLabelTpl) {\n      this.labelTpl = this.rsLabelTpl.templateRef;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('isOutput' in changes) {\n      let change = changes.isOutput;\n      if (change.previousValue === true && change.currentValue === false) {\n        // if isOutput changes from true to false, turn on the error message if\n        // the value is out of bounds\n        if (this.value < this.hardMin || this.value > this.hardMax) {\n          this.hasError = true;\n          this.errorPopover.open();\n        }\n      } else if (change.previousValue === false && change.currentValue === true) {\n        this.hasError = false;\n        this.errorPopover.close();\n      }\n    }\n  }\n\n  floor(n: number): number {\n    return Math.floor(n);\n  }\n\n  ceil(n: number): number {\n    return Math.ceil(n);\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.changeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n  }\n\n  rangeChanged(newValue: string): void {\n    this.trySetValue(newValue);\n  }\n\n  rangeInput(newValue: string): void {\n    this.dirty = true;\n    this.numberElement.nativeElement.value = newValue;\n    this.inputSubject.next(newValue);\n  }\n\n  numberChanged(newValue: string): void {\n    this.trySetValue(newValue);\n  }\n\n  numberInput(newValue: string): void {\n    this.dirty = true;\n    this.rangeElement.nativeElement.value = newValue;\n    this.inputSubject.next(newValue);\n  }\n\n  blurred(): void {\n    if (this.hasError) {\n      this.numberElement.nativeElement.value = this.value;\n      this.hasError = false;\n      this.errorPopover.close();\n    }\n  }\n\n  private trySetValue(newValue: string): void {\n    let value = parseFloat(newValue);\n    if (value < this.hardMin || value > this.hardMax) {\n      this.hasError = true;\n      this.errorPopover.open();\n    } else {\n      this.hasError = false;\n      this.errorPopover.close();\n      this.value = value;\n      this.propagateChange();\n    }\n    this.dirty = false;\n  }\n\n  private propagateChange(): void {\n    if (this.changeCallback) {\n      this.changeCallback(this.value);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/range-slider/range-slider.component.ts","import { ChangeEmitter, Changeable } from './changeable';\n\nexport class Range extends ChangeEmitter {\n  @Changeable min: number;\n  @Changeable max: number;\n\n  static fromArray(arr: number[]) {\n    if (arr.length != 2) {\n      throw new Error(\"invalid array, must be of length 2\");\n    }\n    if (arr[0] > arr[1]) {\n      throw new Error(\"invalid array, must be in order\");\n    }\n    return new Range(arr[0], arr[1]);\n  }\n\n  static fromData(indices: number[], data: any[], propertyName: string) {\n    let minIndex = 0, maxIndex = data.length - 1;\n    if (indices[0] > minIndex) {\n      minIndex = indices[0];\n    }\n    if (indices[1] < maxIndex) {\n      maxIndex = indices[1];\n    }\n    let values = [\n      data[minIndex][propertyName],\n      data[maxIndex][propertyName]\n    ].sort((a, b) => a - b);\n    values[0] = Math.floor(values[0] * 100) / 100;\n    values[1] = Math.ceil(values[1] * 100) / 100;\n    return new Range(values[0], values[1]);\n  }\n\n  constructor(min: number, max: number) {\n    super();\n    this.noEmit = true;\n    this.min = min;\n    this.max = max;\n    this.noEmit = false;\n    this.changes = {};\n  }\n\n  toArray(): any {\n    return([ this.min, this.max ]);\n  }\n\n  findIndices(data: number[], propertyName: string): number[] {\n    let minIndex = -1, maxIndex = -1;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i][propertyName] >= this.min) {\n        minIndex = i;\n        break\n      }\n    }\n    for (let i = data.length - 1; i >= 0; i--) {\n      if (data[i][propertyName] <= this.max) {\n        maxIndex = i;\n        break;\n      }\n    }\n    return [minIndex, maxIndex];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/range.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'round'\n})\nexport class RoundPipe implements PipeTransform {\n\n  transform(value: number, digits = 2): number {\n    let amount = 10 ** digits;\n    return Math.round(value * amount) / amount;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/round.pipe.ts","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { AbstractPlotComponent } from './abstract-plot.component';\n\n@Component({\n  selector: 't-test-serialize-plot',\n  template: '<canvas #canvas style=\"display: none\"></canvas>'\n})\nexport class SerializePlotComponent {\n  @Input('plot') plot: AbstractPlotComponent;\n  @Input() width: number;\n  @Input() height: number;\n\n  @ViewChild('canvas') canvasElement: ElementRef;\n\n  plotTitle(): string {\n    return this.plot.title;\n  }\n\n  serializeAsXML(): string {\n    let serializer = new XMLSerializer();\n    return serializer.serializeToString(this.plot.plotElement.nativeElement);\n  }\n\n  serialize(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let data = this.serializeAsXML();\n\n      let canvas = this.canvasElement.nativeElement;\n      canvas.width = this.width;\n      canvas.height = this.height;\n\n      let context = canvas.getContext(\"2d\");\n      let image = new Image(this.width, this.height);\n      image.addEventListener('load', () => {\n        context.clearRect(0, 0, this.width, this.height);\n        context.drawImage(image, 0, 0, this.width, this.height);\n\n        canvas.toBlob(function(blob) {\n          resolve(blob);\n        });\n      });\n\n      let src = 'data:image/svg+xml;base64,' + btoa(data);\n      image.src = src;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/serialize-plot.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".overview {\\n  text-align: right;\\n}\\n\\n.btn-secondary {\\n  padding: 0.3rem 0.3rem;\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/start/start.component.css\n// module id = ../../../../../src/app/t-test/start/start.component.css\n// module chunks = main","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #startForm=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"output\\\">\\n      What do you want to know?\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary fa fa-question-circle\\\"\\n        (click)=\\\"toggleHelp()\\\"></button>\\n    </label>\\n    <select class=\\\"form-control\\\" id=\\\"output\\\"\\n            required\\n            [(ngModel)]=\\\"model.output\\\" name=\\\"output\\\">\\n      <option></option>\\n      <option value=\\\"n\\\">Sample size by Power</option>\\n      <option value=\\\"nByCI\\\">Sample size by 95% CI</option>\\n      <option value=\\\"power\\\">Power</option>\\n      <option value=\\\"delta\\\">Detectable alternative</option>\\n    </select>\\n  </div>\\n  <!--\\n  <div class=\\\"form-group\\\" *ngIf=\\\"model.output\\\">\\n    <label for=\\\"design\\\">Paired or independent?</label>\\n    <select class=\\\"form-control\\\" id=\\\"design\\\"\\n            required\\n            [(ngModel)]=\\\"model.design\\\" name=\\\"design\\\">\\n      <option></option>\\n      <option>Paired</option>\\n      <option>Independent</option>\\n    </select>\\n  </div>\\n  -->\\n  <div *ngIf=\\\"model.output\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"alpha\\\">\\n        Type I Error (&alpha;)\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"alphaHelp\\\" popoverTitle=\\\"Type I Error (&alpha;)\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </label>\\n      <input class=\\\"form-control\\\" id=\\\"alpha\\\"\\n             type=\\\"number\\\" step=\\\"0.01\\\" min=\\\"0.01\\\" max=\\\"0.99\\\"\\n             required\\n             [(ngModel)]=\\\"model.alpha\\\" name=\\\"alpha\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"sigma\\\">\\n        Standard deviation (&sigma;)\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"sigmaHelp\\\" popoverTitle=\\\"Standard deviation (&sigma;)\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </label>\\n      <input class=\\\"form-control\\\" id=\\\"sigma\\\"\\n             type=\\\"number\\\" step=\\\"0.1\\\" min=\\\"0.1\\\"\\n             required\\n             [(ngModel)]=\\\"model.sigma\\\" name=\\\"sigma\\\">\\n    </div>\\n    <div *ngIf=\\\"needDelta()\\\" class=\\\"form-group\\\">\\n      <label for=\\\"delta\\\">Difference in population means (&delta;)</label>\\n      <input class=\\\"form-control\\\" id=\\\"delta\\\"\\n             type=\\\"number\\\" step=\\\"0.1\\\"\\n             required\\n             [(ngModel)]=\\\"model.delta\\\" name=\\\"delta\\\">\\n    </div>\\n    <div *ngIf=\\\"needPower()\\\" class=\\\"form-group\\\">\\n      <label for=\\\"power\\\">\\n        Power\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"powerHelp\\\" popoverTitle=\\\"Power\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </label>\\n      <input class=\\\"form-control\\\" id=\\\"power\\\"\\n             type=\\\"number\\\" step=\\\"0.01\\\" min=\\\"0.01\\\" max=\\\"0.99\\\"\\n             required\\n             [(ngModel)]=\\\"model.power\\\" name=\\\"power\\\">\\n    </div>\\n    <div *ngIf=\\\"needCI()\\\" class=\\\"form-group\\\">\\n      <label for=\\\"ci\\\">95% confidence interval width</label>\\n      <input class=\\\"form-control\\\" id=\\\"ci\\\" type=\\\"number\\\" required\\n             [(ngModel)]=\\\"model.ci\\\" name=\\\"ci\\\">\\n    </div>\\n    <ng-template [ngIf]=\\\"needNOrCI()\\\">\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"ciMode\\\" id=\\\"ciMode-false\\\"\\n                 [(ngModel)]=\\\"model.ciMode\\\" [value]=\\\"false\\\">\\n          Sample size\\n          <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n            [ngbPopover]=\\\"nHelp\\\" popoverTitle=\\\"Sample size\\\"\\n            placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </label>\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"ciMode\\\" id=\\\"ciMode-true\\\"\\n                 [(ngModel)]=\\\"model.ciMode\\\" [value]=\\\"true\\\">\\n          95% confidence interval width\\n        </label>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input *ngIf=\\\"!model.ciMode\\\"\\n               class=\\\"form-control\\\" id=\\\"n\\\"\\n               type=\\\"number\\\" min=\\\"1\\\"\\n               required\\n               [(ngModel)]=\\\"model.n\\\" name=\\\"n\\\">\\n        <input *ngIf=\\\"model.ciMode\\\"\\n               class=\\\"form-control\\\" id=\\\"ci\\\"\\n               type=\\\"number\\\" min=\\\"1\\\" step=\\\"0.1\\\"\\n               required\\n               [(ngModel)]=\\\"model.ci\\\" name=\\\"ci\\\">\\n      </div>\\n\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"needPowerOrDelta()\\\">\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"deltaMode\\\" id=\\\"deltaMode-false\\\"\\n                 [(ngModel)]=\\\"model.deltaMode\\\" [value]=\\\"false\\\">\\n          Power\\n          <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n            [ngbPopover]=\\\"powerHelp\\\" popoverTitle=\\\"Power\\\"\\n            placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </label>\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"deltaMode\\\" id=\\\"deltaMode-true\\\"\\n                 [(ngModel)]=\\\"model.deltaMode\\\" [value]=\\\"true\\\">\\n          Difference in population means (&delta;)\\n        </label>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input *ngIf=\\\"!model.deltaMode\\\"\\n               class=\\\"form-control\\\" id=\\\"power\\\"\\n               type=\\\"number\\\" step=\\\"0.01\\\" min=\\\"0.01\\\" max=\\\"0.99\\\"\\n               required\\n               [(ngModel)]=\\\"model.power\\\" name=\\\"power\\\">\\n        <input *ngIf=\\\"model.deltaMode\\\"\\n               class=\\\"form-control\\\" id=\\\"delta\\\"\\n               type=\\\"number\\\" step=\\\"0.1\\\"\\n               required\\n               [(ngModel)]=\\\"model.delta\\\" name=\\\"delta\\\">\\n      </div>\\n\\n    </ng-template>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"\\n            [disabled]=\\\"!startForm.form.valid\\\">\\n      Calculate\\n    </button>\\n  </div>\\n</form>\\n<ng-template #alphaHelp>\\n  The Type I error probability for a two sided test. This is the\\n  probability that we will falsely reject the null hypothesis.\\n</ng-template>\\n<ng-template #sigmaHelp>\\n  For independent tests σ is the within group standard deviation. For\\n  paired designs it is the standard deviation of difference in the\\n  response of matched pairs.\\n</ng-template>\\n<ng-template #powerHelp>\\n  For independent tests power is probability of correctly rejecting the null\\n  hypothesis of equal population means given n experimental patients, m control\\n  patients per experimental patient, a Type I error probability α and a true\\n  difference in population means of δ. For paired tests it is the probability\\n  of correctly rejecting the null hypothesis of equal population means given n\\n  pairs of patients, a Type I error probability α and a true difference in\\n  population means of δ.\\n</ng-template>\\n<ng-template #nHelp>\\n  For independent t-tests n is the number of experimental subjects. For\\n  pair test n is the number of pairs.\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/start/start.component.html\n// module id = ../../../../../src/app/t-test/start/start.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TTest } from '../t-test';\n\n@Component({\n  selector: 't-test-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent {\n  @Input() model: TTest;\n  @Output() onCalculate = new EventEmitter();\n  @Output() onToggleHelp = new EventEmitter();\n\n  constructor() {}\n\n  toggleHelp(): void {\n    this.onToggleHelp.emit();\n  }\n\n  needDelta(): boolean {\n    return this.model.output !== 'delta' && this.model.output !== 'nByCI';\n  }\n\n  needPower(): boolean {\n    return this.model.output !== 'power' && this.model.output !== 'nByCI';\n  }\n\n  needPowerOrDelta(): boolean {\n    return this.model.output === 'nByCI';\n  }\n\n  needCI(): boolean {\n    return this.model.output === 'nByCI';\n  }\n\n  needNOrCI(): boolean {\n    return this.model.output !== 'n' && this.model.output !== 'nByCI';\n  }\n\n  onSubmit(): void {\n    this.onCalculate.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/start/start.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n\\n#t-test {\\n}\\n\\n#t-test-main {\\n  /*min-height: 85vh;*/\\n}\\n\\n#t-test-sidebar {\\n  background-color: #e5e5e5;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  padding: 10px;\\n  /*margin: 10px;*/\\n  position: relative;\\n}\\n\\n#t-test-sidebar .overview {\\n  position: absolute;\\n  top: 5px;\\n  right: 5px;\\n}\\n\\n.plot-buttons {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  font-size: large;\\n  z-index: 99;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 auto;\\n          flex: 0 0 auto;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n.plot-buttons button {\\n  padding: 0.4rem 0;\\n  margin: 0.2rem 0;\\n  width: 2.4rem;\\n}\\n\\n#t-test-sidebar /deep/ a.nav-link {\\n  border-color: #bbb #bbb #888;\\n  background-color: #eee;\\n}\\n\\n#t-test-sidebar /deep/ a.nav-link:hover {\\n  border-color: #888;\\n  background-color: #f5f5f5;\\n  color: #0275d8;\\n}\\n\\n#t-test-sidebar /deep/ a.nav-link.active {\\n  border-color: #888 #888 #fff;\\n  background-color: #fff;\\n}\\n\\n#t-test-sidebar /deep/ a.nav-link.active:hover {\\n  color: #464a4c;\\n}\\n\\n#t-test-sidebar /deep/ ngb-tabset {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: auto;\\n          flex: auto;\\n  /*width: 100%;*/\\n}\\n\\n#t-test-sidebar /deep/ ul.nav-tabs {\\n  /*display: flex;*/\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 auto;\\n          flex: 0 0 auto;\\n  border-bottom: 1px solid #888;\\n}\\n\\n#t-test-sidebar /deep/ .tab-content {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 0 auto;\\n          flex: 1 0 auto;\\n}\\n\\n#t-test-sidebar /deep/ .tab-pane {\\n  /*display: flex;*/\\n  /*flex-direction: column;*/\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 0 auto;\\n          flex: 1 0 auto;\\n  padding: 10px;\\n  border: 1px solid #888;\\n  border-top: 0;\\n  overflow: auto;\\n  max-height: 73vh;\\n}\\n\\n#t-test-sidebar /deep/ .tab-pane.active {\\n  background: white;\\n}\\n\\n#t-test-footer {\\n  margin: 20px 0;\\n  padding: 20px;\\n  text-align: center;\\n}\\n#t-test-footer img {\\n  margin: auto;\\n  display: block;\\n}\\n#t-test-footer div.text {\\n  margin-top: 10px;\\n}\\n\\n.block-selection * {\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.component.css\n// module id = ../../../../../src/app/t-test/t-test.component.css\n// module chunks = main","module.exports = \"<div id=\\\"t-test\\\" class=\\\"d-flex flex-column h-100\\\"\\n  [class.block-selection]=\\\"blockSelection\\\" (mouseup)=\\\"mouseup()\\\">\\n\\n  <div id=\\\"t-test-main\\\" class=\\\"row d-flex\\\" style=\\\"flex: 1 0 auto\\\">\\n    <div class=\\\"col-4 d-flex flex-column justify-content-between\\\">\\n      <div id=\\\"t-test-sidebar\\\" class=\\\"d-flex flex-row\\\" style=\\\"flex: auto\\\">\\n        <div class=\\\"overview\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"toggleHelp('overview')\\\">\\n            Overview <i class=\\\"fa fa-question-circle\\\"></i>\\n          </button>\\n        </div>\\n        <ngb-tabset #tabset (tabChange)=\\\"onTabChange($event)\\\">\\n          <ngb-tab title=\\\"Start\\\" id=\\\"t-test-start\\\">\\n            <ng-template ngbTabContent>\\n              <t-test-start [model]=\\\"newModel\\\"\\n                (onCalculate)=\\\"calculate()\\\"\\n                (onToggleHelp)=\\\"toggleHelp('start')\\\">\\n              </t-test-start>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab *ngFor=\\\"let modelSet of modelSets; let i = index\\\"\\n            title=\\\"Test {{i+1}}\\\" id=\\\"t-test-{{i+1}}\\\">\\n            <ng-template ngbTabContent>\\n              <t-test-form [model-set]=\\\"modelSet\\\"></t-test-form>\\n            </ng-template>\\n          </ngb-tab>\\n        </ngb-tabset>\\n      </div>\\n\\n      <div id=\\\"t-test-footer\\\" class=\\\"d-flex\\\">\\n        <img src=\\\"assets/vumc.jpg\\\">\\n        <div class=\\\"text\\\">Department of Biostatistics</div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <div class=\\\"plot-buttons\\\" *ngIf=\\\"selectedModelSet\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"togglePlotOptions()\\\">\\n          <i class=\\\"fa fa-cog\\\"></i>\\n        </button>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"save()\\\">\\n          <i class=\\\"fa fa-floppy-o\\\"></i>\\n        </button>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"toggleHoverBox()\\\">\\n          <i class=\\\"fa\\\" [class.fa-cubes]=\\\"hoverBoxEnabled\\\" [class.fa-cube]=\\\"!hoverBoxEnabled\\\"></i>\\n        </button>\\n      </div>\\n      <t-test-output-pane #outputPane\\n        [model-set]=\\\"selectedModelSet\\\"\\n        [hover-disabled]=\\\"!hoverBoxEnabled\\\">\\n      </t-test-output-pane>\\n    </div>\\n  </div>\\n  <t-test-draggable-dialog #helpDialog\\n    [title]=\\\"helpTitles[helpTopic]\\\"\\n    start-x-offset=\\\"33%\\\" start-y-offset=\\\"55px\\\"\\n    (drag-start)=\\\"childDragStarted()\\\"\\n    (drag-end)=\\\"childDragEnded()\\\">\\n    <t-test-help [topic]=\\\"helpTopic\\\"></t-test-help>\\n  </t-test-draggable-dialog>\\n  <t-test-draggable-dialog #plotOptionsDialog\\n    title=\\\"Plot options\\\"\\n    start-x-offset=\\\"5%\\\" start-y-offset=\\\"55px\\\"\\n    (drag-start)=\\\"childDragStarted()\\\"\\n    (drag-end)=\\\"childDragEnded()\\\">\\n    <t-test-plot-options [model-set]=\\\"selectedModelSet\\\">\\n    </t-test-plot-options>\\n  </t-test-draggable-dialog>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.component.html\n// module id = ../../../../../src/app/t-test/t-test.component.html\n// module chunks = main","import { Component, ViewChild, HostListener, OnInit, AfterViewInit } from '@angular/core';\nimport { NgbTabset, NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switch';\n\nimport { TTest, TTestRanges, TTestData, TTestSet } from './t-test';\nimport { TTestService } from './t-test.service';\n\nimport { DraggableDialogComponent } from './draggable-dialog/draggable-dialog.component'\nimport { OutputPaneComponent } from './output-pane/output-pane.component'\n\n@Component({\n  selector: 't-test-root',\n  templateUrl: './t-test.component.html',\n  styleUrls: ['./t-test.component.css']\n})\nexport class TTestComponent implements OnInit {\n  newModel = new TTest();\n  modelSets: TTestSet[] = [];\n  selectedModelSet: TTestSet;\n\n  helpTitles = {\n    'overview': 'PS Overview',\n    'start': 'PS Start Tab'\n  };\n  helpTopic = 'overview';\n  blockSelection = false;\n  hoverBoxEnabled = true;\n\n  @ViewChild('plotOptionsDialog') plotOptionsDialog: DraggableDialogComponent;\n  @ViewChild('helpDialog') helpDialog: DraggableDialogComponent;\n  @ViewChild('tabset') tabset: NgbTabset;\n  @ViewChild('outputPane') outputPane: OutputPaneComponent;\n\n  constructor(private service: TTestService) {}\n\n  ngOnInit(): void {\n    let model = new TTest({\n      output: 'n', alpha: 0.05, power: 0.8, delta: 5, sigma: 10, n: 32\n    });\n    this.addModel(model, false);\n  }\n\n  toggleHelp(topic: string): void {\n    if (this.helpDialog.isOpen() && this.helpTopic == topic) {\n      this.helpDialog.close();\n    } else {\n      this.helpTopic = topic;\n      this.helpDialog.open();\n    }\n  }\n\n  togglePlotOptions(): void {\n    this.plotOptionsDialog.toggle();\n  }\n\n  toggleHoverBox(): void {\n    this.hoverBoxEnabled = !this.hoverBoxEnabled;\n  }\n\n  save(): void {\n    this.outputPane.openSaveDialog();\n  }\n\n  calculate(): void {\n    this.addModel(this.newModel);\n  }\n\n  onTabChange(event: NgbTabChangeEvent): void {\n    let md = event.nextId.match(/\\d+/);\n    if (md) {\n      let index = parseInt(md[0]) - 1;\n      this.selectedModelSet = this.modelSets[index];\n    } else {\n      this.selectedModelSet = undefined;\n    }\n  }\n\n  addModel(model: TTest, select = true): void {\n    this.service.create(model).\n      then(result => {\n        let model = new TTest(result.model);\n        let data = result.data as TTestData;\n        let modelSet = new TTestSet();\n        modelSet.add(model, data);\n        this.modelSets.push(modelSet);\n\n        if (select) {\n          setTimeout(() => {\n            this.tabset.select(`t-test-${this.modelSets.length}`);\n          }, 1);\n        }\n      }).\n      catch(err => console.error(err));\n  }\n\n  mouseup(): void {\n    this.plotOptionsDialog.stopDragging();\n  }\n\n  childDragStarted(): void {\n    this.blockSelection = true;\n  }\n\n  childDragEnded(): void {\n    this.blockSelection = false;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event): void {\n    this.outputPane.resize();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TTestService } from './t-test.service';\nimport { PlotOptionsService } from './plot-options.service';\nimport { PaletteService } from './palette.service';\n\nimport { TTestComponent } from './t-test.component';\nimport { StartComponent } from './start/start.component';\nimport { RangeSliderComponent, RangeSliderLabel, RangeSliderHelp } from './range-slider/range-slider.component';\nimport { FormComponent } from './form/form.component';\nimport { OutputPaneComponent } from './output-pane/output-pane.component';\nimport { HelpComponent } from './help/help.component';\nimport { PlotOptionsComponent } from './plot-options/plot-options.component';\nimport { PlotComponent } from './plot/plot.component';\nimport { BottomPlotComponent } from './bottom-plot/bottom-plot.component';\nimport { SerializePlotComponent } from './serialize-plot.component';\nimport { ExportPlotsComponent } from './export-plots/export-plots.component';\nimport { DraggableDialogComponent } from './draggable-dialog/draggable-dialog.component';\n\nimport { RoundPipe } from './round.pipe';\nimport { CeilPipe } from './ceil.pipe';\n\nconst routes: Routes = [\n  { path: 't-test', component: TTestComponent },\n];\n\n@NgModule({\n  declarations: [\n    TTestComponent,\n    StartComponent,\n    RangeSliderComponent,\n    RangeSliderLabel,\n    RangeSliderHelp,\n    FormComponent,\n    OutputPaneComponent,\n    HelpComponent,\n    PlotOptionsComponent,\n    PlotComponent,\n    BottomPlotComponent,\n    SerializePlotComponent,\n    ExportPlotsComponent,\n    DraggableDialogComponent,\n    RoundPipe,\n    CeilPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule,\n    NgbModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [\n    TTestService,\n    PlotOptionsService,\n    PaletteService\n  ],\n  entryComponents: [\n    ExportPlotsComponent\n  ]\n})\nexport class TTestModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.module.ts","import { Injectable } from '@angular/core';\nimport {\n  Headers,\n  RequestOptions,\n  Http,\n  ResponseContentType\n} from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\nimport { TTest, TTestRanges, TTestSet } from './t-test';\n\n@Injectable()\nexport class TTestService {\n  private apiUrl = `${environment.apiUrl}/ttests`;\n  private stateless = environment.stateless;\n\n  constructor(private http: Http) { }\n\n  create(model: TTest): Promise<any> {\n    let url;\n    if (this.stateless) {\n      url = `${this.apiUrl}/calc`;\n    } else {\n      url = this.apiUrl;\n    }\n    let params = { model: model.attributes() };\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.\n      post(url, JSON.stringify(params), options).\n      toPromise().\n      then(response => response.json()).\n      catch(this.handleError);\n  }\n\n  update(model: TTest): Promise<any> {\n    if (this.stateless) {\n      return this.create(model);\n    }\n\n    if (!model.id) {\n      throw new Error(\"model has no id\");\n    }\n\n    let url = `${this.apiUrl}/${model.id}`;\n    let params = { model: model.attributes() };\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let options = new RequestOptions({ headers: headers });\n    return this.http.\n      put(url, JSON.stringify(params), options).\n      toPromise().\n      then(response => response.json()).\n      catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.service.ts","import { EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ChangeEmitter, Changeable } from './changeable';\nimport { Range } from './range';\n\nexport class TTest extends ChangeEmitter {\n  @Changeable id?: string;\n  @Changeable output: string;\n  @Changeable design?: string;\n  @Changeable alpha: number;\n  @Changeable sigma: number;\n  @Changeable delta: number;\n  @Changeable power: number;\n  @Changeable n: number;\n  @Changeable ci: number;\n  ciMode = false;\n  deltaMode = false;\n\n  constructor(attribs?: any) {\n    super();\n\n    if (attribs) {\n      this.update(attribs, false);\n    }\n  }\n\n  update(attribs: any, emit = true, eventAttribs: any = {}): any {\n    this.noEmit = true;\n    if (attribs.id !== undefined) {\n      this.id = attribs.id;\n    }\n    if (attribs.output !== undefined) {\n      this.output = attribs.output;\n    }\n    if (attribs.design !== undefined) {\n      this.design = attribs.design;\n    }\n    if (attribs.alpha !== undefined) {\n      this.alpha = attribs.alpha;\n    }\n    if (attribs.sigma !== undefined) {\n      this.sigma = attribs.sigma;\n    }\n    if (attribs.delta !== undefined) {\n      this.delta = attribs.delta;\n    }\n    if (attribs.power !== undefined) {\n      this.power = attribs.power;\n    }\n    if (attribs.n !== undefined) {\n      this.n = attribs.n;\n    }\n    if (attribs.ci !== undefined) {\n      this.ci = attribs.ci;\n    }\n    if (attribs.ciMode !== undefined) {\n      this.ciMode = attribs.ciMode;\n    }\n    if (attribs.deltaMode !== undefined) {\n      this.deltaMode = attribs.deltaMode;\n    }\n    this.noEmit = false;\n\n    let changes = this.changes;\n    if (emit) {\n      this.emit(eventAttribs);\n    } else {\n      this.changes = {};\n    }\n    return changes;\n  }\n\n  roundUpdate(attribs: any, emit = true): void {\n    attribs = Object.assign({}, attribs);\n    if (attribs.alpha !== undefined) {\n      attribs.alpha = Math.round(attribs.alpha * 100) / 100;\n    }\n    if (attribs.sigma !== undefined) {\n      attribs.sigma = Math.round(attribs.sigma * 100) / 100;\n    }\n    if (attribs.delta !== undefined) {\n      attribs.delta = Math.round(attribs.delta * 100) / 100;\n    }\n    if (attribs.power !== undefined) {\n      attribs.power = Math.round(attribs.power * 100) / 100;\n    }\n    if (attribs.n !== undefined) {\n      attribs.n = Math.ceil(attribs.n);\n    }\n    if (attribs.ci !== undefined) {\n      attribs.ci = Math.ceil(attribs.ci);\n    }\n    this.update(attribs, emit);\n  }\n\n  attributes(): any {\n    let result: any = {\n      output: this.output, alpha: this.alpha, sigma: this.sigma,\n      delta: this.delta, power: this.power, n: this.n, ci: this.ci,\n      ciMode: this.ciMode, deltaMode: this.deltaMode\n    };\n    if (this.id) {\n      result.id = this.id;\n    }\n    if (this.design) {\n      result.design = this.design;\n    }\n    return result;\n  }\n\n  round(): TTest {\n    let attribs = this.attributes();\n    attribs.alpha = Math.round(attribs.alpha * 100) / 100;\n    attribs.sigma = Math.round(attribs.sigma * 100) / 100;\n    attribs.delta = Math.round(attribs.delta * 100) / 100;\n    attribs.power = Math.round(attribs.power * 100) / 100;\n    attribs.n = Math.ceil(attribs.n);\n    return new TTest(attribs);\n  }\n\n  clone(): TTest {\n    return new TTest(this.attributes());\n  }\n}\n\nexport class TTestRanges extends ChangeEmitter {\n  @Changeable n: Range;\n  @Changeable power: Range;\n  @Changeable delta: Range;\n  @Changeable pSpace: Range;\n\n  private subscription = new Subscription();\n\n  static fromArrays(attribs: any): TTestRanges {\n    let result: any = {};\n    result.n = Range.fromArray(attribs.n);\n    result.power = Range.fromArray(attribs.power);\n    result.delta = Range.fromArray(attribs.delta);\n    result.pSpace = Range.fromArray(attribs.pSpace);\n    return new TTestRanges(result);\n  }\n\n  constructor(attribs?: any) {\n    super();\n    if (attribs) {\n      this.update(attribs, false);\n    }\n  }\n\n  update(ranges: any, emit = true): void {\n    this.subscription.unsubscribe();\n\n    this.noEmit = true;\n    if ('n' in ranges) {\n      this.n = ranges.n;\n    }\n    if ('power' in ranges) {\n      this.power = ranges.power;\n    }\n    if ('delta' in ranges) {\n      this.delta = ranges.delta;\n    }\n    if ('pSpace' in ranges) {\n      this.pSpace = ranges.pSpace;\n    }\n    this.noEmit = false;\n\n    this.subscribeToChildren();\n\n    if (emit) {\n      this.emit();\n    } else {\n      this.changes = {};\n    }\n  }\n\n  updateFromArrays(attribs: any) {\n    let result: any = {};\n    result.n = Range.fromArray(attribs.n);\n    result.power = Range.fromArray(attribs.power);\n    result.delta = Range.fromArray(attribs.delta);\n    result.pSpace = Range.fromArray(attribs.pSpace);\n    this.update(result);\n  }\n\n  attributes(): any {\n    let result: any = {};\n    result.n = this.n.toArray();\n    result.power = this.power.toArray();\n    result.delta = this.delta.toArray();\n    result.pSpace = this.pSpace.toArray();\n    return result;\n  }\n\n  private subscribeToChildren(): void {\n    this.subscription = new Subscription();\n    this.subscribeToChild(\"n\");\n    this.subscribeToChild(\"power\");\n    this.subscribeToChild(\"delta\");\n    this.subscribeToChild(\"pSpace\");\n  }\n\n  private subscribeToChild(name: string): void {\n    let child = this[name];\n    if (child) {\n      let sub = child.onChange.subscribe((childEvent: any) => {\n        let event: any = {};\n        for (var key in childEvent) {\n          if (key == 'changes') {\n            event.changes = { [name]: childEvent.changes };\n          } else {\n            event[key] = childEvent[key];\n          }\n        }\n        this.onChange.emit(event);\n      });\n      this.subscription.add(sub);\n    }\n  }\n}\n\nexport class TTestData {\n  primary:    { data: { n?: number, power?: number, delta?: number }[] };\n  secondary?: { data: { n?: number, power?: number, delta?: number }[] };\n  tertiary?:  {\n    data: { pSpace: number, sampDist: number }[],\n    range: number[], target: number\n  };\n}\n\nexport class TTestSet {\n  models: { model: TTest, data: TTestData }[] = [];\n  ranges: TTestRanges;\n  onChange = new EventEmitter();\n  onCompute = new EventEmitter();\n\n  private rangeSub: Subscription;\n\n  add(model: TTest, data: TTestData): number {\n    let index = this.models.length;\n    this.models.push({ model: model, data: data });\n\n    if (this.models.length == 1) {\n      let attribs = this.calcRangeAttributes(model, data);\n      this.ranges = new TTestRanges(attribs);\n      this.rangeSub = this.ranges.onChange.subscribe(value => {\n        this.onChange.emit({ ranges: value });\n      });\n    }\n    this.onChange.emit({ added: index });\n    return index;\n  }\n\n  getModel(index: number): TTest {\n    return this.models[index].model;\n  }\n\n  getData(index: number): TTestData {\n    return this.models[index].data;\n  }\n\n  update(index: number, modelChanges: any, data: TTestData, eventAttribs: any = {}, emit = true) {\n    let model = this.models[index].model;\n    this.models[index].data = data;\n\n    let prevChanges = model.prevChanges;\n    model.update(modelChanges, emit, eventAttribs);\n\n    if (index == 0) {\n      let skip;\n      let changeKeys = Object.keys(prevChanges);\n      if (changeKeys.length == 2 && model.output in prevChanges) {\n        skip = changeKeys.find(k => k != model.output);\n      }\n      let attribs = this.calcRangeAttributes(model, data, skip);\n      this.ranges.update(attribs, emit);\n    }\n\n    if (emit) {\n      this.onCompute.emit();\n    }\n  }\n\n  triggerCompute(): void {\n    this.onCompute.emit();\n  }\n\n  remove(index: number): void {\n    if (index == 0) {\n      throw new Error(\"can't remove first model\");\n    }\n    let m = this.models[index];\n    m.model.onChange.complete();\n    this.models.splice(index, 1);\n    this.onChange.emit({ removed: index });\n  }\n\n  extraModels(): TTest[] {\n    return this.models.slice(1).map(m => m.model);\n  }\n\n  reduceModels(initial: any, callback: Function): any {\n    return this.models.reduce((a, m, i) => {\n      return callback(a, m.model, i);\n    }, initial);\n  }\n\n  private calcRangeAttributes(model: TTest, data: TTestData, skip?: string): any {\n    let n, power, delta, pSpace, indices, values, min, max;\n    let deltaMax = 1.5 * model.sigma;\n    let primary = data.primary;\n    let tertiary = data.tertiary;\n    switch (model.output) {\n      case \"n\":\n      case \"nByCI\":\n        values  = [model.n * 0.5, model.n * 1.5].sort((a, b) => a - b);\n        min     = Math.floor(values[0] * 100) / 100;\n        max     = Math.ceil(values[1] * 100) / 100;\n        n       = new Range(min, max);\n        indices = n.findIndices(primary.data, 'n');\n        if (skip != 'power') {\n          power = Range.fromData(indices, primary.data, 'power');\n        }\n        if (skip != 'delta') {\n          delta = Range.fromData(indices, primary.data, 'delta');\n        }\n        break;\n\n      case \"power\":\n        power   = new Range(0, 1.0);\n        indices = power.findIndices(primary.data, 'power');\n        if (skip != 'n') {\n          n = Range.fromData(indices, primary.data, 'n');\n        }\n        if (skip != 'delta') {\n          delta = new Range(-deltaMax, deltaMax);\n        }\n        break;\n\n      case \"delta\":\n        values  = [model.delta * 0.5, model.delta * 1.5].sort((a, b) => a - b);\n        min     = Math.floor(values[0] * 100) / 100;\n        max     = Math.ceil(values[1] * 100) / 100;\n        delta   = new Range(min, max);\n        indices = delta.findIndices(primary.data, 'delta');\n        if (skip != 'n') {\n          n = Range.fromData(indices, primary.data, 'n');\n        }\n        if (skip != 'power') {\n          power = Range.fromData(indices, primary.data, 'power');\n        }\n        break;\n    }\n\n    // parameter space\n    min = -deltaMax;\n    max = deltaMax;\n    if (tertiary.range[0] < min) {\n      min = tertiary.range[0] - Math.abs(tertiary.range[0] * 0.5);\n    }\n    if (tertiary.range[1] > max) {\n      max = tertiary.range[1] + Math.abs(tertiary.range[1] * 0.5);\n    }\n    pSpace = new Range(min, max);\n\n    let attribs: any = { pSpace: pSpace };\n    if (n) attribs.n = n;\n    if (power) attribs.power = power;\n    if (delta) attribs.delta = delta;\n\n    return attribs;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/app/t-test/t-test.ts","export const environment = {\n  production: true,\n  apiUrl: \"/ps-backend\",\n  stateless: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/stephej1/Projects/ps/inst/angular/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}