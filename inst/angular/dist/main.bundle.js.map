{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/konami.directive.ts","./src/app/t-test/abstract-plot.component.ts","./src/app/t-test/bottom-plot/bottom-plot.component.css","./src/app/t-test/bottom-plot/bottom-plot.component.html","./src/app/t-test/bottom-plot/bottom-plot.component.ts","./src/app/t-test/ceil.pipe.ts","./src/app/t-test/draggable-dialog/draggable-dialog.component.css","./src/app/t-test/draggable-dialog/draggable-dialog.component.html","./src/app/t-test/draggable-dialog/draggable-dialog.component.ts","./src/app/t-test/export-plots/export-plots.component.css","./src/app/t-test/export-plots/export-plots.component.html","./src/app/t-test/export-plots/export-plots.component.ts","./src/app/t-test/export.service.ts","./src/app/t-test/format-fixed.pipe.ts","./src/app/t-test/help/help.component.css","./src/app/t-test/help/help.component.html","./src/app/t-test/help/help.component.ts","./src/app/t-test/output-pane/output-pane.component.css","./src/app/t-test/output-pane/output-pane.component.html","./src/app/t-test/output-pane/output-pane.component.ts","./src/app/t-test/palette.service.ts","./src/app/t-test/plot-options.service.ts","./src/app/t-test/plot-options/plot-options.component.css","./src/app/t-test/plot-options/plot-options.component.html","./src/app/t-test/plot-options/plot-options.component.ts","./src/app/t-test/plot/plot.component.css","./src/app/t-test/plot/plot.component.html","./src/app/t-test/plot/plot.component.ts","./src/app/t-test/project-factory.service.ts","./src/app/t-test/project-model/project-model.component.css","./src/app/t-test/project-model/project-model.component.html","./src/app/t-test/project-model/project-model.component.ts","./src/app/t-test/project.ts","./src/app/t-test/project/project.component.css","./src/app/t-test/project/project.component.html","./src/app/t-test/project/project.component.ts","./src/app/t-test/range-slider/range-slider.component.css","./src/app/t-test/range-slider/range-slider.component.html","./src/app/t-test/range-slider/range-slider.component.ts","./src/app/t-test/range.ts","./src/app/t-test/reverse.pipe.ts","./src/app/t-test/round.pipe.ts","./src/app/t-test/start/start.component.css","./src/app/t-test/start/start.component.html","./src/app/t-test/start/start.component.ts","./src/app/t-test/t-test.component.css","./src/app/t-test/t-test.component.html","./src/app/t-test/t-test.component.ts","./src/app/t-test/t-test.module.ts","./src/app/t-test/t-test.service.ts","./src/app/t-test/t-test.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#app {\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div id=\\\"app\\\" class=\\\"container-fluid d-flex flex-column h-100\\\"\\n  appKonami (konami)=\\\"konamiCode()\\\">\\n  <nav class=\\\"navbar d-flex flex-nowrap flex-row justify-content-between\\\" style=\\\"flex: 0 0 auto\\\">\\n    <div class=\\\"navbar-brand\\\">\\n      <img src=\\\"assets/ps.jpg\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\n      Power and Sample Size\\n    </div>\\n    <ul class=\\\"nav nav-pills\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" href=\\\"#\\\">t-test</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Survival</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Dichotomous</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Regression</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Mantel-Haenszel</a>\\n      </li>\\n    </ul>\\n  </nav>\\n\\n  <audio *ngIf=\\\"konami\\\" autoplay (ended)=\\\"audioEnded()\\\">\\n    <source src=\\\"assets/contra.mp3\\\" type=\\\"audio/mpeg\\\">\\n  </audio>\\n\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  konami = false;\n\n  ngOnInit(): void {\n  }\n\n  konamiCode(): void {\n    this.konami = true;\n  }\n\n  audioEnded(): void {\n    this.konami = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TTestModule } from './t-test/t-test.module';\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\nimport { KonamiDirective } from './konami.directive';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/t-test', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [ AppComponent, KonamiDirective ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    NgbModule.forRoot(),\n    TTestModule\n  ],\n  bootstrap: [ AppComponent ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: environment.baseHref }\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Directive, Input, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[appKonami]',\n  host: {\n    '(document:keydown)': 'onKeyDown($event)'\n  }\n})\nexport class KonamiDirective {\n  @Output() konami = new EventEmitter();\n  konamiKeys = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65];\n  keyIndex = 0;\n\n  constructor() { }\n\n  onKeyDown(event: any): void {\n    if (event.keyCode === this.konamiKeys[this.keyIndex]) {\n      this.keyIndex++;\n      if (this.keyIndex === this.konamiKeys.length) {\n        this.konami.emit();\n      }\n    } else {\n      this.keyIndex = 0;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/konami.directive.ts","import { Component, Input, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport * as d3 from 'd3';\n\nimport { PlotOptionsService } from './plot-options.service';\nimport { PaletteService } from './palette.service';\nimport { Range } from './range';\n\nexport enum Draw {\n  No,\n  Yes,\n  Hover\n}\n\nexport abstract class AbstractPlotComponent implements OnInit {\n  @Input() name: string;\n  @Input('fixed-width') fixedWidth: number;\n  @Input('fixed-height') fixedHeight: number;\n\n  title: string;\n  xScale: any;\n  yScale: any;\n  width: number;\n  height: number;\n  innerWidth: number;\n  innerHeight: number;\n  margin: number = 50;\n  unitLength: number = 20;\n\n  @ViewChild('plot') plotElement: ElementRef;\n  @ViewChild('unit') unitElement: ElementRef;\n\n  constructor(public plotOptions: PlotOptionsService, public palette: PaletteService) { }\n\n  ngOnInit() {\n    this.setup();\n  }\n\n  getDimension(key: string): number {\n    let dim = this.plotElement.nativeElement[key];\n    let result = 0;\n    if ('value' in dim) {\n      result = dim.value;\n    } else if ('baseVal' in dim) {\n      result = dim.baseVal.value;\n    } else {\n      throw new Error(`can't get ${key}`);\n    }\n    return result;\n  }\n\n  protected translate(x: number, y: number): string {\n    if (isNaN(x) || isNaN(y)) {\n      return null;\n    }\n    return `translate(${x}, ${y})`;\n  }\n\n  protected getPath(data: any[], xName = \"x\", yName = \"y\"): string {\n    let xScaleRange = this.xScale.domain().sort((a, b) => a - b);\n    let yScaleRange = this.yScale.domain().sort((a, b) => a - b);\n    let line = d3.line().\n      x((d, i) => this.xScale(d[xName])).\n      y((d, i) => this.yScale(d[yName])).\n      defined((d, i) => {\n        let x = d[xName];\n        let y = d[yName];\n        return typeof(x) === 'number' && typeof(y) == 'number' &&\n          x >= xScaleRange[0] && x <= xScaleRange[1] &&\n          y >= yScaleRange[0] && y <= yScaleRange[1];\n      });\n\n    return line(data);\n  }\n\n  protected setup(): void {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/abstract-plot.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".draggable {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/bottom-plot/bottom-plot.component.css\n// module id = ./src/app/t-test/bottom-plot/bottom-plot.component.css\n// module chunks = main","module.exports = \"<svg #plot\\n  [style.fontFamily]=\\\"plotOptions.fontFamily\\\"\\n  [style.fontSize]=\\\"(plotOptions.fontSize * 18).toString() + 'px'\\\"\\n  [attr.class]=\\\"name\\\" [attr.width]=\\\"fixedWidth\\\" [attr.height]=\\\"fixedHeight\\\"\\n  [attr.viewBox]=\\\"viewBox\\\">\\n\\n  <rect #unit x=\\\"0\\\" y=\\\"0\\\" width=\\\"1em\\\" height=\\\"1em\\\" stroke=\\\"none\\\" fill=\\\"none\\\" />\\n  <ng-template [ngIf]=\\\"groups && project\\\">\\n    <text text-anchor=\\\"middle\\\"\\n      [attr.x]=\\\"innerWidth / 2 + leftMargin\\\"\\n      [attr.y]=\\\"height - 5\\\">\\n      Parameter Space\\n    </text>\\n    <text text-anchor=\\\"middle\\\" font-weight=\\\"bold\\\"\\n      [attr.x]=\\\"innerWidth / 2 + leftMargin\\\"\\n      [attr.y]=\\\"(plotOptions.getFontSize() / 2) + 8\\\">\\n      {{title}}\\n    </text>\\n\\n    <circle r=\\\"5\\\" [attr.cx]=\\\"xScale(0)\\\" [attr.cy]=\\\"yScale(0.5)\\\"\\n      [attr.transform]=\\\"translate(leftMargin, topMargin)\\\"\\n      fill=\\\"darkseagreen\\\" />\\n\\n    <g *ngFor=\\\"let group of groups; let i = index; trackBy: trackByGroupId\\\"\\n      [id]=\\\"group.id\\\">\\n\\n      <path id=\\\"{{group.id}}-dist\\\"\\n        [attr.fill]=\\\"group.color\\\"\\n        [attr.fill-opacity]=\\\"group.fillOpacity\\\"\\n        stroke=\\\"none\\\" />\\n\\n      <path id=\\\"{{group.id}}-center\\\"\\n        [attr.stroke]=\\\"group.color\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        fill=\\\"none\\\" />\\n\\n      <path id=\\\"{{group.id}}-left\\\"\\n        [class.draggable]=\\\"group.primary && !disableDragCI\\\"\\n        [attr.stroke]=\\\"group.color\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        fill=\\\"none\\\"\\n        (mouseover)=\\\"group.primary ? toggleLeftBarInfo(true) : null\\\"\\n        (mouseout)=\\\"group.primary ? toggleLeftBarInfo(false) : null\\\" />\\n\\n      <path id=\\\"{{group.id}}-right\\\"\\n        [class.draggable]=\\\"group.primary && !disableDragCI\\\"\\n        [attr.stroke]=\\\"group.color\\\"\\n        [attr.stroke-width]=\\\"plotOptions.lineWidth * 3\\\"\\n        fill=\\\"none\\\"\\n        (mouseover)=\\\"group.primary ? toggleRightBarInfo(true) : null\\\"\\n        (mouseout)=\\\"group.primary ? toggleRightBarInfo(false) : null\\\" />\\n\\n      <circle id=\\\"{{group.id}}-target\\\"\\n        [class.draggable]=\\\"group.primary && !disableDragTarget\\\"\\n        r=\\\"5\\\"\\n        [attr.fill]=\\\"group.color\\\"\\n        (mouseover)=\\\"group.primary ? toggleTargetInfo(true) : null\\\"\\n        (mouseout)=\\\"group.primary ? toggleTargetInfo(false) : null\\\" />\\n    </g>\\n\\n    <g *ngIf=\\\"showLeftBarInfo\\\"\\n      [attr.transform]=\\\"translate(leftMargin + xScale(mainGroup.left), topMargin + yScale(0.5))\\\">\\n      <path id=\\\"{{name}}-left-box\\\"\\n        stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.9\\\" />\\n      <text id=\\\"{{name}}-left-coords\\\" x=\\\"0\\\" y=\\\"-3em\\\" font-family=\\\"monospace\\\" text-anchor=\\\"middle\\\">\\n        <tspan style=\\\"white-space: pre\\\">{{mainGroup.label}}: {{ciWidth() | formatFixed:[mainGroup.left]}}</tspan><tspan x=\\\"0\\\" dy=\\\"1em\\\" style=\\\"white-space: pre\\\">Bound:  {{mainGroup.left | formatFixed:[ciWidth()]}}</tspan>\\n      </text>\\n    </g>\\n\\n    <g *ngIf=\\\"showRightBarInfo\\\"\\n      [attr.transform]=\\\"translate(leftMargin + xScale(mainGroup.right), topMargin + yScale(0.5))\\\">\\n      <path id=\\\"{{name}}-right-box\\\"\\n        stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.9\\\" />\\n      <text id=\\\"{{name}}-right-coords\\\" x=\\\"0\\\" y=\\\"-3em\\\" font-family=\\\"monospace\\\" text-anchor=\\\"middle\\\">\\n        <tspan style=\\\"white-space: pre\\\">{{mainGroup.label}}: {{ciWidth() | formatFixed:[mainGroup.right]}}</tspan><tspan x=\\\"0\\\" dy=\\\"1em\\\" style=\\\"white-space: pre\\\">Bound:  {{mainGroup.right | formatFixed:[ciWidth()]}}</tspan>\\n      </text>\\n    </g>\\n\\n    <g *ngIf=\\\"showTargetInfo\\\"\\n      [attr.transform]=\\\"translate(leftMargin + xScale(mainGroup.target), topMargin + yScale(0.5))\\\">\\n      <path id=\\\"{{name}}-target-box\\\"\\n        stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.9\\\" />\\n      <text id=\\\"{{name}}-target-coords\\\" x=\\\"0\\\" y=\\\"-1.5em\\\" font-family=\\\"mono\\\" text-anchor=\\\"middle\\\">\\n        <tspan style=\\\"white-space: pre\\\">&delta;: {{mainGroup.target | formatFixed:[]}}</tspan>\\n      </text>\\n    </g>\\n\\n    <g id=\\\"{{name}}-bottom-axis\\\" [attr.transform]=\\\"translate(leftMargin, innerHeight + topMargin)\\\"></g>\\n  </ng-template>\\n</svg>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/bottom-plot/bottom-plot.component.html\n// module id = ./src/app/t-test/bottom-plot/bottom-plot.component.html\n// module chunks = main","import {\n  Component, Input, Output, OnChanges, SimpleChanges, AfterViewChecked,\n  ViewChild, ElementRef, ViewEncapsulation, EventEmitter\n} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/debounceTime';\n\nimport * as d3 from 'd3';\n\nimport { AbstractPlotComponent, Draw } from '../abstract-plot.component';\nimport { Project } from '../project';\nimport { Range } from '../range';\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\n\ninterface Group {\n  index: number;\n  id: string;\n  leftPath: string;\n  centerPath: string;\n  rightPath: string;\n  distPath: string;\n  left: number;\n  originalTarget: number;\n  target: number;\n  right: number;\n  label: string;\n  color: string;\n  fillOpacity: number;\n  strokeOpacity: number;\n  primary: boolean;\n};\n\nenum CIBar {\n  Left,\n  Right\n};\n\n@Component({\n  selector: 't-test-bottom-plot',\n  templateUrl: './bottom-plot.component.html',\n  styleUrls: ['./bottom-plot.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BottomPlotComponent extends AbstractPlotComponent implements OnChanges, AfterViewChecked {\n  @Input('project') project: Project;\n  @Input('disable-drag-target') disableDragTarget = false;\n  @Input('disable-drag-ci') disableDragCI = false;\n  @Output() modelChanged = new EventEmitter();\n\n  leftMargin: number = 10;\n  rightMargin: number = 10;\n  topMargin: number = 50;\n  bottomMargin: number = 50;\n  viewBox: string = \"0 0 0 0\";\n\n  yScaleSD: any;\n  plotData: any[];\n  mainGroup: Group;\n  groups: Group[];\n  needDraw = Draw.No;\n\n  // target dragging\n  targetDragging = false;\n  showTargetInfo = false;\n\n  // bar dragging\n  barDragging = false;\n  showLeftBarInfo = false;\n  showRightBarInfo = false;\n\n  constructor(\n    public plotOptions: PlotOptionsService,\n    public palette: PaletteService\n  ) {\n    super(plotOptions, palette);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setup();\n  }\n\n  ngAfterViewChecked(): void {\n    this.draw();\n  }\n\n  redraw(): void {\n    this.setup();\n  }\n\n  toggleTargetInfo(value: boolean): void {\n    if (!this.targetDragging && !this.barDragging) {\n      this.showTargetInfo = value;\n      if (value) {\n        this.needDraw = Draw.Hover;\n      }\n    }\n  }\n\n  toggleLeftBarInfo(value: boolean): void {\n    if (!this.targetDragging && !this.barDragging) {\n      this.showLeftBarInfo = value;\n      if (value) {\n        this.needDraw = Draw.Hover;\n      }\n    }\n  }\n\n  toggleRightBarInfo(value: boolean): void {\n    if (!this.targetDragging && !this.barDragging) {\n      this.showRightBarInfo = value;\n      if (value) {\n        this.needDraw = Draw.Hover;\n      }\n    }\n  }\n\n  getColor(index: number): string {\n    return this.palette.getColor(index, this.plotOptions.paletteTheme);\n  }\n\n  trackByGroupId(index: number, group: Group): any {\n    return group.id;\n  }\n\n  private setupDimensions(): void {\n    // margin\n    this.topMargin = this.plotOptions.getFontSize() + 20;\n    this.bottomMargin = 10 + this.plotOptions.getFontSize() +\n      this.plotOptions.getAxisLineWidth() +         // x axis line width\n      (this.plotOptions.getAxisFontSize() / 2) + 9; // x axis tick (font + tick)\n    this.leftMargin = 10;\n    this.rightMargin = 10;\n\n    // dimensions\n    if (this.fixedWidth) {\n      this.width = this.fixedWidth;\n    } else {\n      this.width = this.getDimension('width');\n    }\n    if (this.fixedHeight) {\n      this.height = this.fixedHeight;\n    } else {\n      this.height = this.getDimension('height');\n    }\n    this.viewBox = `0 0 ${this.width} ${this.height}`;\n    this.innerWidth  = this.width  - this.leftMargin - this.rightMargin;\n    this.innerHeight = this.height - this.topMargin - this.bottomMargin;\n  }\n\n  protected setup(): void {\n    if (!this.project) {\n      return;\n    }\n\n    this.setupTitle();\n    this.setupDimensions();\n    this.setupPlotData();\n    this.setupScales();\n    this.setupGroups();\n    this.resetDragging();\n\n    this.needDraw = Draw.Yes;\n  }\n\n  private setupTitle(): void {\n    this.title = `Precision (95% Confidence Interval) vs. Effect Size`;\n  }\n\n  private setupPlotData(): void {\n    this.plotData = this.project.models.map(m => m.sampDist);\n  }\n\n  private setupScales(): void {\n    let pSpaceRange = this.project.pSpaceRange;\n    this.xScale = d3.scaleLinear().\n      domain(pSpaceRange.toArray()).\n      range([0, this.innerWidth]);\n\n    this.yScale = d3.scaleLinear().\n      domain([0, 0.7]).\n      range([0, this.innerHeight]);\n\n    let sampDistExtent = this.plotData.reduce((arr, sampDist) => {\n      let extent = d3.extent(sampDist, d => d.y);\n      return d3.extent(arr.concat(extent));\n    }, []);\n    this.yScaleSD = d3.scaleLinear().\n      domain(sampDistExtent.reverse()).\n      range([0, this.yScale(0.5)]).\n      clamp(true);\n  }\n\n  private setupGroups(): void {\n    this.groups = this.project.models.map((model, i) => {\n      let range = model.precisionRange();\n\n      // main lines\n      let leftLimit = range.min;\n      let leftPath = this.getPath([\n        { x: leftLimit, y: 0.40 },\n        { x: leftLimit, y: 0.60 }\n      ]);\n\n      let rightLimit = range.max;\n      let rightPath = this.getPath([\n        { x: rightLimit, y: 0.40 },\n        { x: rightLimit, y: 0.60 }\n      ]);\n\n      let centerPath = this.getPath([\n        { x: leftLimit, y: 0.5 },\n        { x: rightLimit, y: 0.5 }\n      ]);\n\n      // sample distribution\n      let distPath = this.getArea(this.plotData[i], 'x', 'y');\n\n      let result = {\n        index: i,\n        id: `${this.name}-group-${i}`,\n        leftPath: leftPath,\n        centerPath: centerPath,\n        rightPath: rightPath,\n        distPath: distPath,\n        left: leftLimit,\n        originalTarget: model.delta,\n        target: model.delta,\n        right: rightLimit,\n        label: \"95% CI\",\n        color: this.getColor(i),\n        fillOpacity: 0.5,\n        strokeOpacity: 0.9,\n        primary: this.project.selectedIndex == i\n      } as Group;\n      return result;\n    });\n\n    // order group in reverse so that they are drawn properly, put the selected\n    // group at the end\n    this.groups.sort((a, b) => {\n      if (a.primary) return 1;\n      if (b.primary) return -1;\n      return b.index - a.index;\n    });\n    this.mainGroup = this.groups[this.groups.length - 1];\n  }\n\n  private resetDragging(): void {\n    this.targetDragging = false;\n    this.barDragging = false;\n  }\n\n  private draw(): void {\n    if (this.needDraw == Draw.No) {\n      return;\n    }\n\n    this.drawInfoBox('left');\n    this.drawInfoBox('right');\n    this.drawInfoBox('target');\n\n    if (this.needDraw == Draw.Hover) {\n      this.needDraw = Draw.No;\n      return;\n    }\n\n    let svg = d3.select(this.plotElement.nativeElement);\n    let t = svg.transition();\n\n    // axes (drawn by d3)\n    let xAxis = d3.axisBottom(this.xScale).ticks(Math.floor(this.innerWidth / 75));\n    t.select(`#${this.name}-bottom-axis`).\n      call(xAxis).\n      attr(\"font-size\", 15 * this.plotOptions.axisFontSize).\n      attr(\"stroke-width\", this.plotOptions.axisLineWidth * 1.5);\n\n    // alternate groups\n    this.groups.forEach((group, index) => {\n      let id = `#${group.id}`;\n      t.select(id).attr('transform', this.translate(this.leftMargin, this.topMargin));\n      t.select(`${id}-dist`).attr('d', group.distPath);\n      t.select(`${id}-center`).attr('d', group.centerPath);\n      t.select(`${id}-left`).attr('d', group.leftPath);\n      t.select(`${id}-right`).attr('d', group.rightPath);\n      t.select(`${id}-target`).\n        attr('cx', this.xScale(group.target)).\n        attr('cy', this.yScale(0.5));\n    });\n\n    // make target point draggable\n    let target = d3.select(`#${this.mainGroup.id}-target`);\n    let targetDrag = d3.drag().\n      container(target.node().parentNode.parentNode).\n      on(\"start\", this.dragTargetStart.bind(this)).\n      on(\"drag\", this.dragTarget.bind(this)).\n      on(\"end\", this.dragTargetEnd.bind(this));\n    target.call(targetDrag);\n\n    // make left bar draggable\n    let leftBar = d3.select(`#${this.mainGroup.id}-left`);\n    let leftBarDrag = d3.drag().\n      container(leftBar.node().parentNode.parentNode).\n      on(\"start\", this.dragBarStart.bind(this, CIBar.Left)).\n      on(\"drag\", this.dragBar.bind(this, CIBar.Left)).\n      on(\"end\", this.dragBarEnd.bind(this, CIBar.Left));\n    leftBar.call(leftBarDrag);\n\n    // make right bar draggable\n    let rightBar = d3.select(`#${this.mainGroup.id}-right`);\n    let rightBarDrag = d3.drag().\n      container(rightBar.node().parentNode.parentNode).\n      on(\"start\", this.dragBarStart.bind(this, CIBar.Right)).\n      on(\"drag\", this.dragBar.bind(this, CIBar.Right)).\n      on(\"end\", this.dragBarEnd.bind(this, CIBar.Right));\n    rightBar.call(rightBarDrag);\n\n    this.needDraw = Draw.No;\n  }\n\n  private drawInfoBox(which: string): void {\n    let svg = d3.select(this.plotElement.nativeElement);\n    let box = svg.select(`#${this.name}-${which}-box`);\n    let coords = svg.select(`#${this.name}-${which}-coords`);\n    if (box.size() > 0 && coords.size() > 0) {\n      let dim = coords.node().getBBox();\n      let left = dim.x - 5, right = dim.x + dim.width + 5;\n      let unit = dim.width / 16;\n      let lmid = left + (7 * unit) + 5, rmid = left + (9 * unit) + 5;\n      let mid = left + (8 * unit) + 5;\n      let top = dim.y - 5, bottom = dim.y + dim.height + 5;\n      box.attr(\"d\", d3.line()([\n        [left, top], [right, top], [right, bottom],\n        [rmid, bottom], [mid, bottom + 5], [lmid, bottom],\n        [left, bottom], [left, top]\n      ]));\n    }\n  }\n\n  ciWidth(): number {\n    return Math.abs(this.mainGroup.right - this.mainGroup.left);\n  }\n\n  private getArea(points: any[], xName: string, yName: string): string {\n    let area = d3.area().\n      x((d, i) => this.xScale(d[xName])).\n      y0(this.yScaleSD(0)).\n      y1((d, i) => this.yScaleSD(d[yName]));\n\n    return area(points);\n  }\n\n  private dragTargetStart(): void {\n    if (this.disableDragTarget) return;\n\n    this.targetDragging = true;\n    this.mainGroup.fillOpacity = 0.1;\n    this.mainGroup.strokeOpacity = 0.1;\n  }\n\n  private dragTarget(event: any): void {\n    if (this.disableDragTarget) return;\n\n    let mouseX = d3.event.x - this.leftMargin;\n    let x = this.xScale.invert(mouseX);\n    if (x >= 0 && x < 0.1) {\n      x = 0.1;\n      mouseX = this.xScale(x);\n    } else if (x < 0 && x > -0.1) {\n      x = -0.1;\n      mouseX = this.xScale(x);\n    }\n\n    let offset = mouseX - this.xScale(this.mainGroup.originalTarget);\n    let g = d3.select(`#${this.mainGroup.id}`).\n      attr('transform', this.translate(this.leftMargin + offset, this.topMargin));\n    this.mainGroup.target = x;\n  }\n\n  private dragTargetEnd(): void {\n    if (this.disableDragTarget) return;\n\n    if (this.project) {\n      let newDelta = this.mainGroup.target;\n      this.project.updateModel(this.project.selectedIndex, 'delta', newDelta).then(() => {\n        this.modelChanged.emit();\n      });\n    }\n    this.showTargetInfo = false;\n  }\n\n  private dragBarStart(which: CIBar): void {\n    if (this.disableDragCI) return;\n\n    this.barDragging = true;\n  }\n\n  private dragBar(which: CIBar, event: any): void {\n    if (this.disableDragCI) return;\n\n    let mouseX = d3.event.x - this.leftMargin;\n    let x = this.xScale.invert(mouseX);\n\n    let diff = 0;\n    switch (which) {\n      case CIBar.Left:\n        let leftBarX = this.xScale(this.mainGroup.left);\n        diff = x - this.mainGroup.left;\n        break;\n\n      case CIBar.Right:\n        let rightBarX = this.xScale(this.mainGroup.right);\n        diff = this.mainGroup.right - x;\n        break;\n    }\n    this.mainGroup.left += diff;\n    this.mainGroup.right -= diff;\n\n    // redraw lines\n    let leftPath = this.getPath([\n      { x: this.mainGroup.left, y: 0.40 },\n      { x: this.mainGroup.left, y: 0.60 }\n    ]);\n\n    let rightPath = this.getPath([\n      { x: this.mainGroup.right, y: 0.40 },\n      { x: this.mainGroup.right, y: 0.60 }\n    ]);\n\n    let centerPath = this.getPath([\n      { x: this.mainGroup.left, y: 0.5 },\n      { x: this.mainGroup.right, y: 0.5 }\n    ]);\n\n    let svg = d3.select(this.plotElement.nativeElement);\n    svg.select(`#${this.mainGroup.id}-left`).attr('d', leftPath);\n    svg.select(`#${this.mainGroup.id}-right`).attr('d', rightPath);\n    svg.select(`#${this.mainGroup.id}-center`).attr('d', centerPath);\n  }\n\n  private dragBarEnd(which: CIBar): void {\n    if (this.disableDragCI) return;\n\n    if (this.project) {\n      this.project.updateModel(this.project.selectedIndex, 'ci', this.ciWidth()).then(() => {\n        this.modelChanged.emit();\n      });\n    }\n    this.showLeftBarInfo = false;\n    this.showRightBarInfo = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/bottom-plot/bottom-plot.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ceil'\n})\nexport class CeilPipe implements PipeTransform {\n\n  transform(value: number, args?: any): number {\n    return Math.ceil(value);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/ceil.pipe.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dialog {\\n  display: block;\\n  position: absolute;\\n  z-index: 100;\\n  background-color: white;\\n  border: 1px solid #888;\\n  border-radius: 10px;\\n  box-shadow: 5px 5px 25px #888;\\n  top: 20px;\\n  left: 20px;\\n  width: 25vw;\\n  min-width: 300px;\\n}\\n\\n.dialog .header {\\n  font-size: larger;\\n  font-weight: bold;\\n  background-color: #e5e5e5;\\n  border-bottom: 1px solid #ccc;\\n  padding: 10px;\\n  border-radius: 10px 10px 0 0;\\n  cursor: move;\\n}\\n\\n.dialog .close {\\n  float: right;\\n  margin: 5px;\\n}\\n\\n.dialog .content {\\n  overflow: auto;\\n  height: 50vh;\\n  padding: 5px;\\n  margin: 0 5px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/draggable-dialog/draggable-dialog.component.css\n// module id = ./src/app/t-test/draggable-dialog/draggable-dialog.component.css\n// module chunks = main","module.exports = \"<div #main *ngIf=\\\"enabled\\\" class=\\\"dialog\\\"\\n  [style.top]=\\\"yOffset ? yOffset + 'px' : startYOffset\\\"\\n  [style.left]=\\\"xOffset ? xOffset + 'px' : startXOffset\\\">\\n  <div class=\\\"header\\\"\\n    (mousedown)=\\\"mousedown($event)\\\" (mouseup)=\\\"mouseup($event)\\\"\\n    (mousemove)=\\\"mousemove($event)\\\">\\n    {{title}}\\n    <button type=\\\"button\\\" class=\\\"close fa fa-times-circle\\\" (click)=\\\"close()\\\"></button>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/draggable-dialog/draggable-dialog.component.html\n// module id = ./src/app/t-test/draggable-dialog/draggable-dialog.component.html\n// module chunks = main","import { Component, Directive, Input, Output, EventEmitter, ViewChild, TemplateRef, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 't-test-draggable-dialog',\n  templateUrl: './draggable-dialog.component.html',\n  styleUrls: ['./draggable-dialog.component.css']\n})\nexport class DraggableDialogComponent implements OnInit {\n  @Input() title: string;\n  @Input() content: any;\n  @Input('start-enabled') startEnabled = false;\n  @Input('start-x-offset') startXOffset = \"20px\";\n  @Input('start-y-offset') startYOffset = \"20px\";\n  @Output('drag-start') onDragStart = new EventEmitter();\n  @Output('drag-end') onDragEnd = new EventEmitter();\n  private enabled = false;\n  private dragging = false;\n  private xOffset: number;\n  private yOffset: number;\n  private lastX: number;\n  private lastY: number;\n\n  @ViewChild('main') mainElement: ElementRef;\n\n  ngOnInit(): void {\n    this.enabled = this.startEnabled;\n  }\n\n  open(): void {\n    this.enabled = true;\n  }\n\n  toggle(): void {\n    this.enabled = !this.enabled;\n  }\n\n  close(): void {\n    this.enabled = false;\n  }\n\n  isOpen(): boolean {\n    return this.enabled;\n  }\n\n  mousedown(event: any): void {\n    this.startDragging();\n\n    let box = this.mainElement.nativeElement.getBoundingClientRect();\n    this.xOffset = box.left + window.pageXOffset;\n    this.yOffset = box.top + window.pageYOffset;\n    this.lastX = event.pageX;\n    this.lastY = event.pageY;\n  }\n\n  mouseup(event: any): void {\n    this.stopDragging();\n  }\n\n  mousemove(event: any): void {\n    if (this.dragging) {\n      if ((event.buttons & 1) == 0) {\n        this.stopDragging();\n        return;\n      }\n      this.xOffset += event.pageX - this.lastX;\n      this.yOffset += event.pageY - this.lastY;\n      this.lastX = event.pageX;\n      this.lastY = event.pageY;\n    }\n  }\n\n  startDragging(): void {\n    this.dragging = true;\n    this.onDragStart.emit();\n  }\n\n  stopDragging(): void {\n    this.dragging = false;\n    this.onDragEnd.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/draggable-dialog/draggable-dialog.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n\\n.modal-body {\\n}\\n\\n.modal-body .left {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  width: 20%;\\n  border-right: 1px solid #888;\\n  padding: 10px;\\n}\\n\\n.modal-body .right {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  margin-left: 10px;\\n  overflow: auto;\\n  padding: 10px;\\n}\\n\\n.modal-footer {\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/export-plots/export-plots.component.css\n// module id = ./src/app/t-test/export-plots/export-plots.component.css\n// module chunks = main","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">Export graphs</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"cancel()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div id=\\\"t-test-export-plots-modal-body\\\" class=\\\"modal-body grow-vert h-100\\\">\\n  <div class=\\\"d-flex flex-column h-100\\\">\\n    <ngb-tabset [destroyOnHide]=\\\"false\\\">\\n      <ngb-tab [title]=\\\"topLeftTitle\\\">\\n        <ng-template ngbTabContent>\\n          <div class=\\\"left\\\">\\n            <div class=\\\"form-check\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                  [(ngModel)]=\\\"includeTopLeft\\\">\\n                  Export this graph\\n              </label>\\n            </div>\\n            <ng-template [ngIf]=\\\"includeTopLeft\\\">\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topLeftDropLines\\\">\\n                    Show drop lines\\n                </label>\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topLeftTarget\\\">\\n                    Show target\\n                </label>\\n              </div>\\n              <label>\\n                Dimensions\\n                <select class=\\\"form-control\\\" name=\\\"topLeftDim\\\"\\n                  [(ngModel)]=\\\"topLeftDim\\\" (ngModelChange)=\\\"setDim('topLeft', $event)\\\">\\n                  <option value=\\\"640x480\\\">640 by 480</option>\\n                  <option value=\\\"800x600\\\">800 by 600</option>\\n                  <option value=\\\"1024x768\\\">1024 by 768</option>\\n                  <option value=\\\"other\\\">Custom</option>\\n                </select>\\n              </label>\\n              <div *ngIf=\\\"topLeftDim == 'other'\\\" class=\\\"form-group\\\">\\n                <label>\\n                  Width\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topLeftWidth\\\">\\n                </label>\\n              </div>\\n              <div *ngIf=\\\"topLeftDim == 'other'\\\" class=\\\"form-group\\\">\\n                <label>\\n                  Height\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topLeftHeight\\\">\\n                </label>\\n              </div>\\n            </ng-template>\\n          </div>\\n          <div class=\\\"right\\\">\\n            <t-test-plot #topLeftPlot name=\\\"top-left-export\\\"\\n              [project]=\\\"project\\\" [hover-disabled]=\\\"true\\\"\\n              [disable-drag]=\\\"true\\\"\\n              [hide-drop-lines]=\\\"!topLeftDropLines\\\"\\n              [hide-target]=\\\"!topLeftTarget\\\"\\n              [fixed-width]=\\\"topLeftWidth\\\" [fixed-height]=\\\"topLeftHeight\\\"\\n              [legend-x-offset]=\\\"topLeftLegendXOffset\\\"\\n              [legend-y-offset]=\\\"topLeftLegendYOffset\\\">\\n            </t-test-plot>\\n          </div>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab [title]=\\\"topRightTitle\\\">\\n        <ng-template ngbTabContent>\\n          <div class=\\\"left\\\">\\n            <div class=\\\"form-check\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                  [(ngModel)]=\\\"includeTopRight\\\">\\n                  Export this graph\\n              </label>\\n            </div>\\n            <ng-template [ngIf]=\\\"includeTopRight\\\">\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topRightDropLines\\\">\\n                    Show drop lines\\n                </label>\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                    [(ngModel)]=\\\"topRightTarget\\\">\\n                    Show target\\n                </label>\\n              </div>\\n              <label>\\n                Dimensions\\n                <select class=\\\"form-control\\\" name=\\\"topRightDim\\\"\\n                  [(ngModel)]=\\\"topRightDim\\\" (ngModelChange)=\\\"setDim('topRight', $event)\\\">\\n                  <option value=\\\"640x480\\\">640 by 480</option>\\n                  <option value=\\\"800x600\\\">800 by 600</option>\\n                  <option value=\\\"1024x768\\\">1024 by 768</option>\\n                  <option value=\\\"other\\\">Custom</option>\\n                </select>\\n              </label>\\n              <div *ngIf=\\\"topRightDim == 'other'\\\" class=\\\"form-group\\\">\\n                <label>\\n                  Width\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topRightWidth\\\">\\n                </label>\\n              </div>\\n              <div *ngIf=\\\"topRightDim == 'other'\\\" class=\\\"form-group\\\">\\n                <label>\\n                  Height\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"topRightHeight\\\">\\n                </label>\\n              </div>\\n            </ng-template>\\n          </div>\\n          <div class=\\\"right\\\">\\n            <t-test-plot #topRightPlot name=\\\"top-right-export\\\"\\n              [project]=\\\"project\\\" [hover-disabled]=\\\"true\\\"\\n              [disable-drag]=\\\"true\\\"\\n              [hide-drop-lines]=\\\"!topRightDropLines\\\"\\n              [hide-target]=\\\"!topRightTarget\\\"\\n              [fixed-width]=\\\"topRightWidth\\\" [fixed-height]=\\\"topRightHeight\\\"\\n              [legend-x-offset]=\\\"topRightLegendXOffset\\\"\\n              [legend-y-offset]=\\\"topRightLegendYOffset\\\">\\n            </t-test-plot>\\n          </div>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab [title]=\\\"bottomTitle\\\">\\n        <ng-template ngbTabContent>\\n          <div class=\\\"left\\\">\\n            <div class=\\\"form-check\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                  [(ngModel)]=\\\"includeBottom\\\">\\n                  Export this graph\\n              </label>\\n            </div>\\n            <ng-template [ngIf]=\\\"includeBottom\\\">\\n              <label>\\n                Dimensions\\n                <select class=\\\"form-control\\\" name=\\\"bottomDim\\\"\\n                  [(ngModel)]=\\\"bottomDim\\\" (ngModelChange)=\\\"setDim('bottom', $event)\\\">\\n                  <option value=\\\"640x160\\\">640 by 160</option>\\n                  <option value=\\\"800x200\\\">800 by 200</option>\\n                  <option value=\\\"1024x256\\\">1024 by 256</option>\\n                  <option value=\\\"other\\\">Custom</option>\\n                </select>\\n              </label>\\n              <div *ngIf=\\\"bottomDim == 'other'\\\" class=\\\"form-group\\\">\\n                <label>\\n                  Width\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"bottomWidth\\\">\\n                </label>\\n              </div>\\n              <div *ngIf=\\\"bottomDim == 'other'\\\" class=\\\"form-group\\\">\\n                <label>\\n                  Height\\n                  <input class=\\\"form-control\\\" type=\\\"number\\\"\\n                    [(ngModel)]=\\\"bottomHeight\\\">\\n                </label>\\n              </div>\\n            </ng-template>\\n          </div>\\n          <div class=\\\"right\\\">\\n            <t-test-bottom-plot #bottomPlot name=\\\"bottom-export\\\"\\n              [project]=\\\"project\\\"\\n              [disable-drag-target]=\\\"true\\\" [disable-drag-ci]=\\\"true\\\"\\n              [fixed-width]=\\\"bottomWidth\\\" [fixed-height]=\\\"bottomHeight\\\">\\n            </t-test-bottom-plot>\\n          </div>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <div class=\\\"d-flex-inline flex-row\\\">\\n    <div class=\\\"form-inline\\\">\\n      <label for=\\\"export-image-format\\\" class=\\\"mr-sm-2\\\">Image format:</label>\\n      <select id=\\\"export-image-format\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"imageFormat\\\">\\n        <option *ngFor=\\\"let format of imageFormats\\\">{{format}}</option>\\n      </select>\\n    </div>\\n  </div>\\n  <p>\\n    The graphs you have chosen will be packaged in a ZIP file.\\n    <a #downloadLink style=\\\"display: none\\\"></a>\\n  </p>\\n  <div class=\\\"d-flex flex-row align-items-center\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary m-1\\\" (click)=\\\"save()\\\"\\n      [disabled]=\\\"!includeTopLeft && !includeTopRight && !includeBottom\\\">\\n      <i class=\\\"fa fa-floppy-o\\\"></i> Save\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary m-1\\\" (click)=\\\"cancel()\\\">\\n      <i class=\\\"fa fa-circle-x\\\"></i> Close\\n    </button>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/export-plots/export-plots.component.html\n// module id = ./src/app/t-test/export-plots/export-plots.component.html\n// module chunks = main","import { Component, Input, ViewChild, ElementRef, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Project } from '../project';\nimport { AbstractPlotComponent } from '../abstract-plot.component';\nimport { PlotComponent } from '../plot/plot.component';\nimport { BottomPlotComponent } from '../bottom-plot/bottom-plot.component';\nimport { ExportService, PlotInfo, FormatsResponse, PlotsResponse } from '../export.service'\n\n@Component({\n  selector: 't-test-export-plots',\n  templateUrl: './export-plots.component.html',\n  styleUrls: ['./export-plots.component.css']\n})\nexport class ExportPlotsComponent implements OnInit {\n  @Input('project') project: Project;\n  @Input('top-left-legend-x-offset') topLeftLegendXOffset: number;\n  @Input('top-left-legend-y-offset') topLeftLegendYOffset: number;\n  @Input('top-right-legend-x-offset') topRightLegendXOffset: number;\n  @Input('top-right-legend-y-offset') topRightLegendYOffset: number;\n\n  includeTopLeft = true;\n  topLeftTitle: string;\n  topLeftDim: string = \"640x480\";\n  topLeftWidth = 640;\n  topLeftHeight = 480;\n  topLeftDropLines = true;\n  topLeftTarget = true;\n\n  includeTopRight = true;\n  topRightTitle: string;\n  topRightDim: string = \"640x480\";\n  topRightWidth = 640;\n  topRightHeight = 480;\n  topRightDropLines = true;\n  topRightTarget = true;\n\n  includeBottom = true;\n  bottomTitle = \"Precision vs. Effect Size\";\n  bottomDim: string = \"640x160\";\n  bottomWidth = 640;\n  bottomHeight = 160;\n\n  imageFormats: string[] = [];\n  imageFormat = \"PNG\";\n\n  @ViewChild('topLeftPlot') topLeftPlot: PlotComponent;\n  @ViewChild('topRightPlot') topRightPlot: PlotComponent;\n  @ViewChild('bottomPlot') bottomPlot: BottomPlotComponent;\n  @ViewChild('downloadLink') downloadLink: ElementRef;\n\n  constructor(\n    private activeModal: NgbActiveModal,\n    private exportService: ExportService\n  ) {}\n\n  ngOnInit(): void {\n    this.exportService.formats().then(response => {\n      this.imageFormats = response.formats;\n    });\n\n    switch (this.project.getModel(0).output) {\n      case \"n\":\n      case \"nByCI\":\n        this.topLeftTitle = \"Sample Size vs. Power\";\n        this.topRightTitle = \"Sample Size vs. Detectable Alternative\";\n        break;\n      case \"power\":\n        this.topLeftTitle = \"Power vs. Sample Size\";\n        this.topRightTitle = \"Power vs. Detectable Alternative\";\n        break;\n      case \"delta\":\n        this.topLeftTitle = \"Detectable Alternative vs. Sample Size\";\n        this.topRightTitle = \"Detectable Alternative vs. Power\";\n        break;\n    }\n  }\n\n  setDim(which: string, value: string): void {\n    if (value != 'other') {\n      let arr = value.split(\"x\");\n      this[`${which}Width`] = parseInt(arr[0]);\n      this[`${which}Height`] = parseInt(arr[1]);\n    }\n  }\n\n  serializePlot(plot: AbstractPlotComponent): string {\n    let serializer = new XMLSerializer();\n    return serializer.serializeToString(plot.plotElement.nativeElement);\n  }\n\n  save(): void {\n    let plots: PlotInfo[] = [];\n    if (this.includeTopLeft) {\n      plots.push({\n        name: this.topLeftTitle,\n        width: this.topLeftWidth,\n        height: this.topLeftHeight,\n        svg: this.serializePlot(this.topLeftPlot)\n      } as PlotInfo);\n    }\n    if (this.includeTopRight) {\n      plots.push({\n        name: this.topRightTitle,\n        width: this.topRightWidth,\n        height: this.topRightHeight,\n        svg: this.serializePlot(this.topRightPlot)\n      } as PlotInfo);\n    }\n    if (this.includeBottom) {\n      plots.push({\n        name: this.bottomTitle,\n        width: this.bottomWidth,\n        height: this.bottomHeight,\n        svg: this.serializePlot(this.bottomPlot)\n      } as PlotInfo);\n    }\n\n    this.exportService.plots(this.imageFormat, plots).then(response => {\n      let data = atob(response.data);\n      var buf = new ArrayBuffer(data.length);\n      var arr = new Uint8Array(buf);\n      for (var i = 0; i < data.length; i++) {\n        arr[i] = data.charCodeAt(i);\n      }\n\n      let blob = new Blob([buf], { type: 'application/zip' })\n      let url = URL.createObjectURL(blob);\n      let elt = this.downloadLink.nativeElement;\n      elt.href = url;\n      elt.download = response.filename;\n      elt.click();\n      URL.revokeObjectURL(url);\n      this.activeModal.close();\n    });\n  }\n\n  cancel(): void {\n    this.activeModal.close();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/export-plots/export-plots.component.ts","import { Injectable } from '@angular/core';\nimport {\n  Headers,\n  RequestOptions,\n  Http,\n  ResponseContentType\n} from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\n\nexport interface PlotInfo {\n  name: string;\n  width: number;\n  height: number;\n  svg: string;\n}\n\nexport interface FormatsResponse {\n  formats: string[];\n}\n\nexport interface PlotsResponse {\n  data: string;\n  filename: string;\n}\n\n@Injectable()\nexport class ExportService {\n  private apiUrl = `${environment.apiUrl}/export`;\n\n  constructor(private http: Http) { }\n\n  formats(): Promise<FormatsResponse> {\n    let url = `${this.apiUrl}/formats`;\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.\n      get(url, options).\n      toPromise().\n      then(response => response.json() as FormatsResponse).\n      catch(this.handleError);\n  }\n\n  plots(format: string, plots: PlotInfo[]): Promise<PlotsResponse> {\n    let url = `${this.apiUrl}/plots`;\n    let params: any = { format: format, plots: plots };\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.\n      post(url, JSON.stringify(params), options).\n      toPromise().\n      then(response => response.json() as PlotsResponse).\n      catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/export.service.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatFixed'\n})\nexport class FormatFixedPipe implements PipeTransform {\n\n  transform(value: number, others: number[]): string {\n    let widths = others.concat(value).map(v => {\n      let result = Math.ceil(Math.log10(Math.abs(v)));\n      if (v < 0) result++;\n      return result;\n    });\n    let width = Math.max.apply(undefined, widths) + 3;\n    let result = value.toFixed(2);\n    while (result.length < width) {\n      result = ' ' + result;\n    }\n    return result;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/format-fixed.pipe.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h5 {\\n  font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/help/help.component.css\n// module id = ./src/app/t-test/help/help.component.css\n// module chunks = main","module.exports = \"<ng-template [ngIf]=\\\"topic == 'overview'\\\">\\n  <h5>Introduction</h5>\\n  <p>\\n    PS is a program for performing power and sample size calculations. You are\\n    using a web-enabled beta-test version of the program, where we are actively\\n    working on the interactive user interface. Currently, it can only be used\\n    for paired t-tests but it will be expanded for use in studies with\\n    dichotomous, continuous, survival response and other data.\\n  </p>\\n  <h5>Program Output</h5>\\n  <p>\\n    The program can determine the sample size needed to detect a specified\\n    alternative hypothesis with the required power, the power with which a\\n    specific alternative hypothesis can be detected with a given sample size,\\n    or the specific alternative hypotheses that can be detected with a given\\n    power and sample size. It also gives the 95% confidence interval for the\\n    test statistic under the specified alternative hypothesis as a measure of\\n    the precision of the test statistic.\\n  </p>\\n  <h5>Interactive Help</h5>\\n  <p>\\n    Click on any question-mark icon for help or pull-down menu to determine\\n    the needed information. In the Start tab, choose one of sample size,\\n    power, or detectable difference  and then complete the other fields that\\n    appear. Hover over the i icon for information on what is needed in each\\n    field. Then click the calculate button. A new tab will appear with\\n    sliders for altering the input variables, the desired output variable and\\n    various graphs.\\n  </p>\\n  <h5>Graphical Output</h5>\\n  <p>\\n    The graphs that can be generated are sample size vs. power, sample size\\n    vs. the detectable alternative hypothesis, power vs. sample size, and\\n    power vs. the detectable alternative hypothesis.  The y-axes of these\\n    graphs are always show the output variable. In addition, a graph of\\n    precision vs effect size is always given.  The red dot on the top two\\n    graphs can be dragged to enhance the users intuition on how the input and\\n    output variables interact.\\n  </p>\\n  <h5>Interpretation</h5>\\n  <p>\\n    The output also includes text that describes the power or sample size\\n    calculation in English, which may be a useful starting point for a\\n    description in a grant application.\\n  </p>\\n  <h5>Options gear wheel</h5>\\n  <p>\\n    Click on this icon to change the point size, line width and other graph\\n    options.\\n  </p>\\n  <p>\\n    <img src=\\\"assets/cc.png\\\"> &copy; William D. Dupont, Jeffrey D. Blume, W.\\n    Dale Plummer, Jeremy Stephens 2017\\n  </p>\\n  <p>\\n    Use of this program is restricted by a Creative Commons Attribution\\n    Non-Commercial Share Alike license. See\\n    <a href=\\\"https://creativecommons.org/licenses\\\">https://creativecommons.org/licenses</a>\\n    for details. We are grateful for support from Dr. Gordon R. Bernard and\\n    the Vanderbilt Institute for Clinical and Translational Research.\\n  </p>\\n</ng-template>\\n<ng-template [ngIf]=\\\"topic == 'start'\\\">\\n  <p>Select one of the following:</p>\\n  <h5>Sample size</h5>\\n  <p>\\n    For independent t-tests this is the number of experimental patients that\\n    must be studied to detect a true difference in population means &delta;\\n    with Type I error probability &alpha; given a standard deviation &sigma;\\n    and <em>m</em> controls per experimental patient. For paired t-tests it\\n    is the number of pairs of patients needed to detect a true difference in\\n    population means &delta; with Type I error probability &alpha; given a\\n    standard deviation &sigma;.\\n  </p>\\n  <h5>Power</h5>\\n  <p>\\n    For independent studies it is the probability of rejecting the null\\n    hypothesis with Type I error probability &alpha; given the specified\\n    sample size, a standard deviation &sigma; and a control/experimental\\n    patient ratio <em>m</em> when the true difference in population means is\\n    &delta;. For paired studies it is the probability of rejecting the null\\n    hypothesis with Type I error probability &alpha; given the specified\\n    sample size, a standard deviation &sigma; when the true difference in\\n    population means is &delta;.\\n  </p>\\n  <h5>Detectable alternative</h5>\\n  <p>\\n    A difference in population means that can be detected with the specified\\n    power and Type I error probability &alpha; given a standard deviation\\n    &sigma;, and the specified sample size.\\n  </p>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/help/help.component.html\n// module id = ./src/app/t-test/help/help.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 't-test-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent {\n  @Input() topic: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/help/help.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".plot {\\n  height: 80%;\\n  /*min-height: 500px;*/\\n  position: relative;\\n}\\n.without-footer {\\n  height: 100%;\\n}\\n\\ndiv.show-footer {\\n  position: absolute;\\n  right: 5px;\\n  bottom: 5px;\\n}\\n\\n.output-footer {\\n  position: relative;\\n  background-color: #e5e5e5;\\n  border: 1px solid #aaa;\\n  border-radius: 5px;\\n  /*padding: 10px 20px;*/\\n  /*text-align: justify;*/\\n  /*overflow: auto;*/\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n\\n.footer-buttons {\\n  position: absolute;\\n  top: 5px;\\n  right: 5px;\\n}\\n.footer-buttons i {\\n  margin: 0 3px;\\n}\\n\\n.dot {\\n  color: red;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/output-pane/output-pane.component.css\n// module id = ./src/app/t-test/output-pane/output-pane.component.css\n// module chunks = main","module.exports = \"<div id=\\\"t-test-output-pane-plots\\\" class=\\\"plot\\\" [class.without-footer]=\\\"!showFooter\\\">\\n  <t-test-plot #topLeft name=\\\"top-left\\\"\\n    [project]=\\\"project\\\"\\n    [hover-disabled]=\\\"hoverDisabled\\\"\\n    (modelChanged)=\\\"onModelChanged()\\\">\\n  </t-test-plot>\\n  <t-test-plot #topRight name=\\\"top-right\\\"\\n    [project]=\\\"project\\\"\\n    [hover-disabled]=\\\"hoverDisabled\\\"\\n    (modelChanged)=\\\"onModelChanged()\\\">\\n  </t-test-plot>\\n  <t-test-bottom-plot #bottom name=\\\"bottom\\\"\\n    [project]=\\\"project\\\"\\n    [disable-drag-target]=\\\"model?.output == 'delta'\\\"\\n    [disable-drag-ci]=\\\"model?.output == 'n'\\\"\\n    (modelChanged)=\\\"onModelChanged()\\\">\\n  </t-test-bottom-plot>\\n  <div class=\\\"show-footer\\\" *ngIf=\\\"project && !showFooter\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"toggleFooter(true)\\\">\\n      <i class=\\\"fa fa-envelope-open-o\\\" aria-hidden=\\\"true\\\" title=\\\"Show footer\\\"></i>\\n      Interpretation / Log\\n    </button>\\n  </div>\\n</div>\\n<div id=\\\"t-test-output-pane-footer\\\" class=\\\"output-footer\\\" *ngIf=\\\"project && showFooter\\\">\\n  <div class=\\\"footer-buttons\\\">\\n    <button type=\\\"button\\\" (click)=\\\"copyFooter()\\\" title=\\\"Copy to clipboard\\\">\\n      <i class=\\\"fa fa-clipboard\\\"></i>\\n    </button>\\n    <button type=\\\"button\\\" (click)=\\\"toggleFooter(false)\\\" title=\\\"Hide footer\\\">\\n      <i class=\\\"fa fa-window-minimize\\\"></i>\\n    </button>\\n  </div>\\n  <ngb-tabset #footerTabset type=\\\"pills\\\">\\n    <ngb-tab id=\\\"t-test-output-pane-interpretation\\\">\\n      <ng-template ngbTabTitle>\\n        <i *ngIf=\\\"project.models.length > 1\\\" class=\\\"fa fa-square\\\"\\n          [style.color]=\\\"getIndicatorColor()\\\"></i>\\n        Interpretation\\n      </ng-template>\\n      <ng-template ngbTabContent>\\n        {{model?.interpretation()}}\\n      </ng-template>\\n    </ngb-tab>\\n    <ngb-tab id=\\\"t-test-output-pane-log\\\" title=\\\"Log\\\">\\n      <ng-template ngbTabContent>\\n        <ng-template [ngIf]=\\\"!project\\\" [ngIfElse]=\\\"changeHistory\\\">\\n          There have been no changes yet.\\n        </ng-template>\\n        <ng-template #changeHistory>\\n          <ul class=\\\"log\\\">\\n            <li *ngFor=\\\"let changes of project.changeHistory\\\"\\n              [innerHTML]=\\\"project.describeChanges(changes)\\\">\\n            </li>\\n          </ul>\\n        </ng-template>\\n      </ng-template>\\n    </ngb-tab>\\n  </ngb-tabset>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/output-pane/output-pane.component.html\n// module id = ./src/app/t-test/output-pane/output-pane.component.html\n// module chunks = main","import { Component, ViewChild, TemplateRef, Input, Output, OnChanges, SimpleChanges, EventEmitter } from '@angular/core';\nimport { NgbModal, NgbTabset } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Project } from '../project';\nimport { TTest } from '../t-test';\nimport { PlotComponent } from '../plot/plot.component';\nimport { BottomPlotComponent } from '../bottom-plot/bottom-plot.component';\nimport { ExportPlotsComponent } from '../export-plots/export-plots.component';\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\n\n@Component({\n  selector: 't-test-output-pane',\n  templateUrl: './output-pane.component.html',\n  styleUrls: ['./output-pane.component.css'],\n  host: {\n    '(document:copy)': 'onCopy($event)'\n  }\n})\nexport class OutputPaneComponent implements OnChanges {\n  @Input('project') project: Project;\n  @Input('hover-disabled') hoverDisabled = false;\n  @Output() modelChanged = new EventEmitter();\n  model: TTest;\n  showFooter = true;\n  private copyMode: string;\n\n  @ViewChild('topLeft') topLeftPlot: PlotComponent;\n  @ViewChild('topRight') topRightPlot: PlotComponent;\n  @ViewChild('bottom') bottomPlot: BottomPlotComponent;\n  @ViewChild('saveDialog') saveDialog: TemplateRef<any>;\n  @ViewChild('footerTabset') footerTabset: NgbTabset;\n\n  constructor(\n    private modalService: NgbModal,\n    private plotOptions: PlotOptionsService,\n    private palette: PaletteService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!('project' in changes)) return;\n\n    if (this.project) {\n      this.model = this.project.getModel(this.project.selectedIndex);\n    } else {\n      this.model = undefined;\n    }\n  }\n\n  toggleFooter(value: boolean): void {\n    this.showFooter = value;\n    setTimeout(this.resize.bind(this), 1);\n  }\n\n  openSaveDialog(): void {\n    const modalRef = this.modalService.open(ExportPlotsComponent, { windowClass: 'export-plots' });\n    let component = modalRef.componentInstance;\n    component.project = this.project;\n    component.topLeftLegendXOffset = this.topLeftPlot.legendXOffset;\n    component.topLeftLegendYOffset = this.topLeftPlot.legendYOffset;\n    component.topRightLegendXOffset = this.topRightPlot.legendXOffset;\n    component.topRightLegendYOffset = this.topRightPlot.legendYOffset;\n  }\n\n  round(n: number): number {\n    return Math.round(n * 100) / 100;\n  }\n\n  ceil(n: number): number {\n    return Math.ceil(n);\n  }\n\n  resize(): void {\n    this.redrawPlots();\n  }\n\n  updateProject(): void {\n    if (this.project) {\n      this.model = this.project.getModel(this.project.selectedIndex);\n    }\n  }\n\n  redrawPlots(): void {\n    // Set a timeout here to let the UI resize if needed\n    setTimeout(() => {\n      this.topLeftPlot.redraw();\n      this.topRightPlot.redraw();\n      this.bottomPlot.redraw();\n    }, 1);\n  }\n\n  getIndicatorColor(): string {\n    return this.palette.getColor(this.project.selectedIndex, this.plotOptions.paletteTheme);\n  }\n\n  describeChanges(changes: any): string {\n    let result = [];\n    for (var key in changes) {\n      result.push(`<span class=\"code\">${key}</span> was changed to <span class=\"code\">${changes[key]}</span>`);\n    }\n    return result.join(\"; \");\n  }\n\n  copyFooter(): void {\n    document.execCommand('copy');\n  }\n\n  onCopy(event: any): void {\n    switch (this.footerTabset.activeId) {\n      case 't-test-output-pane-interpretation':\n        event.clipboardData.setData('text/plain', this.model.interpretation());\n        event.preventDefault();\n        break;\n      case 't-test-output-pane-log':\n        let text = this.project.changeHistory.\n          map(changes => this.project.describeChanges(changes, false)).\n          join(\"\\r\\n\");\n        event.clipboardData.setData('text/plain', text);\n        event.preventDefault();\n        break;\n    }\n  }\n\n  onModelChanged(): void {\n    this.modelChanged.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/output-pane/output-pane.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PaletteService {\n  private colors = {\n    typical: [\"#0000DD\", \"#DD0000\", \"#000000\", \"#006600\", \"#008888\"],\n    plasma:  [\"#0D0887\", \"#7E03A8\", \"#CC4678\", \"#F89441\", \"#F0F921\"],\n    viridis: [\"#440154\", \"#3B528B\", \"#21908C\", \"#5DC863\", \"#FDE725\"],\n    magma:   [\"#000004\", \"#51127C\", \"#B63679\", \"#FB8861\", \"#FCFDBF\"],\n    pattern: [\"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\"]\n  };\n\n  private patterns = {\n    typical: [\"any\"],\n    plasma:  [\"any\"],\n    viridis: [\"any\"],\n    magma:   [\"any\"],\n    pattern: [\"solid\", \"short-dash\", \"medium-dash\", \"long-dash\", \"dot\"]\n  };\n\n  getColor(index: number, name = \"typical\"): string {\n    if (!(name in this.colors)) {\n      throw new Error(`invalid palette: ${name}`);\n    }\n    if (index == -1) {\n      return \"\";\n    }\n\n    let colors = this.colors[name];\n    return colors[index % colors.length];\n  }\n\n  getPattern(index: number, name = \"typical\"): string {\n    if (!(name in this.patterns)) {\n      throw new Error(`invalid palette: ${name}`);\n    }\n    if (index == -1) {\n      return \"\";\n    }\n\n    let patterns = this.patterns[name];\n    return patterns[index % patterns.length];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/palette.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PlotOptionsService {\n  height: number;\n  width: number;\n  fontFamily = \"\";\n  fontSize = 1;\n  axisFontSize = 1;\n  lineWidth = 1;\n  axisLineWidth = 1;\n  paletteTheme = \"typical\";\n  lineStyle = \"solid\";\n  showLegendBox = false;\n\n  reset(): void {\n    Object.assign(this, new PlotOptionsService());\n  }\n\n  getFontFamily(): string {\n    if (this.fontFamily == '') {\n      return '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif';\n    } else {\n      return this.fontFamily;\n    }\n  }\n\n  getFontSize(): number {\n    return this.fontSize * 18;\n  }\n\n  getAxisFontSize(): number {\n    return this.axisFontSize * 15;\n  }\n\n  getAxisLineWidth(): number {\n    return this.axisLineWidth * 1.5;\n  }\n\n  getLineWidth(): number {\n    return this.lineWidth * 3;\n  }\n\n  dashArray(style?: string): string {\n    if (!style || style == \"any\") {\n      style = this.lineStyle;\n    }\n    switch (style) {\n      case \"solid\":\n        return \"\";\n      case \"short-dash\":\n        return \"5,5\";\n      case \"medium-dash\":\n        return \"10,10\";\n      case \"long-dash\":\n        return \"15,15\";\n      case \"dot\":\n        return \"1,5\";\n    }\n  }\n\n  lineCap(style?: string): string {\n    if (!style || style == \"any\") {\n      style = this.lineStyle;\n    }\n    if (style == \"dot\") {\n      return \"round\";\n    }\n    return \"\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/plot-options.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"fieldset {\\n  border: 1px solid #bbb;\\n  border-radius: 5px;\\n  padding: 10px;\\n  margin: 10px;\\n}\\n\\nfieldset legend {\\n  font-size: inherit;\\n  font-weight: bold;\\n  display: table;\\n  width: auto;\\n}\\n\\n.form-group {\\n  padding: 0 5px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/plot-options/plot-options.component.css\n// module id = ./src/app/t-test/plot-options/plot-options.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"plotOptions && project\\\" class=\\\"content\\\">\\n  <fieldset>\\n    <legend>Global</legend>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"plot-font-family\\\">Font family</label>\\n      <select id=\\\"plot-font-family\\\" class=\\\"form-control\\\"\\n        [ngModel]=\\\"plotOptions.fontFamily\\\" (ngModelChange)=\\\"changeAttribute('fontFamily', $event)\\\">\\n        <option value=\\\"\\\">Default</option>\\n        <option value=\\\"serif\\\">Serif</option>\\n        <option value=\\\"sans\\\">Sans-serif</option>\\n        <option value=\\\"monospace\\\">Monospace</option>\\n        <option>Bungee Shade</option>\\n        <option>Sancreek</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"plot-palette-theme\\\">Color palette</label>\\n      <select id=\\\"plot-palette-theme\\\" class=\\\"form-control\\\"\\n        [ngModel]=\\\"plotOptions.paletteTheme\\\" (ngModelChange)=\\\"changeAttribute('paletteTheme', $event)\\\">\\n        <option value=\\\"typical\\\">Default</option>\\n        <option value=\\\"plasma\\\">Plasma</option>\\n        <option value=\\\"viridis\\\">Viridis</option>\\n        <option value=\\\"magma\\\">Magma</option>\\n        <option value=\\\"pattern\\\">Pattern</option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-font-size\\\">Font size: {{plotOptions.fontSize}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-font-size\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [ngModel]=\\\"plotOptions.fontSize\\\" (ngModelChange)=\\\"changeAttribute('fontSize', $event)\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-axis-font-size\\\">Axis font size: {{plotOptions.axisFontSize}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-axis-font-size\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [ngModel]=\\\"plotOptions.axisFontSize\\\" (ngModelChange)=\\\"changeAttribute('axisFontSize', $event)\\\" />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-line-width\\\">Line width: {{plotOptions.lineWidth}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-line-width\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [ngModel]=\\\"plotOptions.lineWidth\\\" (ngModelChange)=\\\"changeAttribute('lineWidth', $event)\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <label for=\\\"plot-axis-line-width\\\">Axis line width: {{plotOptions.axisLineWidth}}</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"plot-axis-line-width\\\" class=\\\"form-control\\\"\\n            type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"2\\\" step=\\\"0.1\\\"\\n            [ngModel]=\\\"plotOptions.axisLineWidth\\\" (ngModelChange)=\\\"changeAttribute('axisLineWidth', $event)\\\" />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"plot-line-style\\\">Line style</label>\\n      <select id=\\\"plot-line-style\\\" class=\\\"form-control\\\"\\n        [ngModel]=\\\"plotOptions.lineStyle\\\" (ngModelChange)=\\\"changeAttribute('lineStyle', $event)\\\">\\n        <option value=\\\"solid\\\">Solid</option>\\n        <option value=\\\"short-dash\\\">Short Dash</option>\\n        <option value=\\\"medium-dash\\\">Medium Dash</option>\\n        <option value=\\\"long-dash\\\">Long Dash</option>\\n        <option value=\\\"dot\\\">Dotted</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-check\\\">\\n      <label class=\\\"form-check-label\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [ngModel]=\\\"plotOptions.showLegendBox\\\" (ngModelChange)=\\\"changeAttribute('showLegendBox', $event)\\\" />\\n        Display legend background\\n      </label>\\n    </div>\\n  </fieldset>\\n  <fieldset>\\n    <legend *ngIf=\\\"model.output == 'n' || model.output == 'nByCI'\\\">Sample Size</legend>\\n    <legend *ngIf=\\\"model.output == 'power'\\\">Power</legend>\\n    <legend *ngIf=\\\"model.output == 'delta'\\\">Detectable Alternative</legend>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-top-y-min\\\">Minimum</label>\\n        <div class=\\\"input-group\\\">\\n          <ng-template [ngIf]=\\\"model.output == 'n' || model.output == 'nByCI'\\\">\\n            <input *ngIf=\\\"project.nRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.nRange.max - 1) | round\\\"\\n              [ngModel]=\\\"project.nRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('n', 'min', $event)\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n            <input *ngIf=\\\"project.powerRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.powerRange.max - 0.01) | round\\\"\\n              [ngModel]=\\\"project.powerRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('power', 'min', $event)\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n            <input *ngIf=\\\"project.deltaRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.deltaRange.max - 0.01) | round\\\"\\n              [ngModel]=\\\"project.deltaRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('delta', 'min', $event)\\\" />\\n          </ng-template>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-top-y-max\\\">Maximum</label>\\n        <div class=\\\"input-group\\\">\\n          <ng-template [ngIf]=\\\"model.output == 'n' || model.output == 'nByCI'\\\">\\n            <input *ngIf=\\\"project.nRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.nRange.min + 1) | round\\\"\\n              [ngModel]=\\\"project.nRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('n', 'max', $event)\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n            <input *ngIf=\\\"project.powerRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.powerRange.min + 0.01) | round\\\"\\n              [ngModel]=\\\"project.powerRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('power', 'max', $event)\\\" />\\n          </ng-template>\\n          <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n            <input *ngIf=\\\"project.deltaRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.deltaRange.min + 0.01) | round\\\"\\n              [ngModel]=\\\"project.deltaRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('delta', 'max', $event)\\\" />\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n  <fieldset>\\n    <ng-template [ngIf]=\\\"model.output == 'n' || model.output == 'nByCI'\\\">\\n      <legend>Sample Size vs. Power</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.powerRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.powerRange.max - 0.01) | round\\\"\\n              [ngModel]=\\\"project.powerRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('power', 'min', $event)\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.powerRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.powerRange.min + 0.01) | round\\\"\\n              [ngModel]=\\\"project.powerRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('power', 'max', $event)\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n      <legend>Power vs. Sample Size</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.nRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.nRange.max - 1) | round\\\"\\n              [ngModel]=\\\"project.nRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('n', 'min', $event)\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.nRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.nRange.min + 1) | round\\\"\\n              [ngModel]=\\\"project.nRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('n', 'max', $event)\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n      <legend>Detectable Alternative vs. Sample Size</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.nRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.nRange.max - 1) | round\\\"\\n              [ngModel]=\\\"project.nRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('n', 'min', $event)\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.nRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.nRange.min + 1) | round\\\"\\n              [ngModel]=\\\"project.nRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('n', 'max', $event)\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </fieldset>\\n  <fieldset>\\n    <ng-template [ngIf]=\\\"model.output == 'n' || model.output == 'nByCI'\\\">\\n      <legend>Sample Size vs. Detectable Alternative</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.deltaRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.deltaRange.max - 1) | round\\\"\\n              [ngModel]=\\\"project.deltaRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('delta', 'min', $event)\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.deltaRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.deltaRange.min - 1) | round\\\"\\n              [ngModel]=\\\"project.deltaRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('delta', 'max', $event)\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'power'\\\">\\n      <legend>Power vs. Detectable Alternative</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.deltaRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.deltaRange.max - 1) | round\\\"\\n              [ngModel]=\\\"project.deltaRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('delta', 'min', $event)\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-right-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.deltaRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.deltaRange.min - 1) | round\\\"\\n              [ngModel]=\\\"project.deltaRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('delta', 'max', $event)\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"model.output == 'delta'\\\">\\n      <legend>Detectable Alternative vs. Power</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-min\\\">X minimum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.powerRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.powerRange.max - 0.01) | round\\\"\\n              [ngModel]=\\\"project.powerRange.min | round\\\"\\n              (ngModelChange)=\\\"changeRange('power', 'min', $event)\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <label for=\\\"plot-top-left-x-max\\\">X maximum</label>\\n          <div class=\\\"input-group\\\">\\n            <input *ngIf=\\\"project.powerRange\\\" class=\\\"form-control\\\"\\n              type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.powerRange.min + 0.01) | round\\\"\\n              [ngModel]=\\\"project.powerRange.max | round\\\"\\n              (ngModelChange)=\\\"changeRange('power', 'max', $event)\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </fieldset>\\n  <fieldset>\\n    <legend>Precision vs. Parameter Space</legend>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-bottom-x-min\\\">X minimum</label>\\n        <div class=\\\"input-group\\\">\\n          <input *ngIf=\\\"project.pSpaceRange\\\" class=\\\"form-control\\\"\\n            type=\\\"number\\\" step=\\\"0.01\\\" [max]=\\\"(project.pSpaceRange.max - 1) | round\\\"\\n            [ngModel]=\\\"project.pSpaceRange.min | round\\\"\\n            (ngModelChange)=\\\"changeRange('pSpace', 'min', $event)\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label for=\\\"plot-bottom-x-max\\\">X maximum</label>\\n        <div class=\\\"input-group\\\">\\n          <input *ngIf=\\\"project.pSpaceRange\\\" class=\\\"form-control\\\"\\n            type=\\\"number\\\" step=\\\"0.01\\\" [min]=\\\"(project.pSpaceRange.min + 1) | round\\\"\\n            [ngModel]=\\\"project.pSpaceRange.max | round\\\"\\n            (ngModelChange)=\\\"changeRange('pSpace', 'max', $event)\\\" />\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"reset()\\\">\\n    Reset all settings\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/plot-options/plot-options.component.html\n// module id = ./src/app/t-test/plot-options/plot-options.component.html\n// module chunks = main","import { Component, Input, Output, OnChanges, SimpleChanges, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Project } from '../project';\nimport { TTest } from '../t-test';\nimport { PlotOptionsService } from '../plot-options.service';\n\n@Component({\n  selector: 't-test-plot-options',\n  templateUrl: './plot-options.component.html',\n  styleUrls: ['./plot-options.component.css']\n})\nexport class PlotOptionsComponent implements OnChanges {\n  @Input('project') project: Project;\n  @Output() optionsChanged = new EventEmitter();\n  model: TTest;\n\n  constructor(private plotOptions: PlotOptionsService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.project) {\n      this.model = this.project.getModel(0);\n    }\n  }\n\n  reset(): void {\n    this.plotOptions.reset();\n  }\n\n  changeAttribute(name: string, value: any): void {\n    this.plotOptions[name] = value;\n    this.optionsChanged.emit();\n  }\n\n  changeRange(name: string, which: string, value: number): void {\n    this.project[`${name}Range`][which] = value;\n    this.optionsChanged.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/plot-options/plot-options.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".target {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n\\n.legend {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/plot/plot.component.css\n// module id = ./src/app/t-test/plot/plot.component.css\n// module chunks = main","module.exports = \"<svg #plot\\n  [style.fontFamily]=\\\"plotOptions.getFontFamily()\\\"\\n  style.fontSize=\\\"{{plotOptions.getFontSize()}}px\\\"\\n  [attr.class]=\\\"name\\\" [attr.width]=\\\"fixedWidth\\\" [attr.height]=\\\"fixedHeight\\\"\\n  [attr.viewBox]=\\\"viewBox\\\">\\n\\n  <ng-template [ngIf]=\\\"x && y && project\\\">\\n    <text text-anchor=\\\"middle\\\"\\n      [attr.x]=\\\"innerWidth / 2 + leftMargin\\\"\\n      [attr.y]=\\\"height - (plotOptions.getFontSize() / 2)\\\">\\n      {{x.title}}\\n    </text>\\n    <text text-anchor=\\\"middle\\\"\\n      [attr.x]=\\\"-(innerHeight / 2 + topMargin)\\\"\\n      [attr.y]=\\\"plotOptions.getFontSize()\\\"\\n      transform=\\\"rotate(-90)\\\">\\n      {{y.title}}\\n    </text>\\n    <text text-anchor=\\\"middle\\\" font-weight=\\\"bold\\\"\\n      [attr.x]=\\\"innerWidth / 2 + leftMargin\\\"\\n      [attr.y]=\\\"plotOptions.getFontSize()\\\">\\n      {{title}}\\n    </text>\\n\\n    <g *ngFor=\\\"let path of paths; trackBy: trackById\\\"\\n      [attr.transform]=\\\"translate(leftMargin, topMargin)\\\">\\n      <path\\n        [attr.id]=\\\"path.id\\\"\\n        [attr.stroke]=\\\"path.color\\\"\\n        [attr.stroke-width]=\\\"plotOptions.getLineWidth()\\\"\\n        [attr.stroke-dasharray]=\\\"path.dashArray\\\"\\n        [attr.stroke-linecap]=\\\"path.lineCap\\\"\\n        [attr.stroke-opacity]=\\\"path.opacity\\\"\\n        fill=\\\"none\\\" />\\n    </g>\\n\\n    <g id=\\\"{{name}}-x-axis\\\"\\n      [attr.transform]=\\\"translate(leftMargin, innerHeight + topMargin)\\\"></g>\\n    <g id=\\\"{{name}}-y-axis\\\"\\n      [attr.transform]=\\\"translate(leftMargin, topMargin)\\\"></g>\\n\\n    <rect [attr.transform]=\\\"translate(leftMargin, topMargin)\\\"\\n      [attr.width]=\\\"innerWidth\\\" [attr.height]=\\\"innerHeight\\\"\\n      fill=\\\"none\\\" pointer-events=\\\"all\\\"\\n      (mouseout)=\\\"hideHoverInfo()\\\"\\n      (mousemove)=\\\"hover($event)\\\" />\\n\\n    <g *ngIf=\\\"!hideTarget\\\">\\n      <ng-template [ngIf]=\\\"!hideDropLines\\\">\\n        <g *ngFor=\\\"let path of dropPaths; index as dpIndex; trackBy: trackByIndex\\\"\\n          [attr.transform]=\\\"translate(leftMargin, topMargin)\\\">\\n          <path id=\\\"{{name}}-target-drop-{{dpIndex}}\\\"\\n            stroke=\\\"red\\\"\\n            [attr.stroke-width]=\\\"plotOptions.getLineWidth() / 2\\\"\\n            stroke-dasharray=\\\"5, 5\\\"\\n            fill=\\\"none\\\" />\\n        </g>\\n      </ng-template>\\n      <circle id=\\\"{{name}}-target\\\" class=\\\"target\\\" r=\\\"5\\\"\\n        [attr.transform]=\\\"translate(leftMargin, topMargin)\\\"\\n        fill=\\\"red\\\"\\n        (mousemove)=\\\"hover($event, target)\\\" />\\n    </g>\\n\\n    <g id=\\\"{{name}}-legend\\\" class=\\\"legend\\\"\\n       *ngIf=\\\"project.models.length > 1\\\"\\n       [attr.transform]=\\\"translate(leftMargin + 15 + legendXOffset, topMargin + 15 + legendYOffset)\\\"\\n       font-size=\\\"smaller\\\" (dblclick)=\\\"resetLegend()\\\">\\n      <path id=\\\"{{name}}-legend-box\\\"\\n            fill=\\\"white\\\" [attr.fill-opacity]=\\\"plotOptions.showLegendBox ? 0.8 : 0\\\"\\n            stroke=\\\"black\\\" [attr.stroke-opacity]=\\\"plotOptions.showLegendBox ? 1 : 0\\\" />\\n      <g id=\\\"{{name}}-legend-labels\\\">\\n        <g *ngFor=\\\"let model of project.models; index as i; trackBy: trackByIndex\\\"\\n           [attr.transform]=\\\"translate(5, 20 * plotOptions.fontSize * i)\\\">\\n          <path\\n            d=\\\"m0,0 l45,0\\\"\\n            [attr.stroke]=\\\"getPathColor(i)\\\"\\n            [attr.stroke-width]=\\\"plotOptions.getLineWidth()\\\"\\n            [attr.stroke-dasharray]=\\\"getDashArray(i)\\\"\\n            [attr.stroke-linecap]=\\\"getLineCap(i)\\\"\\n            fill=\\\"none\\\" />\\n          <text x=\\\"50\\\" y=\\\"5\\\">{{model.name}}</text>\\n        </g>\\n      </g>\\n    </g>\\n\\n    <g *ngIf=\\\"isHoverInfoActive()\\\"\\n      [attr.transform]=\\\"translate(leftMargin + hoverX, topMargin + hoverY)\\\">\\n      <circle *ngIf=\\\"!isHoverInfoTarget()\\\" r=\\\"4\\\" fill=\\\"none\\\" stroke=\\\"blue\\\" />\\n      <path id=\\\"{{name}}-hover-info\\\"\\n        stroke=\\\"black\\\" stroke-width=\\\"1\\\" fill=\\\"white\\\" fill-opacity=\\\"0.8\\\" />\\n      <text id=\\\"{{name}}-hover-coords\\\" y=\\\"-2.5em\\\" font-family=\\\"monospace\\\" text-anchor=\\\"middle\\\">\\n        <tspan style=\\\"white-space: pre\\\">{{x.sym}}: {{hoverPoint.x | formatFixed:[hoverPoint.y]}}</tspan><tspan x=\\\"0\\\" dy=\\\"1em\\\" style=\\\"white-space: pre\\\">{{y.sym}}: {{hoverPoint.y | formatFixed:[hoverPoint.x]}}</tspan>\\n      </text>\\n    </g>\\n  </ng-template>\\n</svg>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/plot/plot.component.html\n// module id = ./src/app/t-test/plot/plot.component.html\n// module chunks = main","import {\n  Component, Input, Output, OnChanges, SimpleChanges, AfterViewChecked,\n  ViewChild, ElementRef, ViewEncapsulation, EventEmitter\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as d3 from 'd3';\n\nimport { AbstractPlotComponent, Draw } from '../abstract-plot.component';\nimport { Range } from '../range';\nimport { Point } from '../point';\nimport { Project } from '../project';\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\n\ninterface Param {\n  name: string;\n  target?: number;\n  range: Range;\n  title: string;\n  sym: string;\n}\n\ninterface Path {\n  index: number;\n  id: string;\n  path: string;\n  color: string;\n  dashArray: string;\n  lineCap: string;\n  opacity: number;\n  primary: boolean;\n}\n\nenum HoverInfo {\n  Disabled,\n  NonTarget,\n  Target\n}\n\n@Component({\n  selector: 't-test-plot',\n  templateUrl: './plot.component.html',\n  styleUrls: ['./plot.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PlotComponent extends AbstractPlotComponent implements OnChanges, AfterViewChecked {\n  @Input('project') project: Project;\n  @Input('hover-disabled') hoverDisabled = false;\n  @Input('hide-drop-lines') hideDropLines = false;\n  @Input('hide-target') hideTarget = false;\n  @Input('disable-drag') disableDrag = false;\n  @Input('legend-x-offset') legendXOffset = 0;\n  @Input('legend-y-offset') legendYOffset = 0;\n  @Output() modelChanged = new EventEmitter();\n\n  constructor(\n    public plotOptions: PlotOptionsService,\n    public palette: PaletteService\n  ) {\n    super(plotOptions, palette);\n  }\n\n  leftMargin: number = 50;\n  rightMargin: number = 50;\n  topMargin: number = 50;\n  bottomMargin: number = 50;\n  yAxisWidth: number = 10;\n  xAxisHeight: number = 10;\n  viewBox = \"0 0 0 0\";\n  x: Param;\n  y: Param;\n  dataKey: string;\n  plotData: any[];\n  paths: Path[];\n  dropPaths: string[];\n  mainData: any[];\n  target: Point;\n  xBisector: any;\n  hoverX: number;\n  hoverY: number;\n  hoverPoint: Point;\n  hoverInfo = HoverInfo.Disabled;\n  lastDragEvent: any;\n\n  targetDragging = false;\n  needDraw = Draw.No;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setup();\n  }\n\n  ngAfterViewChecked(): void {\n    this.draw();\n  }\n\n  redraw(): void {\n    this.setup();\n  }\n\n  hover(event: any, target?: Point): void {\n    var dim = event.target.getBoundingClientRect();\n    var x = event.clientX - dim.left;\n    var y = event.clientY - dim.top;\n\n    this.hoverPoint = undefined;\n    this.hoverInfo = HoverInfo.Disabled;\n    if (target) {\n      this.hoverPoint = target;\n      this.hoverInfo = HoverInfo.Target;\n\n    } else if (!this.hoverDisabled) {\n      let index = this.xBisector(this.mainData, this.xScale.invert(x));\n      let point = this.mainData[index];\n      if (point) {\n        this.hoverPoint = point;\n        this.hoverInfo = HoverInfo.NonTarget;\n      }\n    }\n\n    if (this.hoverPoint) {\n      this.hoverX = this.xScale(this.hoverPoint.x);\n      this.hoverY = this.yScale(this.hoverPoint.y);\n      this.needDraw = Draw.Hover;\n    }\n  }\n\n  hoverInfoY(): string {\n    if (this.hoverY < this.target.y) {\n      return \"-3.5em\";\n    }\n    return \"1em\";\n  }\n\n  trackByIndex(index: number, path: Path): any {\n    return index;\n  }\n\n  trackById(index: number, path: Path): any {\n    return path.id;\n  }\n\n  isHoverInfoActive(): boolean {\n    return this.hoverInfo != HoverInfo.Disabled;\n  }\n\n  isHoverInfoTarget(): boolean {\n    return this.hoverInfo == HoverInfo.Target;\n  }\n\n  hideHoverInfo(): void {\n    this.hoverInfo = HoverInfo.Disabled;\n  }\n\n  getPathColor(index: number): string {\n    return this.palette.getColor(index, this.plotOptions.paletteTheme);\n  }\n\n  getDashArray(index: number): string {\n    let pattern = this.palette.getPattern(index, this.plotOptions.paletteTheme);\n    return this.plotOptions.dashArray(pattern);\n  }\n\n  getLineCap(index: number): string {\n    let pattern = this.palette.getPattern(index, this.plotOptions.paletteTheme);\n    return this.plotOptions.lineCap(pattern);\n  }\n\n  resetLegend(): void {\n    this.legendXOffset = 0;\n    this.legendYOffset = 0;\n  }\n\n  private setupDimensions(): void {\n    // margin\n    this.yAxisWidth = 10 +\n      this.plotOptions.getAxisLineWidth() +   // y axis line width\n      this.plotOptions.getAxisFontSize() + 9; // y axis tick (font + tick)\n    this.xAxisHeight = 10 +\n      this.plotOptions.getAxisLineWidth() +         // x axis line width\n      (this.plotOptions.getAxisFontSize() / 2) + 9; // x axis tick (font + tick)\n\n    this.leftMargin = this.plotOptions.getFontSize() + this.yAxisWidth + 10;\n    this.rightMargin = 10;\n    this.topMargin = this.plotOptions.getFontSize() + 10;\n    this.bottomMargin = this.plotOptions.getFontSize() + this.xAxisHeight + 10;\n\n    // dimensions\n    if (this.fixedWidth) {\n      this.width = this.fixedWidth;\n    } else {\n      this.width = this.getDimension('width');\n    }\n    if (this.fixedHeight) {\n      this.height = this.fixedHeight;\n    } else {\n      this.height = this.getDimension('height');\n    }\n    this.viewBox = `0 0 ${this.width} ${this.height}`;\n    this.innerWidth  = this.width  - this.leftMargin - this.rightMargin;\n    this.innerHeight = this.height - this.topMargin - this.bottomMargin;\n  }\n\n  private setupParams(): boolean {\n    // Setup parameters. Dimensions should be setup by this point.\n    let model = this.project.getModel(this.project.selectedIndex);\n    if (model.output == 'n' || model.output == 'nByCI') {\n      if (this.name == 'top-left' || this.name == 'top-left-export') {\n        // Sample Size vs. Power\n        this.x = {\n          name: 'power', range: this.project.powerRange, target: model.power,\n          title: 'Power', sym: '1-β'\n        };\n        this.dataKey = 'nVsPower';\n\n      } else if (this.name == 'top-right' || this.name == 'top-right-export') {\n        // Sample Size vs. Detectable Alternative\n        this.x = {\n          name: 'delta', range: this.project.deltaRange, target: model.delta,\n          title: 'Detectable Alternative', sym: 'δ'\n        };\n        this.dataKey = 'nVsDelta';\n\n      } else {\n        return false;\n      }\n\n      this.y = {\n        name: 'n', range: this.project.nRange, target: model.n,\n        title: 'Sample Size', sym: 'n'\n      };\n    } else if (model.output == 'power') {\n      if (this.name == 'top-left' || this.name == 'top-left-export') {\n        // Power vs. Sample Size\n        this.x = {\n          name: 'n', range: this.project.nRange, target: model.n,\n          title: 'Sample Size', sym: 'n'\n        };\n        this.y = {\n          name: 'power', range: this.project.powerRange, target: model.power,\n          title: 'Power', sym: '1-β'\n        };\n        this.dataKey = 'powerVsN';\n\n      } else if (this.name == 'top-right' || this.name == 'top-right-export') {\n        // Power vs. Detectable Alternative\n        this.x = {\n          name: 'delta', range: this.project.deltaRange, target: model.delta,\n          title: 'Detectable Alternative', sym: 'δ'\n        };\n        this.y = {\n          name: 'power', range: this.project.powerRange, target: model.power,\n          title: 'Power', sym: '1-β'\n        };\n        this.dataKey = 'powerVsDelta';\n\n      } else {\n        return false;\n      }\n    } else if (model.output == 'delta') {\n      if (this.name == 'top-left' || this.name == 'top-left-export') {\n        // Detectable Alternative vs. Sample Size\n        this.x = {\n          name: 'n', range: this.project.nRange, target: model.n,\n          title: 'Sample Size', sym: 'n'\n        };\n        this.dataKey = 'deltaVsN';\n\n      } else if (this.name == 'top-right' || this.name == 'top-right-export') {\n        // Detectable Alternative vs. Power\n        this.x = {\n          name: 'power', range: this.project.powerRange, target: model.power,\n          title: 'Power', sym: '1-β'\n        };\n        this.dataKey = 'deltaVsPower';\n\n      } else {\n        return false;\n      }\n\n      this.y = {\n        name: 'delta', range: this.project.deltaRange, target: model.delta,\n        title: 'Detectable Alternative', sym: 'δ'\n      };\n    } else {\n      return false;\n    }\n\n    // format symbol to make widths identical\n    while (this.x.sym.length < this.y.sym.length) {\n      this.x.sym = ' ' + this.x.sym;\n    }\n    while (this.y.sym.length < this.x.sym.length) {\n      this.y.sym = ' ' + this.y.sym;\n    }\n\n    this.title = `${this.y.title} vs. ${this.x.title}`;\n    return true;\n  }\n\n  private setupPlotData(): boolean {\n    this.plotData = this.project.models.map(m => m[this.dataKey]);\n\n    // Prepare main data for bisection during target point dragging.\n    this.mainData = this.plotData[this.project.selectedIndex].slice();\n    this.mainData.sort((a, b) => a.x - b.x);\n    this.xBisector = d3.bisector(point => point.x).left;\n\n    return true;\n  }\n\n  private setupScales(): void {\n    this.xScale = d3.scaleLinear().\n      domain(this.x.range.toArray()).\n      range([0, this.innerWidth]);\n\n    this.yScale = d3.scaleLinear().\n      domain(this.y.range.toArray().reverse()).\n      range([0, this.innerHeight]);\n  }\n\n  private setupTarget(): void {\n    let model = this.project.getModel(this.project.selectedIndex);\n    this.target = { x: this.x.target, y: this.y.target } as Point;\n  }\n\n  private setupPaths(): void {\n    this.paths = this.plotData.map((d, i) => {\n      let id = `${this.name}-path-${i}`\n      let path = this.getPath(d, 'x', 'y');\n      let color = this.getPathColor(i);\n      let dashArray = this.getDashArray(i);\n      let lineCap = this.getLineCap(i);\n      let primary = this.project.selectedIndex == i;\n      let result = {\n        index: i, id: id, path: path, color: color, dashArray: dashArray,\n        lineCap: lineCap, opacity: primary ? 1 : 0.7, primary: primary\n      } as Path;\n      return result;\n    });\n\n    // order paths in reverse so that they are drawn properly, put the selected\n    // line at the end\n    this.paths.sort((a, b) => {\n      if (a.primary) return 1;\n      if (b.primary) return -1;\n      return b.index - a.index;\n    });\n  }\n\n  private setupDropPaths(): void {\n    this.dropPaths = [];\n    let path = d3.line().\n      x((d, i) => this.xScale(d.x)).\n      y((d, i) => this.yScale(d.y));\n\n    let xData = [\n      { x: this.target.x, y: this.yScale.domain()[1] },\n      { x: this.target.x, y: this.target.y }\n    ];\n    this.dropPaths.push(path(xData));\n\n    let yData = [\n      { x: this.xScale.domain()[0], y: this.target.y },\n      { x: this.target.x, y: this.target.y }\n    ];\n    this.dropPaths.push(path(yData));\n  }\n\n  protected setup(): void {\n    if (!this.project) {\n      return;\n    }\n\n    this.setupDimensions();\n    if (!this.setupParams()) {\n      // setting up parameters failed\n      return;\n    }\n    if (!this.setupPlotData()) {\n      // setting up plot data failed\n      return;\n    }\n    this.setupScales();\n    this.setupTarget();\n    this.setupPaths();\n    this.setupDropPaths();\n\n    if (this.lastDragEvent) {\n      this.hover(this.lastDragEvent);\n      this.lastDragEvent = undefined;\n    }\n\n    this.needDraw = Draw.Yes;\n  }\n\n  private draw(): void {\n    if (this.needDraw == Draw.No) {\n      return;\n    }\n\n    let svg = d3.select(this.plotElement.nativeElement);\n\n    if (this.hoverInfo != HoverInfo.Disabled) {\n      // draw hover info box\n      let box = svg.select(`#${this.name}-hover-info`);\n      let coords = svg.select(`#${this.name}-hover-coords`);\n      if (box.size() > 0 && coords.size() > 0) {\n        let dim = coords.node().getBBox();\n        let left = dim.x - 5, right = dim.x + dim.width + 5;\n        let unit = dim.width / 16;\n        let lmid = left + (7 * unit) + 5, rmid = left + (9 * unit) + 5;\n        let mid = left + (8 * unit) + 5;\n        let top = dim.y - 5, bottom = dim.y + dim.height + 5;\n        box.attr(\"d\", d3.line()([\n          [left, top], [right, top], [right, bottom],\n          [rmid, bottom], [mid, bottom + 5], [lmid, bottom],\n          [left, bottom], [left, top]\n        ]));\n      }\n    }\n\n    if (this.needDraw == Draw.Hover) {\n      // only need to draw hover box\n      this.needDraw = Draw.No;\n      return;\n    }\n\n    let t = svg.transition();\n\n    // axes (drawn by d3)\n    let xAxis = d3.axisBottom(this.xScale).ticks(Math.floor(this.innerWidth / 75));\n    t.select(`#${this.name}-x-axis`).\n      call(xAxis).\n      attr(\"font-size\", `${this.plotOptions.getAxisFontSize()}px`).\n      attr(\"stroke-width\", this.plotOptions.getAxisLineWidth());\n\n    let yAxis = d3.axisLeft(this.yScale).ticks(Math.floor(this.innerHeight / 75));\n    t.select(`#${this.name}-y-axis`).\n      call(yAxis).\n      attr(\"font-size\", `${this.plotOptions.getAxisFontSize()}px`).\n      attr(\"stroke-width\", this.plotOptions.getAxisLineWidth());\n\n    // paths\n    for (let i = 0, ilen = this.paths.length; i < ilen; i++) {\n      let path = t.select(`#${this.paths[i].id}`);\n      if (!path.attr(\"d\")) {\n        path.attr(\"d\", this.paths[i].path);\n      } else {\n        path.attrTween(\"d\", this.pathTween(this.paths[i].path, 4))\n      }\n    }\n\n    // target\n    let targetId = `#${this.name}-target`;\n    t.select(targetId).\n      attr('cx', this.xScale(this.target.x)).\n      attr('cy', this.yScale(this.target.y));\n\n    // drop paths\n    for (let i = 0, ilen = this.dropPaths.length; i < ilen; i++) {\n      t.select(`${targetId}-drop-${i}`).attr(\"d\", this.dropPaths[i]);\n    }\n\n    // drag\n    if (!this.disableDrag) {\n      let target = svg.select(targetId);\n      let targetDrag = d3.drag().\n        on(\"start\", this.dragTargetStart.bind(this)).\n        on(\"drag\", this.dragTarget.bind(this)).\n        on(\"end\", this.dragTargetEnd.bind(this));\n      target.call(targetDrag);\n    }\n\n    // legend box\n    if (this.paths.length > 1) {\n      let box = svg.select(`#${this.name}-legend-box`);\n      let labels = svg.select(`#${this.name}-legend-labels`);\n      if (box.size() > 0 && labels.size() > 0) {\n        let dim = labels.node().getBBox();\n        let left = dim.x - 5, right = dim.x + dim.width + 5;\n        let top = dim.y - 5, bottom = dim.y + dim.height + 5;\n        box.attr(\"d\", d3.line()([\n          [left, top], [right, top], [right, bottom],\n          [left, bottom], [left, top]\n        ]));\n      }\n\n      let legend = svg.select(`#${this.name}-legend`);\n      let legendDrag = d3.drag().\n        on(\"drag\", this.dragLegend.bind(this));\n      legend.call(legendDrag);\n    }\n\n    this.needDraw = Draw.No;\n  }\n\n  private dragTargetStart(): void {\n    this.targetDragging = true;\n  }\n\n  private dragTarget(event: any): void {\n    let x = this.xScale.invert(d3.event.x - this.leftMargin);\n    if (x < this.x.range.min) {\n      x = this.x.range.min;\n    } else if (x > this.x.range.max) {\n      x = this.x.range.max;\n    }\n    let index = this.xBisector(this.mainData, x);\n    let point = this.mainData[index];\n    if (!point) return;\n\n    let svg = d3.select(this.plotElement.nativeElement);\n    let targetId = `#${this.name}-target`;\n    this.target = point;\n    this.setupDropPaths();\n\n    svg.select(targetId).\n      attr(\"cx\", this.xScale(this.target.x)).\n      attr(\"cy\", this.yScale(this.target.y));\n\n    for (let i = 0, ilen = this.dropPaths.length; i < ilen; i++) {\n      svg.select(`${targetId}-drop-${i}`).attr(\"d\", this.dropPaths[i]);\n    }\n  }\n\n  private dragTargetEnd(event: any): void {\n    this.targetDragging = false;\n\n    if (this.project && this.x.name) {\n      this.lastDragEvent = event;\n      this.project.updateModel(this.project.selectedIndex, this.x.name, this.target.x).\n        then(() => {\n          this.modelChanged.emit();\n        });\n    }\n  }\n\n  private dragLegend(): void {\n    this.legendXOffset += d3.event.dx;\n    this.legendYOffset += d3.event.dy;\n  }\n\n  // from https://bl.ocks.org/mbostock/3916621\n  private pathTween(d1, precision): Function {\n    return function() {\n      var path0 = this,\n          path1 = path0.cloneNode(),\n          n0 = path0.getTotalLength(),\n          n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength();\n\n      // Uniform sampling of distance based on specified precision.\n      var distances = [0], i = 0, dt = precision / Math.max(n0, n1);\n      while ((i += dt) < 1) distances.push(i);\n      distances.push(1);\n\n      // Compute point-interpolators at each distance.\n      var points = distances.map(function(t) {\n        var p0 = path0.getPointAtLength(t * n0),\n            p1 = path1.getPointAtLength(t * n1);\n        return d3.interpolate([p0.x, p0.y], [p1.x, p1.y]);\n      });\n\n      return function(t) {\n        return t < 1 ? \"M\" + points.map(function(p) { return p(t); }).join(\"L\") : d1;\n      };\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/plot/plot.component.ts","import { Injectable } from '@angular/core';\n\nimport { TTestService } from './t-test.service';\nimport { Project } from './project';\nimport { TTest } from './t-test';\n\n@Injectable()\nexport class ProjectFactoryService {\n  constructor(private ttestService: TTestService) {}\n\n  create(): Project {\n    return new Project(this.ttestService);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/project-factory.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".output {\\n  -webkit-box-ordinal-group: 2;\\n      -ms-flex-order: 1;\\n          order: 1;\\n}\\n\\n.output .range-slider {\\n  background-color: #d8ecf3;\\n  border-radius: 0.5em;\\n}\\n\\n.order-2 {\\n  -webkit-box-ordinal-group: 3;\\n      -ms-flex-order: 2;\\n          order: 2;\\n}\\n\\n.alt {\\n  margin-top: 5px;\\n}\\n\\n.alt .range-slider {\\n  background-color: #ffff99;\\n  border-radius: 0.5em;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/project-model/project-model.component.css\n// module id = ./src/app/t-test/project-model/project-model.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"project.models.length > 1\\\" class=\\\"form-inline justify-content-between mb-2\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"t-test-project-{{name}}-model-{{index}}-name\\\" class=\\\"mr-2\\\">Name:</label>\\n    <input id=\\\"t-test-project-{{name}}-model-{{index}}-name\\\" class=\\\"form-control\\\"\\n      name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.name\\\" />\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\n    (click)=\\\"onRemoveButtonClicked()\\\">\\n    <i class=\\\"fa fa-minus-circle\\\"></i> Remove\\n  </button>\\n</div>\\n\\n<div class=\\\"grow-horiz\\\">\\n  <div class=\\\"grow-vert range-slider\\\">\\n    <t-test-range-slider name=\\\"alpha\\\" label=\\\"Type I Error (&alpha;)\\\"\\n      [min]=\\\"min.alpha\\\" [max]=\\\"max.alpha\\\"\\n      [hard-min]=\\\"min.alpha\\\" [hard-max]=\\\"max.alpha\\\"\\n      [ngModel]=\\\"model.alpha | round\\\" (ngModelChange)=\\\"changeModel('alpha', $event)\\\">\\n      <ng-template rsHelp>\\n        The Type I error probability for a two sided test. This is the\\n        probability that we will falsely reject the null hypothesis.\\n      </ng-template>\\n    </t-test-range-slider>\\n  </div>\\n</div>\\n\\n<div class=\\\"grow-horiz\\\">\\n  <div class=\\\"grow-vert range-slider\\\">\\n    <t-test-range-slider name=\\\"sigma\\\" label=\\\"Std. deviation (&sigma;)\\\"\\n      [min]=\\\"min.sigma\\\" [max]=\\\"max.sigma\\\" step=\\\"0.1\\\"\\n      [hard-min]=\\\"1\\\"\\n      [ngModel]=\\\"model.sigma | round:1\\\" (ngModelChange)=\\\"changeModel('sigma', $event)\\\">\\n      <ng-template rsHelp>\\n        For independent tests σ is the within group standard deviation. For\\n        paired designs it is the standard deviation of difference in the\\n        response of matched pairs.\\n      </ng-template>\\n    </t-test-range-slider>\\n  </div>\\n</div>\\n\\n<ng-template [ngIf]=\\\"!isOutput('nByCI')\\\" [ngIfElse]=\\\"nByCI\\\">\\n  <div class=\\\"grow-horiz\\\" [class.output]=\\\"isOutput('delta')\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"delta\\\" label=\\\"Difference in population means (&delta;)\\\"\\n        [min]=\\\"min.delta\\\" [max]=\\\"max.delta\\\" step=\\\"0.1\\\"\\n        [is-output]=\\\"model.output == 'delta'\\\" [help-tpl]=\\\"deltaHelp\\\"\\n        [ngModel]=\\\"model.delta | round:1\\\" (ngModelChange)=\\\"changeModel('delta', $event)\\\">\\n      </t-test-range-slider>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"grow-horiz\\\" [class.output]=\\\"isOutput('power')\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"power\\\" label=\\\"Power\\\"\\n        [min]=\\\"min.power\\\" [max]=\\\"max.power\\\"\\n        [hard-min]=\\\"min.power\\\" [hard-max]=\\\"max.power\\\"\\n        [is-output]=\\\"model.output == 'power'\\\" [help-tpl]=\\\"powerHelp\\\"\\n        [ngModel]=\\\"model.power | round\\\" (ngModelChange)=\\\"changeModel('power', $event)\\\">\\n      </t-test-range-slider>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"grow-horiz\\\" [class.output]=\\\"isOutput('n')\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"n\\\" label=\\\"Sample size\\\"\\n        [min]=\\\"min.n\\\" [max]=\\\"max.n\\\" step=\\\"1\\\"\\n        [hard-min]=\\\"1\\\"\\n        [is-output]=\\\"model.output == 'n'\\\" [help-tpl]=\\\"nHelp\\\"\\n        [ngModel]=\\\"model.n | ceil\\\" (ngModelChange)=\\\"changeModel('n', $event)\\\">\\n      </t-test-range-slider>\\n      <t-test-range-slider name=\\\"ci\\\" label=\\\"95% confidence interval width\\\"\\n        [min]=\\\"min.ci\\\" [max]=\\\"max.ci\\\" step=\\\"0.1\\\"\\n        [hard-min]=\\\"1\\\"\\n        [is-output]=\\\"model.output == 'n'\\\" [help-tpl]=\\\"ciHelp\\\"\\n        [ngModel]=\\\"model.ci | round:1\\\" (ngModelChange)=\\\"changeModel('ci', $event)\\\">\\n      </t-test-range-slider>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #nByCI>\\n  <div class=\\\"grow-horiz\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"ci\\\" label=\\\"95% confidence interval width\\\"\\n        [min]=\\\"min.ci\\\" [max]=\\\"max.ci\\\" step=\\\"0.1\\\" [help-tpl]=\\\"ciHelp\\\"\\n        [ngModel]=\\\"model.ci | round:1\\\" (ngModelChange)=\\\"changeModel('ci', $event)\\\">\\n      </t-test-range-slider>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"grow-horiz output\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"n\\\" label=\\\"Sample size\\\"\\n        [min]=\\\"min.n\\\" [max]=\\\"max.n\\\" step=\\\"1\\\"\\n        [hard-min]=\\\"1\\\"\\n        [is-output]=\\\"true\\\" [help-tpl]=\\\"nHelp\\\"\\n        [ngModel]=\\\"model.n | ceil\\\" (ngModelChange)=\\\"changeModel('n', $event)\\\">\\n      </t-test-range-slider>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"grow-horiz order-2 alt\\\">\\n    <div class=\\\"grow-vert range-slider\\\">\\n      <t-test-range-slider name=\\\"delta\\\" label=\\\"Difference in population means (&delta;)\\\"\\n        [min]=\\\"min.delta\\\" [max]=\\\"max.delta\\\" step=\\\"0.1\\\" [help-tpl]=\\\"deltaHelp\\\"\\n        [ngModel]=\\\"model.delta | round:1\\\" (ngModelChange)=\\\"changeModel('delta', $event)\\\">\\n      </t-test-range-slider>\\n\\n      <t-test-range-slider name=\\\"power\\\" label=\\\"Power\\\"\\n        [min]=\\\"min.power\\\" [max]=\\\"max.power\\\"\\n        [hard-min]=\\\"min.power\\\" [hard-max]=\\\"max.power\\\"\\n        [is-output]=\\\"model.output == 'power'\\\" [help-tpl]=\\\"powerHelp\\\"\\n        [ngModel]=\\\"model.power | round\\\" (ngModelChange)=\\\"changeModel('power', $event)\\\">\\n      </t-test-range-slider>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #deltaHelp>\\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam enim nunc,\\n  rutrum at ligula id, tempor tincidunt nunc.\\n</ng-template>\\n<ng-template #powerHelp>\\n  For independent tests power is probability of correctly rejecting the\\n  null hypothesis of equal population means given n experimental\\n  patients, m control patients per experimental patient, a Type I error\\n  probability α and a true difference in population means of δ. For\\n  paired tests it is the probability of correctly rejecting the null\\n  hypothesis of equal population means given n pairs of patients, a Type\\n  I error probability α and a true difference in population means of δ.\\n</ng-template>\\n<ng-template #nHelp>\\n  For independent t-tests n is the number of experimental subjects. For\\n  pair test n is the number of pairs.\\n</ng-template>\\n<ng-template #ciHelp>\\n  Specifying the 95% confidence interval width will automatically calculate\\n  the sample size parameter.\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/project-model/project-model.component.html\n// module id = ./src/app/t-test/project-model/project-model.component.html\n// module chunks = main","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\n\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\nimport { TTest } from '../t-test';\nimport { Project } from '../project';\n\n@Component({\n  selector: 't-test-project-model',\n  templateUrl: './project-model.component.html',\n  styleUrls: ['./project-model.component.css']\n})\nexport class ProjectModelComponent implements OnInit {\n  @Input() project: Project;\n  @Input() index: number;\n  @Output() modelChanged = new EventEmitter();\n  @Output() remove = new EventEmitter();\n\n  model: TTest;\n  min: TTest;\n  max: TTest;\n  color: string;\n\n  constructor(\n    private plotOptions: PlotOptionsService,\n    private palette: PaletteService\n  ) { }\n\n  ngOnInit(): void {\n    this.model = this.project.getModel(this.index);\n    this.min = new TTest(this.model);\n    this.max = new TTest(this.model);\n\n    this.min.alpha = 0.01;\n    this.max.alpha = 0.99;\n\n    this.min.power = 0.01;\n    this.max.power = 0.99;\n\n    this.calculateSliderRange('n');\n    this.calculateSliderRange('ci');\n    this.calculateSliderRange('delta');\n    this.calculateSliderRange('sigma');\n\n    this.color = this.palette.getColor(this.index, this.plotOptions.paletteTheme);\n  }\n\n  private onRemoveButtonClicked(): void {\n    this.remove.emit();\n  }\n\n  private isOutput(name: string): boolean {\n    return this.model.output === name;\n  }\n\n  private changeModel(key: string, value: any): void {\n    this.project.updateModel(this.index, key, value).then(() => {\n      this.adjustMinMax();\n      this.modelChanged.emit();\n    });\n  }\n\n  private adjustMinMax(): void {\n    if (this.model.sigma < this.min.sigma) {\n      this.min.sigma = Math.floor(this.model.sigma);\n    } else if (this.model.sigma > this.max.sigma) {\n      this.max.sigma = Math.ceil(this.model.sigma);\n    }\n\n    if (this.model.delta < this.min.delta) {\n      this.min.delta = Math.floor(this.model.delta);\n    } else if (this.model.delta > this.max.delta) {\n      this.max.delta = Math.ceil(this.model.delta);\n    }\n\n    if (this.model.n < this.min.n) {\n      this.min.n = Math.floor(this.model.n);\n    } else if (this.model.n > this.max.n) {\n      this.max.n = Math.ceil(this.model.n);\n    }\n\n    if (this.model.ci < this.min.ci) {\n      this.min.ci = Math.floor(this.model.ci);\n    } else if (this.model.ci > this.max.ci) {\n      this.max.ci = Math.ceil(this.model.ci);\n    }\n  }\n\n  private calculateSliderRange(name: string): void {\n    let value = this.model[name];\n    let range = [value * 0.5, value * 1.5].sort((a, b) => a - b);\n    this.min[name] = range[0];\n    this.max[name] = range[1];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/project-model/project-model.component.ts","import { TTest } from './t-test';\nimport { Range } from './range';\nimport { Point } from './point';\nimport { TTestService, PlotDataRanges } from './t-test.service';\n\nexport class Project {\n  models: TTest[] = [];\n  selectedIndex: number = 0;\n  changeHistory: any[] = [];\n\n  nRange?: Range;\n  powerRange?: Range;\n  deltaRange?: Range;\n  pSpaceRange?: Range;\n\n  constructor(private ttestService: TTestService) {}\n\n  getOutput(): string {\n    if (this.models.length > 0) {\n      return this.models[0].output;\n    }\n    return '';\n  }\n\n  updatePlotData(): Promise<any> {\n    let ranges = {\n      nRange: this.nRange,\n      powerRange: this.powerRange,\n      deltaRange: this.deltaRange,\n      pSpaceRange: this.pSpaceRange\n    } as PlotDataRanges;\n\n    return this.ttestService.plotData(this.models, ranges).\n      then(result => {\n        result.forEach((data, i) => {\n          Object.assign(this.models[i], data);\n        });\n\n        let output = this.getOutput();\n        let nRange, powerRange, deltaRange;\n        for (let i = 0, ilen = this.models.length; i < ilen; i++) {\n          let model = this.models[i];\n          switch (output) {\n            case \"n\":\n            case \"nByCI\":\n              powerRange = this.makeXRange(model.nVsPower, this.nRange);\n              if (i == 0) {\n                this.powerRange = powerRange;\n              } else {\n                this.powerRange.combine(powerRange);\n              }\n\n              deltaRange = this.makeXRange(model.nVsDelta, this.nRange);\n              if (i == 0) {\n                this.deltaRange = deltaRange;\n              } else {\n                this.deltaRange.combine(deltaRange);\n              }\n              break;\n            case \"power\":\n              nRange = this.makeXRange(model.powerVsN, this.powerRange);\n              if (i == 0) {\n                this.nRange = nRange;\n              } else {\n                this.nRange.combine(nRange);\n              }\n              break;\n\n            case \"delta\":\n              powerRange = this.makeXRange(model.deltaVsPower, this.deltaRange);\n              if (i == 0) {\n                this.powerRange = powerRange;\n              } else {\n                this.powerRange.combine(powerRange);\n              }\n\n              nRange = this.makeXRange(model.deltaVsN, this.deltaRange);\n              if (i == 0) {\n                this.nRange = nRange;\n              } else {\n                this.nRange.combine(nRange);\n              }\n              break;\n          }\n        }\n      });\n  }\n\n  addModel(model: TTest): Promise<any> {\n    return this.ttestService.calculate(model).\n      then(result => {\n        let model = new TTest(result);\n        model.name = this.getModelName(this.models.length);\n        this.models.push(model);\n        this.calculateRanges();\n\n        this.changeHistory.push({\n          'type': 'add', 'index': this.models.length - 1,\n          'params': model.params()\n        });\n\n        return this.updatePlotData();\n      });\n  }\n\n  updateModel(index: number, key: string, value: any): Promise<any> {\n    let model = this.models[index];\n\n    let which = key;\n    let changes = { [key]: value };\n    if (key !== 'output') {\n      if (model.output === 'nByCI') {\n        if (key === 'delta') {\n          // delta was changed, so turn on \"deltaMode\"\n          changes.deltaMode = true;\n          which = 'power';\n        } else if (key === 'power') {\n          // power was changed, so turn off \"deltaMode\"\n          changes.deltaMode = false;\n        }\n      } else if (this.models[0].output !== 'n') {\n        if (key === 'ci') {\n          // 95% confidence interval width was changed, so turn on \"ciMode\"\n          changes.ciMode = true;\n          which = 'n';\n\n        } else if (key === 'n') {\n          // Sample size was changed, so turn off \"ciMode\"\n          changes.ciMode = false;\n        }\n      }\n    }\n\n    let models = [model];\n    if (key === \"output\") {\n      models = this.models;\n    }\n\n    models.forEach(m => { Object.assign(m, changes); });\n    return models.reduce((promise, model) => {\n      return promise.then(() => {\n        return this.ttestService.calculate(model);\n      }).then(result => {\n        Object.assign(model, result);\n      });\n    }, Promise.resolve()).then(() => {\n      this.calculateRanges();\n      this.changeHistory.push({\n        'type': 'change', 'index': index,\n        'key': key, 'params': model.params()\n      });\n      return this.updatePlotData();\n    });\n  }\n\n  removeModel(index: number): Promise<any> {\n    this.models.splice(index, 1);\n    this.changeHistory.push({\n      'type': 'remove', 'index': index\n    });\n    this.calculateRanges();\n    return this.updatePlotData();\n  }\n\n  getModel(index: number): TTest {\n    return this.models[index];\n  }\n\n  modelCount(): number {\n    return this.models.length;\n  }\n\n  calculateRanges(): any {\n    let nRange = [];\n    let powerRange = [];\n    let deltaRange = [];\n    let pSpaceRange = [];\n\n    let output = this.getOutput();\n    let values;\n    for (let i = 0, ilen = this.models.length; i < ilen; i++) {\n      let model = this.models[i];\n\n      switch (output) {\n        case \"n\": /* fall through */\n        case \"nByCI\":\n          // calculate n range\n          values = [model.n * 0.5, model.n * 1.5].sort((a, b) => a - b);\n          if (i == 0 || values[0] < nRange[0]) {\n            nRange[0] = values[0];\n          }\n          if (i == 0 || values[1] > nRange[1]) {\n            nRange[1] = values[1];\n          }\n          break;\n\n        case \"power\":\n          if (i == 0) {\n            powerRange = [0.01, 1];\n          }\n\n          // calculate delta range\n          values = [1.5 * model.sigma, -1.5 * model.sigma].sort((a, b) => a - b);\n          if (i == 0 || values[0] < deltaRange[0]) {\n            deltaRange[0] = values[0];\n          }\n          if (i == 0 || values[1] > deltaRange[1]) {\n            deltaRange[1] = values[1];\n          }\n          break;\n\n        case \"delta\":\n          // calculate delta range\n          values = [model.delta * 0.5, model.delta * 1.5].sort((a, b) => a - b);\n          if (i == 0 || values[0] < deltaRange[0]) {\n            deltaRange[0] = values[0];\n          }\n          if (i == 0 || values[1] > deltaRange[1]) {\n            deltaRange[1] = values[1];\n          }\n          break;\n      }\n\n      // calculate parameter space range\n      values = [1.5 * model.sigma, -1.5 * model.sigma].sort((a, b) => a - b);\n      if (i == 0 || values[0] < pSpaceRange[0]) {\n        pSpaceRange[0] = values[0];\n      }\n      if (i == 0 || values[1] > pSpaceRange[1]) {\n        pSpaceRange[1] = values[1];\n      }\n\n      values = [model.delta - (model.ci / 2), model.delta + (model.ci / 2)];\n      if (values[0] < pSpaceRange[0]) {\n        pSpaceRange[0] = values[0] - Math.abs(values[0] * 0.5);\n      }\n      if (values[1] > pSpaceRange[1]) {\n        pSpaceRange[1] = values[1] + Math.abs(values[1] * 0.5);\n      }\n    }\n\n    if (nRange.length > 0) {\n      this.nRange = new Range(nRange[0], nRange[1]);\n    } else {\n      this.nRange = undefined;\n    }\n\n    if (powerRange.length > 0) {\n      this.powerRange = new Range(powerRange[0], powerRange[1]);\n    } else {\n      this.powerRange = undefined;\n    }\n\n    if (deltaRange.length > 0) {\n      this.deltaRange = new Range(deltaRange[0], deltaRange[1]);\n    } else {\n      this.deltaRange = undefined;\n    }\n\n    if (pSpaceRange.length > 0) {\n      this.pSpaceRange = new Range(pSpaceRange[0], pSpaceRange[1]);\n    } else {\n      this.pSpaceRange = undefined;\n    }\n  }\n\n  describeChanges(changes: any, html = true): string {\n    let result;\n    if (changes.type == 'add') {\n      result = `Added model #${changes.index + 1}: <span class=\"code\">${this.paramsToString(changes.params)}</span>`;\n\n    } else if (changes.type == 'remove') {\n      result = `Removed model #${changes.index + 1}`;\n\n    } else if (changes.type == 'change') {\n      if (html) {\n        result = `Changed <span class=\"code\">${changes.key}</span> in model #${changes.index + 1}: <span class=\"code\">${this.paramsToString(changes.params)}</span>`;\n      } else {\n        result = `Changed ${changes.key} in model #${changes.index + 1}: ${this.paramsToString(changes.params)}`;\n      }\n    }\n    return result;\n  }\n\n  private paramsToString(params: any): string {\n    let result = [];\n    for (var key in params) {\n      if (key == 'ciMode' || key == 'deltaMode') {\n        continue;\n      }\n\n      let value = params[key];\n      if (typeof(value) === 'string') {\n        result.push(`\"${key}\": \"${params[key]}\"`);\n      } else {\n        result.push(`\"${key}\": ${params[key]}`);\n      }\n    }\n    return `{ ${result.join(', ')} }`;\n  }\n\n  private getModelName(index: number): string {\n    switch (index) {\n      case 0:\n        return \"Primary\";\n      case 1:\n        return \"Secondary\";\n      case 2:\n        return \"Tertiary\";\n      case 3:\n        return \"Quaternary\";\n      case 4:\n        return \"Quinary\";\n      case 5:\n        return \"Senary\";\n      case 6:\n        return \"Septenary\";\n      case 7:\n        return \"Octonary\";\n      case 8:\n        return \"Nonary\";\n      case 9:\n        return \"Denary\";\n    }\n    return `Line ${index + 1}`;\n  }\n\n  private makeXRange(data: Point[], yRange: Range): Range {\n    let minIndex = 0, maxIndex = data.length - 1;\n    for (let i = 1; i < data.length; i++) {\n      if (data[i].y >= yRange.min) {\n        minIndex = i;\n        break\n      }\n    }\n    for (let i = data.length - 2; i >= 0; i--) {\n      if (data[i].y <= yRange.max) {\n        maxIndex = i;\n        break;\n      }\n    }\n\n    let values = [data[minIndex].x, data[maxIndex].x].sort((a, b) => a - b);\n    return new Range(values[0], values[1]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/project.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".overview {\\n  text-align: right;\\n}\\n\\n.btn-secondary {\\n  padding: 0.3rem 0.3rem;\\n}\\n\\nul.nav {\\n  border-bottom: 0;\\n  z-index: 1;\\n}\\n\\nul.nav li.nav-item {\\n  margin-bottom: -1px;\\n}\\n\\nul.nav li.nav-item a.nav-link {\\n  cursor: pointer;\\n  background-color: #ddd;\\n  border-color: #bbb #bbb #aaa;\\n  font-size: x-large;\\n  padding: 0.25rem 0.75rem;\\n}\\n\\nul.nav li.nav-item a.nav-link.active {\\n  border-color: #aaa #aaa #f6f6f6;\\n  background-color: #f6f6f6;\\n}\\n\\n.project-model {\\n  display: none;\\n}\\n\\n.project-model.active {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: auto;\\n          flex: auto;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n\\n.project-model.tab {\\n  padding: 1rem 0.5rem 0 0.5rem;\\n  border: 1px solid #aaa;\\n  background-color: #f6f6f6;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/project/project.component.css\n// module id = ./src/app/t-test/project/project.component.css\n// module chunks = main","module.exports = \"<div class=\\\"grow-vert\\\">\\n  <div class=\\\"form-inline justify-content-between mb-2\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"t-test-project-{{name}}-output\\\" class=\\\"mr-2\\\">Output:</label>\\n      <select id=\\\"t-test-project-{{name}}-output\\\" class=\\\"form-control\\\" name=\\\"output\\\"\\n        [ngModel]=\\\"project.getOutput()\\\" (ngModelChange)=\\\"changeOutput($event)\\\">\\n        <option value=\\\"n\\\">Sample size by Power</option>\\n        <option value=\\\"nByCI\\\">Sample size by 95% CI</option>\\n        <option value=\\\"power\\\">Power</option>\\n        <option value=\\\"delta\\\">Detectable alternative</option>\\n      </select>\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addModel()\\\">\\n      <i class=\\\"fa fa-plus-circle\\\"></i> Add line\\n    </button>\\n  </div>\\n\\n  <ul *ngIf=\\\"project.models.length > 1\\\" class=\\\"nav nav-tabs mt-2\\\">\\n    <li *ngFor=\\\"let model of project.models; index as i; trackBy: trackByIndex\\\" class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link nav-model-link\\\" [class.active]=\\\"i == project.selectedIndex\\\"\\n        (click)=\\\"selectModel(i)\\\">\\n        <i class=\\\"fa fa-square\\\" [style.color]=\\\"getColor(i)\\\"></i>\\n      </a>\\n    </li>\\n  </ul>\\n\\n  <div *ngFor=\\\"let model of project.models; index as i\\\" class=\\\"project-model\\\"\\n    [class.active]=\\\"i == project.selectedIndex\\\"\\n    [class.tab]=\\\"project.models.length > 1\\\">\\n    <t-test-project-model [project]=\\\"project\\\" [index]=\\\"i\\\"\\n      (modelChanged)=\\\"onModelChanged()\\\" (remove)=\\\"onModelRemove(i)\\\">\\n    </t-test-project-model>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/project/project.component.html\n// module id = ./src/app/t-test/project/project.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { NgbTabset, NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PlotOptionsService } from '../plot-options.service';\nimport { PaletteService } from '../palette.service';\nimport { Project } from '../project';\nimport { TTest } from '../t-test';\n\n@Component({\n  selector: 't-test-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n  @Input() project: Project;\n  @Input() name: string;\n  @Output() projectChanged = new EventEmitter();\n  selectedModel: TTest;\n\n  @ViewChild('tabset') tabset: NgbTabset;\n\n  constructor(\n    private plotOptions: PlotOptionsService,\n    private palette: PaletteService\n  ) { }\n\n  ngOnInit(): void {\n    this.selectedModel = this.project.getModel(this.project.selectedIndex);\n  }\n\n  changeOutput(value: string): void {\n    this.project.updateModel(0, 'output', value).then(() => {\n      this.projectChanged.emit();\n    });\n  }\n\n  selectModel(index: number): void {\n    this.project.selectedIndex = index;\n    this.selectedModel = this.project.getModel(index);\n    this.projectChanged.emit();\n  }\n\n  addModel(): void {\n    let model = this.selectedModel.shallowClone();\n    this.project.addModel(model).then(() => {\n      this.project.selectedIndex = this.project.models.length - 1;\n      this.projectChanged.emit();\n    });\n  }\n\n  onModelRemove(index: number): void {\n    this.removeModel(index);\n  }\n\n  removeModel(index: number): void {\n    this.project.removeModel(index).then(() => {\n      if (this.project.selectedIndex >= this.project.models.length) {\n        this.project.selectedIndex--;\n      }\n      this.projectChanged.emit();\n    });\n  }\n\n  onModelChanged(): void {\n    this.projectChanged.emit();\n  }\n\n  trackByIndex(index: number, item: number): number {\n    return index;\n  }\n\n  getColor(index: number): string {\n    return this.palette.getColor(index, this.plotOptions.paletteTheme);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/project/project.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n}\\n\\ndiv.slider-group {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  padding: 5px;\\n  border-radius: 5px;\\n}\\n\\ndiv.slider-group .label span {\\n  font-weight: bold;\\n}\\n\\ndiv.slider-group .slider,\\ndiv.slider-group .number {\\n  padding-top: 2ex;\\n}\\ndiv.slider-group .add-remove {\\n  padding-top: 2.3ex;\\n}\\n\\ndiv.slider-group div.inputs input {\\n  width: 100%;\\n}\\n\\ndiv.slider-group div.slider {\\n  position: relative;\\n  padding-left: 0;\\n  padding-right: 0;\\n}\\n\\ndiv.slider-group div.slider input {\\n  display: block;\\n}\\n\\ndiv.slider-group div.slider div.min,\\ndiv.slider-group div.slider div.max {\\n  position: absolute;\\n  font-size: x-small;\\n  top: 0;\\n  background-color: #ddd;\\n  border-radius: 1ex;\\n  padding: 0.5ex;\\n}\\n\\ndiv.slider-group.output div.slider div.min,\\ndiv.slider-group.output div.slider div.max {\\n  background-color: #ccc;\\n}\\n\\ndiv.slider-group div.slider div.min {\\n  left: 0;\\n}\\n\\ndiv.slider-group div.slider div.max {\\n  right: 0;\\n}\\n\\n.fa {\\n  opacity: 0.7;\\n}\\n.fa:hover {\\n  opacity: 1;\\n}\\n.dot {\\n  color: red;\\n  opacity: 1;\\n}\\n\\n.palette-color .fa {\\n  opacity: 1;\\n}\\n\\nspan.error {\\n  color: red;\\n}\\n\\ninput.error {\\n  border: 2px solid red;\\n  color: red;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/range-slider/range-slider.component.css\n// module id = ./src/app/t-test/range-slider/range-slider.component.css\n// module chunks = main","module.exports = \"<div class=\\\"slider-group\\\">\\n  <ng-template [ngIf]=\\\"labelTpl\\\" [ngIfElse]=\\\"standardLabel\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"labelTpl\\\"></ng-template>\\n  </ng-template>\\n  <ng-template #standardLabel>\\n    <div class=\\\"label\\\" *ngIf=\\\"label\\\">\\n      {{label}}\\n      <span *ngIf=\\\"isOutput\\\">(Computed value)</span>\\n      <ng-template [ngIf]=\\\"helpTpl\\\">\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"rsHelp\\\" popoverTitle=\\\"{{label}}\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        <ng-template #rsHelp>\\n          <ng-template [ngTemplateOutlet]=\\\"helpTpl\\\"></ng-template>\\n        </ng-template>\\n      </ng-template>\\n      <i *ngIf=\\\"showDot\\\" class=\\\"fa fa-circle dot\\\"></i>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"inputs row\\\">\\n    <div class=\\\"col-sm-9\\\">\\n      <div class=\\\"slider\\\">\\n        <div class=\\\"min\\\">{{floor(min)}}</div>\\n        <input #range name=\\\"{{name}}\\\" type=\\\"range\\\" step=\\\"{{step}}\\\"\\n               min=\\\"{{min}}\\\" max=\\\"{{max}}\\\"\\n               [value]=\\\"value\\\"\\n               [disabled]=\\\"isOutput\\\"\\n               (change)=\\\"rangeChanged(range.value)\\\"\\n               (input)=\\\"rangeInput(range.value)\\\" />\\n        <div class=\\\"max\\\">{{ceil(max)}}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"number\\\">\\n        <input #number [class.error]=\\\"hasError\\\" name=\\\"{{name}}\\\" type=\\\"number\\\"\\n               step=\\\"{{step}}\\\" [min]=\\\"hardMin\\\" [max]=\\\"hardMax\\\" [value]=\\\"value\\\"\\n               [disabled]=\\\"isOutput\\\"\\n               (change)=\\\"numberChanged(number.value)\\\"\\n               (input)=\\\"numberInput(number.value)\\\"\\n               (blur)=\\\"blurred()\\\"\\n               [ngbPopover]=\\\"errorMsg\\\" triggers=\\\"manual\\\"\\n               container=\\\"body\\\" #errorPopover=\\\"ngbPopover\\\" />\\n        <ng-template #errorMsg>\\n          <span class=\\\"error\\\">Value is out of range ({{hardMin}}, {{hardMax}}).</span><br/>\\n          Current value: {{value}}\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/range-slider/range-slider.component.html\n// module id = ./src/app/t-test/range-slider/range-slider.component.html\n// module chunks = main","import { Component, Directive, Input, Output, ContentChild, ViewChild, TemplateRef, ElementRef, EventEmitter, OnInit, OnChanges, SimpleChanges, AfterContentInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\n\n@Directive({selector: 'ng-template[rsLabel]'})\nexport class RangeSliderLabel {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({selector: 'ng-template[rsHelp]'})\nexport class RangeSliderHelp {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Component({\n  selector: 't-test-range-slider',\n  templateUrl: './range-slider.component.html',\n  styleUrls: ['./range-slider.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RangeSliderComponent),\n      multi: true\n    }\n  ]\n})\nexport class RangeSliderComponent implements OnInit, OnChanges, AfterContentInit, ControlValueAccessor {\n  @Input() label: string;\n  @Input() name: string;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step = 0.01;\n  @Input('hard-min') hardMin: number;\n  @Input('hard-max') hardMax: number;\n  @Input('is-output') isOutput = false;\n  @Input('help-tpl') helpTpl: TemplateRef<any>;\n  @Input('label-tpl') labelTpl: TemplateRef<any>;\n  @Input('show-dot') showDot = false;\n  value: number;\n  hasError = false;\n  private changeCallback: any;\n  private inputSubject: Subject<string> = new Subject();\n  private dirty = false;\n\n  @ContentChild(RangeSliderLabel) rsLabelTpl: RangeSliderLabel;\n  @ContentChild(RangeSliderHelp) rsHelpTpl: RangeSliderHelp;\n  @ViewChild(\"errorPopover\") errorPopover: NgbPopover;\n  @ViewChild(\"number\") numberElement: ElementRef;\n  @ViewChild(\"range\") rangeElement: ElementRef;\n\n  ngOnInit(): void {\n    this.inputSubject.\n      debounceTime(400).\n      filter(value => {\n        // skip values when not dirty\n        return this.dirty;\n      }).\n      subscribe(value => {\n        this.trySetValue(value);\n      });\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.helpTpl && this.rsHelpTpl) {\n      this.helpTpl = this.rsHelpTpl.templateRef;\n    }\n    if (!this.labelTpl && this.rsLabelTpl) {\n      this.labelTpl = this.rsLabelTpl.templateRef;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('isOutput' in changes) {\n      let change = changes.isOutput;\n      if (change.previousValue === true && change.currentValue === false) {\n        // if isOutput changes from true to false, turn on the error message if\n        // the value is out of bounds\n        if (this.value < this.hardMin || this.value > this.hardMax) {\n          this.hasError = true;\n          this.errorPopover.open();\n        }\n      } else if (change.previousValue === false && change.currentValue === true) {\n        this.hasError = false;\n        this.errorPopover.close();\n      }\n    }\n  }\n\n  floor(n: number): number {\n    return Math.floor(n);\n  }\n\n  ceil(n: number): number {\n    return Math.ceil(n);\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.changeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n  }\n\n  rangeChanged(newValue: string): void {\n    this.trySetValue(newValue);\n  }\n\n  rangeInput(newValue: string): void {\n    this.dirty = true;\n    this.numberElement.nativeElement.value = newValue;\n    this.inputSubject.next(newValue);\n  }\n\n  numberChanged(newValue: string): void {\n    if (this.dirty) {\n      this.trySetValue(newValue);\n    }\n  }\n\n  numberInput(newValue: string): void {\n    this.dirty = true;\n    this.rangeElement.nativeElement.value = newValue;\n    this.inputSubject.next(newValue);\n  }\n\n  blurred(): void {\n    if (this.hasError) {\n      this.numberElement.nativeElement.value = this.value;\n      this.hasError = false;\n      this.errorPopover.close();\n    }\n  }\n\n  private trySetValue(newValue: string): void {\n    let value = parseFloat(newValue);\n    if (value < this.hardMin || value > this.hardMax) {\n      this.hasError = true;\n      this.errorPopover.open();\n    } else {\n      this.hasError = false;\n      this.errorPopover.close();\n      this.value = value;\n      this.propagateChange();\n    }\n    this.dirty = false;\n  }\n\n  private propagateChange(): void {\n    if (this.changeCallback) {\n      this.changeCallback(this.value);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/range-slider/range-slider.component.ts","export class Range {\n  constructor(public min: number, public max: number) {}\n\n  combine(other: Range): void {\n    if (other.min < this.min) {\n      this.min = other.min;\n    }\n    if (other.max > this.max) {\n      this.max = other.max;\n    }\n  }\n\n  toArray(): number[] {\n    return [this.min, this.max];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/range.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'reverse'\n})\nexport class ReversePipe implements PipeTransform {\n\n  transform(value: any[], args?: any): any[] {\n    return value.slice().reverse();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/reverse.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'round'\n})\nexport class RoundPipe implements PipeTransform {\n\n  transform(value: number, digits = 2): number {\n    let amount = 10 ** digits;\n    return Math.round(value * amount) / amount;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/round.pipe.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".overview {\\n  text-align: right;\\n}\\n\\n.btn-secondary {\\n  padding: 0.3rem 0.3rem;\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/start/start.component.css\n// module id = ./src/app/t-test/start/start.component.css\n// module chunks = main","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #startForm=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"output\\\">\\n      What do you want to know?\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary fa fa-question-circle\\\"\\n        (click)=\\\"toggleHelp()\\\"></button>\\n    </label>\\n    <select class=\\\"form-control\\\" id=\\\"output\\\"\\n            required\\n            [(ngModel)]=\\\"model.output\\\" name=\\\"output\\\">\\n      <option></option>\\n      <option value=\\\"n\\\">Sample size by Power</option>\\n      <option value=\\\"nByCI\\\">Sample size by 95% CI</option>\\n      <option value=\\\"power\\\">Power</option>\\n      <option value=\\\"delta\\\">Detectable alternative</option>\\n    </select>\\n  </div>\\n  <!--\\n  <div class=\\\"form-group\\\" *ngIf=\\\"model.output\\\">\\n    <label for=\\\"design\\\">Paired or independent?</label>\\n    <select class=\\\"form-control\\\" id=\\\"design\\\"\\n            required\\n            [(ngModel)]=\\\"model.design\\\" name=\\\"design\\\">\\n      <option></option>\\n      <option>Paired</option>\\n      <option>Independent</option>\\n    </select>\\n  </div>\\n  -->\\n  <div *ngIf=\\\"model.output\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"alpha\\\">\\n        Type I Error (&alpha;)\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"alphaHelp\\\" popoverTitle=\\\"Type I Error (&alpha;)\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </label>\\n      <input class=\\\"form-control\\\" id=\\\"alpha\\\"\\n             type=\\\"number\\\" step=\\\"0.01\\\" min=\\\"0.01\\\" max=\\\"0.99\\\"\\n             required\\n             [(ngModel)]=\\\"model.alpha\\\" name=\\\"alpha\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"sigma\\\">\\n        Standard deviation (&sigma;)\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"sigmaHelp\\\" popoverTitle=\\\"Standard deviation (&sigma;)\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </label>\\n      <input class=\\\"form-control\\\" id=\\\"sigma\\\"\\n             type=\\\"number\\\" step=\\\"0.1\\\" min=\\\"0.1\\\"\\n             required\\n             [(ngModel)]=\\\"model.sigma\\\" name=\\\"sigma\\\">\\n    </div>\\n    <div *ngIf=\\\"needDelta()\\\" class=\\\"form-group\\\">\\n      <label for=\\\"delta\\\">Difference in population means (&delta;)</label>\\n      <input class=\\\"form-control\\\" id=\\\"delta\\\"\\n             type=\\\"number\\\" step=\\\"0.1\\\"\\n             required\\n             [(ngModel)]=\\\"model.delta\\\" name=\\\"delta\\\">\\n    </div>\\n    <div *ngIf=\\\"needPower()\\\" class=\\\"form-group\\\">\\n      <label for=\\\"power\\\">\\n        Power\\n        <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n          [ngbPopover]=\\\"powerHelp\\\" popoverTitle=\\\"Power\\\"\\n          placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n      </label>\\n      <input class=\\\"form-control\\\" id=\\\"power\\\"\\n             type=\\\"number\\\" step=\\\"0.01\\\" min=\\\"0.01\\\" max=\\\"0.99\\\"\\n             required\\n             [(ngModel)]=\\\"model.power\\\" name=\\\"power\\\">\\n    </div>\\n    <div *ngIf=\\\"needCI()\\\" class=\\\"form-group\\\">\\n      <label for=\\\"ci\\\">95% confidence interval width</label>\\n      <input class=\\\"form-control\\\" id=\\\"ci\\\" type=\\\"number\\\" required\\n             [(ngModel)]=\\\"model.ci\\\" name=\\\"ci\\\">\\n    </div>\\n    <ng-template [ngIf]=\\\"needNOrCI()\\\">\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"ciMode\\\" id=\\\"ciMode-false\\\"\\n                 [(ngModel)]=\\\"model.ciMode\\\" [value]=\\\"false\\\">\\n          Sample size\\n          <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n            [ngbPopover]=\\\"nHelp\\\" popoverTitle=\\\"Sample size\\\"\\n            placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </label>\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"ciMode\\\" id=\\\"ciMode-true\\\"\\n                 [(ngModel)]=\\\"model.ciMode\\\" [value]=\\\"true\\\">\\n          95% confidence interval width\\n        </label>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input *ngIf=\\\"!model.ciMode\\\"\\n               class=\\\"form-control\\\" id=\\\"n\\\"\\n               type=\\\"number\\\" min=\\\"1\\\"\\n               required\\n               [(ngModel)]=\\\"model.n\\\" name=\\\"n\\\">\\n        <input *ngIf=\\\"model.ciMode\\\"\\n               class=\\\"form-control\\\" id=\\\"ci\\\"\\n               type=\\\"number\\\" min=\\\"1\\\" step=\\\"0.1\\\"\\n               required\\n               [(ngModel)]=\\\"model.ci\\\" name=\\\"ci\\\">\\n      </div>\\n\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"needPowerOrDelta()\\\">\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"deltaMode\\\" id=\\\"deltaMode-false\\\"\\n                 [(ngModel)]=\\\"model.deltaMode\\\" [value]=\\\"false\\\">\\n          Power\\n          <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"\\n            [ngbPopover]=\\\"powerHelp\\\" popoverTitle=\\\"Power\\\"\\n            placement=\\\"right\\\" triggers=\\\"hover\\\" container=\\\"body\\\"></i>\\n        </label>\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"deltaMode\\\" id=\\\"deltaMode-true\\\"\\n                 [(ngModel)]=\\\"model.deltaMode\\\" [value]=\\\"true\\\">\\n          Difference in population means (&delta;)\\n        </label>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input *ngIf=\\\"!model.deltaMode\\\"\\n               class=\\\"form-control\\\" id=\\\"power\\\"\\n               type=\\\"number\\\" step=\\\"0.01\\\" min=\\\"0.01\\\" max=\\\"0.99\\\"\\n               required\\n               [(ngModel)]=\\\"model.power\\\" name=\\\"power\\\">\\n        <input *ngIf=\\\"model.deltaMode\\\"\\n               class=\\\"form-control\\\" id=\\\"delta\\\"\\n               type=\\\"number\\\" step=\\\"0.1\\\"\\n               required\\n               [(ngModel)]=\\\"model.delta\\\" name=\\\"delta\\\">\\n      </div>\\n\\n    </ng-template>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"\\n            [disabled]=\\\"!startForm.form.valid\\\">\\n      Calculate\\n    </button>\\n  </div>\\n</form>\\n<ng-template #alphaHelp>\\n  The Type I error probability for a two sided test. This is the\\n  probability that we will falsely reject the null hypothesis.\\n</ng-template>\\n<ng-template #sigmaHelp>\\n  For independent tests σ is the within group standard deviation. For\\n  paired designs it is the standard deviation of difference in the\\n  response of matched pairs.\\n</ng-template>\\n<ng-template #powerHelp>\\n  For independent tests power is probability of correctly rejecting the null\\n  hypothesis of equal population means given n experimental patients, m control\\n  patients per experimental patient, a Type I error probability α and a true\\n  difference in population means of δ. For paired tests it is the probability\\n  of correctly rejecting the null hypothesis of equal population means given n\\n  pairs of patients, a Type I error probability α and a true difference in\\n  population means of δ.\\n</ng-template>\\n<ng-template #nHelp>\\n  For independent t-tests n is the number of experimental subjects. For\\n  pair test n is the number of pairs.\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/start/start.component.html\n// module id = ./src/app/t-test/start/start.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TTest } from '../t-test';\n\n@Component({\n  selector: 't-test-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent {\n  @Input() model: TTest;\n  @Output() onCalculate = new EventEmitter();\n  @Output() onToggleHelp = new EventEmitter();\n\n  constructor() {}\n\n  toggleHelp(): void {\n    this.onToggleHelp.emit();\n  }\n\n  needDelta(): boolean {\n    return this.model.output !== 'delta' && this.model.output !== 'nByCI';\n  }\n\n  needPower(): boolean {\n    return this.model.output !== 'power' && this.model.output !== 'nByCI';\n  }\n\n  needPowerOrDelta(): boolean {\n    return this.model.output === 'nByCI';\n  }\n\n  needCI(): boolean {\n    return this.model.output === 'nByCI';\n  }\n\n  needNOrCI(): boolean {\n    return this.model.output !== 'n' && this.model.output !== 'nByCI';\n  }\n\n  onSubmit(): void {\n    this.onCalculate.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/start/start.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n\\n#t-test {\\n}\\n\\n#t-test-main {\\n  /*min-height: 85vh;*/\\n}\\n\\n#t-test-sidebar {\\n  background-color: #e5e5e5;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  padding: 10px;\\n  /*margin: 10px;*/\\n  position: relative;\\n}\\n\\n#t-test-sidebar .overview {\\n  position: absolute;\\n  top: 5px;\\n  right: 5px;\\n}\\n\\n.plot-buttons {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  font-size: large;\\n  z-index: 99;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 0;\\n      -ms-flex: 0 0 auto;\\n          flex: 0 0 auto;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n.plot-buttons button {\\n  padding: 0.4rem 0;\\n  margin: 0.2rem 0;\\n  width: 2.4rem;\\n}\\n\\n#t-test-sidebar ngb-tabset {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: auto;\\n          flex: auto;\\n  /*width: 100%;*/\\n}\\n\\n#t-test-sidebar t-test-start,\\n#t-test-sidebar t-test-project {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: auto;\\n          flex: auto;\\n}\\n\\n#t-test-footer {\\n  margin: 20px 0;\\n  padding: 20px;\\n  text-align: center;\\n}\\n#t-test-footer img {\\n  margin: auto;\\n  display: block;\\n}\\n#t-test-footer div.build {\\n  margin-top: 5px;\\n  font-size: smaller;\\n}\\n\\n.block-selection * {\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/t-test.component.css\n// module id = ./src/app/t-test/t-test.component.css\n// module chunks = main","module.exports = \"<div id=\\\"t-test\\\" class=\\\"d-flex flex-column h-100\\\"\\n  [class.block-selection]=\\\"blockSelection\\\" (mouseup)=\\\"onMouseUp()\\\">\\n\\n  <div id=\\\"t-test-main\\\" class=\\\"row d-flex\\\" style=\\\"flex: 1 0 auto\\\">\\n    <div class=\\\"col-4 d-flex flex-column justify-content-between\\\">\\n      <div id=\\\"t-test-sidebar\\\" class=\\\"d-flex flex-row\\\" style=\\\"flex: auto\\\">\\n        <div class=\\\"overview\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"toggleHelp('overview')\\\">\\n            Overview <i class=\\\"fa fa-question-circle\\\"></i>\\n          </button>\\n        </div>\\n        <ngb-tabset #tabset (tabChange)=\\\"onTabChange($event)\\\">\\n          <ngb-tab title=\\\"Start\\\" id=\\\"t-test-start\\\">\\n            <ng-template ngbTabContent>\\n              <t-test-start [model]=\\\"newModel\\\"\\n                (onCalculate)=\\\"calculate()\\\"\\n                (onToggleHelp)=\\\"toggleHelp('start')\\\">\\n              </t-test-start>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab *ngFor=\\\"let project of projects; let i = index\\\"\\n            title=\\\"Test {{i+1}}\\\" id=\\\"t-test-{{i+1}}\\\">\\n            <ng-template ngbTabContent>\\n              <t-test-project name=\\\"{{i}}\\\" [project]=\\\"project\\\"\\n                (projectChanged)=\\\"onProjectChanged()\\\">\\n              </t-test-project>\\n            </ng-template>\\n          </ngb-tab>\\n        </ngb-tabset>\\n      </div>\\n\\n      <div id=\\\"t-test-footer\\\" class=\\\"d-flex flex-column\\\">\\n        <img src=\\\"assets/biostat.jpg\\\">\\n        <div class=\\\"build\\\">\\n          Build version: {{ commitHash }} ({{ buildTimestamp | date }})\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <div class=\\\"plot-buttons\\\" *ngIf=\\\"selectedProject\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"togglePlotOptions()\\\" title=\\\"Toggle plot options\\\">\\n          <i class=\\\"fa fa-cog\\\"></i>\\n        </button>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"save()\\\" title=\\\"Export plots\\\">\\n          <i class=\\\"fa fa-floppy-o\\\"></i>\\n        </button>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"toggleHoverBox()\\\" title=\\\"Toggle hover box\\\">\\n          <i class=\\\"fa\\\" [class.fa-cubes]=\\\"hoverBoxEnabled\\\" [class.fa-cube]=\\\"!hoverBoxEnabled\\\"></i>\\n        </button>\\n      </div>\\n      <t-test-output-pane #outputPane\\n        [project]=\\\"selectedProject\\\"\\n        [hover-disabled]=\\\"!hoverBoxEnabled\\\"\\n        (modelChanged)=\\\"onModelChanged()\\\">\\n      </t-test-output-pane>\\n    </div>\\n  </div>\\n  <t-test-draggable-dialog #helpDialog\\n    [title]=\\\"helpTitles[helpTopic]\\\"\\n    start-x-offset=\\\"33%\\\" start-y-offset=\\\"55px\\\"\\n    (drag-start)=\\\"onChildDragStarted()\\\"\\n    (drag-end)=\\\"onChildDragEnded()\\\">\\n    <t-test-help [topic]=\\\"helpTopic\\\"></t-test-help>\\n  </t-test-draggable-dialog>\\n  <t-test-draggable-dialog #plotOptionsDialog\\n    title=\\\"Plot options\\\"\\n    start-x-offset=\\\"5%\\\" start-y-offset=\\\"55px\\\"\\n    (drag-start)=\\\"onChildDragStarted()\\\"\\n    (drag-end)=\\\"onChildDragEnded()\\\">\\n    <t-test-plot-options [project]=\\\"selectedProject\\\"\\n      (optionsChanged)=\\\"onPlotOptionsChanged()\\\">\\n    </t-test-plot-options>\\n  </t-test-draggable-dialog>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/t-test/t-test.component.html\n// module id = ./src/app/t-test/t-test.component.html\n// module chunks = main","import { Component, ViewChild, HostListener, OnInit, AfterViewInit } from '@angular/core';\nimport { NgbTabset, NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switch';\n\nimport { TTest } from './t-test';\nimport { Project } from './project';\nimport { ProjectFactoryService } from './project-factory.service';\n\nimport { DraggableDialogComponent } from './draggable-dialog/draggable-dialog.component'\nimport { OutputPaneComponent } from './output-pane/output-pane.component'\n\n// globals from webpack\ndeclare var __COMMITHASH__: string;\ndeclare var __BUILDTIMESTAMP__: string;\n\n@Component({\n  selector: 't-test-root',\n  templateUrl: './t-test.component.html',\n  styleUrls: ['./t-test.component.css']\n})\nexport class TTestComponent implements OnInit {\n  newModel = new TTest();\n  projects: Project[] = [];\n  selectedProject: Project;\n  commitHash = __COMMITHASH__.substr(0, 7);\n  buildTimestamp = __BUILDTIMESTAMP__;\n\n  helpTitles = {\n    'overview': 'PS Overview',\n    'start': 'PS Start Tab'\n  };\n  helpTopic = 'overview';\n  blockSelection = false;\n  hoverBoxEnabled = true;\n\n  @ViewChild('plotOptionsDialog') plotOptionsDialog: DraggableDialogComponent;\n  @ViewChild('helpDialog') helpDialog: DraggableDialogComponent;\n  @ViewChild('tabset') tabset: NgbTabset;\n  @ViewChild('outputPane') outputPane: OutputPaneComponent;\n\n  constructor(private projectFactory: ProjectFactoryService) {}\n\n  ngOnInit(): void {\n    /* Add example project */\n    let model = new TTest({\n      output: 'n', alpha: 0.05, power: 0.8, delta: 5, sigma: 10, n: 32\n    });\n    this.createProject(model, false);\n  }\n\n  toggleHelp(topic: string): void {\n    if (this.helpDialog.isOpen() && this.helpTopic == topic) {\n      this.helpDialog.close();\n    } else {\n      this.helpTopic = topic;\n      this.helpDialog.open();\n    }\n  }\n\n  togglePlotOptions(): void {\n    this.plotOptionsDialog.toggle();\n  }\n\n  toggleHoverBox(): void {\n    this.hoverBoxEnabled = !this.hoverBoxEnabled;\n  }\n\n  save(): void {\n    this.outputPane.openSaveDialog();\n  }\n\n  calculate(): void {\n    this.createProject(this.newModel);\n  }\n\n  createProject(model: TTest, select = true): void {\n    let project = this.projectFactory.create();\n    project.addModel(model).\n      then(result => {\n        this.projects.push(project);\n\n        if (select) {\n          setTimeout(() => {\n            this.tabset.select(`t-test-${this.projects.length}`);\n          }, 1);\n        }\n      }).\n      catch(err => console.error(err));\n  }\n\n  onTabChange(event: NgbTabChangeEvent): void {\n    let md = event.nextId.match(/\\d+/);\n    if (md) {\n      let index = parseInt(md[0]) - 1;\n      this.selectedProject = this.projects[index];\n    } else {\n      this.selectedProject = undefined;\n    }\n  }\n\n  onProjectChanged(): void {\n    this.outputPane.updateProject();\n    this.outputPane.redrawPlots();\n  }\n\n  onModelChanged(): void {\n    this.outputPane.redrawPlots();\n  }\n\n  onPlotOptionsChanged(): void {\n    this.outputPane.redrawPlots();\n  }\n\n  onMouseUp(): void {\n    this.plotOptionsDialog.stopDragging();\n  }\n\n  onChildDragStarted(): void {\n    this.blockSelection = true;\n  }\n\n  onChildDragEnded(): void {\n    this.blockSelection = false;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event): void {\n    this.outputPane.resize();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/t-test.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TTestService } from './t-test.service';\nimport { PlotOptionsService } from './plot-options.service';\nimport { PaletteService } from './palette.service';\nimport { ProjectFactoryService } from './project-factory.service';\nimport { ExportService } from './export.service';\n\nimport { TTestComponent } from './t-test.component';\nimport { StartComponent } from './start/start.component';\nimport { RangeSliderComponent, RangeSliderLabel, RangeSliderHelp } from './range-slider/range-slider.component';\nimport { ProjectComponent } from './project/project.component';\nimport { OutputPaneComponent } from './output-pane/output-pane.component';\nimport { HelpComponent } from './help/help.component';\nimport { PlotOptionsComponent } from './plot-options/plot-options.component';\nimport { PlotComponent } from './plot/plot.component';\nimport { BottomPlotComponent } from './bottom-plot/bottom-plot.component';\nimport { ExportPlotsComponent } from './export-plots/export-plots.component';\nimport { DraggableDialogComponent } from './draggable-dialog/draggable-dialog.component';\n\nimport { RoundPipe } from './round.pipe';\nimport { CeilPipe } from './ceil.pipe';\nimport { ReversePipe } from './reverse.pipe';\nimport { FormatFixedPipe } from './format-fixed.pipe';\nimport { ProjectModelComponent } from './project-model/project-model.component';\n\nconst routes: Routes = [\n  { path: 't-test', component: TTestComponent },\n];\n\n@NgModule({\n  declarations: [\n    TTestComponent,\n    StartComponent,\n    RangeSliderComponent,\n    RangeSliderLabel,\n    RangeSliderHelp,\n    ProjectComponent,\n    OutputPaneComponent,\n    HelpComponent,\n    PlotOptionsComponent,\n    PlotComponent,\n    BottomPlotComponent,\n    ExportPlotsComponent,\n    DraggableDialogComponent,\n    RoundPipe,\n    CeilPipe,\n    ReversePipe,\n    FormatFixedPipe,\n    ProjectModelComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule,\n    NgbModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [\n    TTestService,\n    PlotOptionsService,\n    PaletteService,\n    ProjectFactoryService,\n    ExportService\n  ],\n  entryComponents: [\n    ExportPlotsComponent\n  ]\n})\nexport class TTestModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/t-test.module.ts","import { Injectable } from '@angular/core';\nimport {\n  Headers,\n  RequestOptions,\n  Http,\n  ResponseContentType\n} from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { environment } from '../../environments/environment';\nimport { Range } from './range';\nimport { TTest } from './t-test';\n\nexport interface PlotDataRanges {\n  nRange?: Range;\n  powerRange?: Range;\n  deltaRange?: Range;\n  pSpaceRange?: Range;\n};\n\n@Injectable()\nexport class TTestService {\n  private apiUrl = `${environment.apiUrl}/ttests`;\n\n  constructor(private http: Http) { }\n\n  calculate(model: TTest): Promise<any> {\n    let url = `${this.apiUrl}/calc`;\n    let params = model.params();\n\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let requestOptions = new RequestOptions({ headers: headers });\n    return this.http.\n      post(url, JSON.stringify(params), requestOptions).\n      toPromise().\n      then(response => response.json()).\n      catch(this.handleError);\n  }\n\n  plotData(models: TTest[], ranges: PlotDataRanges): Promise<any> {\n    let url = `${this.apiUrl}/plotData`;\n    let params = {\n      models: models.map(m => m.params()),\n      ranges: ranges\n    };\n\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let requestOptions = new RequestOptions({ headers: headers });\n    return this.http.\n      post(url, JSON.stringify(params), requestOptions).\n      toPromise().\n      then(response => response.json()).\n      catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/t-test.service.ts","import { Point } from './point';\nimport { Range } from './range';\n\nexport class TTest {\n  name: string;\n\n  // params\n  output: string;\n  alpha: number;\n  sigma: number;\n  delta?: number;\n  power?: number;\n  n?: number;\n  ci?: number;\n  ciMode = false;\n  deltaMode = false;\n\n  // data\n  nVsPower?: Point[];\n  nVsDelta?: Point[];\n  powerVsN?: Point[];\n  powerVsDelta?: Point[];\n  deltaVsPower?: Point[];\n  deltaVsN?: Point[];\n  sampDist?: Point[];\n\n  constructor(attribs?: any) {\n    if (attribs) {\n      this.output = attribs.output;\n      this.alpha = attribs.alpha;\n      this.sigma = attribs.sigma;\n      this.delta = attribs.delta;\n      this.power = attribs.power;\n      this.n = attribs.n;\n      this.ci = attribs.ci;\n      this.nVsPower = attribs.nVsPower;\n      this.nVsDelta = attribs.nVsDelta;\n      this.powerVsN = attribs.powerVsN;\n      this.powerVsDelta = attribs.powerVsDelta;\n      this.deltaVsPower = attribs.deltaVsPower;\n      this.deltaVsN = attribs.deltaVsN;\n      this.sampDist = attribs.sampDist;\n    }\n  }\n\n  precisionRange(): Range {\n    return new Range(\n      this.delta - (this.ci / 2),\n      this.delta + (this.ci / 2)\n    );\n  }\n\n  interpretation(): string {\n    let alpha = this.alpha.toFixed(2);\n    let sigma = this.sigma.toFixed(2);\n    let delta = this.delta.toFixed(2);\n    let n = Math.ceil(this.n);\n    let power = this.power.toFixed(2);\n    let result;\n    if (this.output == 'n' || this.output == 'nByCI') {\n      result = `\n        We are planning a study of a continuous response variable from matched\n        pairs of study subjects. Prior data indicate that the difference in the\n        response of matched pairs is normally distributed with standard\n        deviation ${sigma}. If the true difference in the mean response of\n        matched pairs is ${delta}, we will need to study ${n} pairs of subjects\n        to be able to reject the null hypothesis that this response difference\n        is zero with probability (power) ${power}. The Type I error probability\n        associated with this test of this null hypothesis is ${alpha}.\n      `;\n    } else if (this.output == 'power') {\n      result = `\n        We are planning a study with ${n} pairs of subjects. Prior data\n        indicate that the difference in the response of matched pairs is\n        normally distributed with standard deviation ${sigma}. If the true\n        difference in the mean response of matched pairs is ${delta}, we will\n        be able to reject the null hypothesis that this response difference is\n        zero with probability (power) ${power}. The Type I error probability\n        associated with this test of this null hypothesis is ${alpha}.\n      `;\n    } else if (this.output == 'delta') {\n      result = `\n        We are planning a study with ${n} pairs of subjects. Prior data\n        indicate that the difference in the response of matched pairs is\n        normally distributed with standard deviation ${sigma}. We will be able\n        to detect a true difference in the mean response of matched pairs of\n        -${delta} or ${delta} with probability (power) ${power}. The Type I\n        error probability associated with this test of the null hypothesis that\n        this response difference is zero is ${alpha}.\n      `;\n    }\n    return result.replace(/\\s+/g, \" \").trim();\n  }\n\n  params(): any {\n    let result: any = {\n      output: this.output, alpha: this.alpha, sigma: this.sigma,\n      delta: this.delta, power: this.power, n: this.n, ci: this.ci,\n      ciMode: this.ciMode, deltaMode: this.deltaMode\n    };\n    return result;\n  }\n\n  shallowClone(): TTest {\n    return Object.assign(new TTest(), this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/t-test/t-test.ts","export const environment = {\n  production: true,\n  apiUrl: \"/ps-backend\",\n  baseHref: \"/ps/\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}